//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MaterialCore {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("core_v2DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class core_v2DataSet : global::System.Data.DataSet {
        
        private MaterialesEmbarquesDataTable tableMaterialesEmbarques;
        
        private MaterialesEmbarquesTransportistaDataTable tableMaterialesEmbarquesTransportista;
        
        private MaterialesEmbarquesTipoEmbarqueDataTable tableMaterialesEmbarquesTipoEmbarque;
        
        private MaterialesCostoDataTable tableMaterialesCosto;
        
        private usersDataTable tableusers;
        
        private users_menusDataTable tableusers_menus;
        
        private EmbarquesZodiacDataTable tableEmbarquesZodiac;
        
        private sku_escanearDataTable tablesku_escanear;
        
        private ai_Reporte_Bultos_V2DataTable tableai_Reporte_Bultos_V2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public core_v2DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected core_v2DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MaterialesEmbarques"] != null)) {
                    base.Tables.Add(new MaterialesEmbarquesDataTable(ds.Tables["MaterialesEmbarques"]));
                }
                if ((ds.Tables["MaterialesEmbarquesTransportista"] != null)) {
                    base.Tables.Add(new MaterialesEmbarquesTransportistaDataTable(ds.Tables["MaterialesEmbarquesTransportista"]));
                }
                if ((ds.Tables["MaterialesEmbarquesTipoEmbarque"] != null)) {
                    base.Tables.Add(new MaterialesEmbarquesTipoEmbarqueDataTable(ds.Tables["MaterialesEmbarquesTipoEmbarque"]));
                }
                if ((ds.Tables["MaterialesCosto"] != null)) {
                    base.Tables.Add(new MaterialesCostoDataTable(ds.Tables["MaterialesCosto"]));
                }
                if ((ds.Tables["users"] != null)) {
                    base.Tables.Add(new usersDataTable(ds.Tables["users"]));
                }
                if ((ds.Tables["users_menus"] != null)) {
                    base.Tables.Add(new users_menusDataTable(ds.Tables["users_menus"]));
                }
                if ((ds.Tables["EmbarquesZodiac"] != null)) {
                    base.Tables.Add(new EmbarquesZodiacDataTable(ds.Tables["EmbarquesZodiac"]));
                }
                if ((ds.Tables["sku_escanear"] != null)) {
                    base.Tables.Add(new sku_escanearDataTable(ds.Tables["sku_escanear"]));
                }
                if ((ds.Tables["ai_Reporte_Bultos_V2"] != null)) {
                    base.Tables.Add(new ai_Reporte_Bultos_V2DataTable(ds.Tables["ai_Reporte_Bultos_V2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesEmbarquesDataTable MaterialesEmbarques {
            get {
                return this.tableMaterialesEmbarques;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesEmbarquesTransportistaDataTable MaterialesEmbarquesTransportista {
            get {
                return this.tableMaterialesEmbarquesTransportista;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesEmbarquesTipoEmbarqueDataTable MaterialesEmbarquesTipoEmbarque {
            get {
                return this.tableMaterialesEmbarquesTipoEmbarque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesCostoDataTable MaterialesCosto {
            get {
                return this.tableMaterialesCosto;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usersDataTable users {
            get {
                return this.tableusers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public users_menusDataTable users_menus {
            get {
                return this.tableusers_menus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmbarquesZodiacDataTable EmbarquesZodiac {
            get {
                return this.tableEmbarquesZodiac;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sku_escanearDataTable sku_escanear {
            get {
                return this.tablesku_escanear;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ai_Reporte_Bultos_V2DataTable ai_Reporte_Bultos_V2 {
            get {
                return this.tableai_Reporte_Bultos_V2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            core_v2DataSet cln = ((core_v2DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MaterialesEmbarques"] != null)) {
                    base.Tables.Add(new MaterialesEmbarquesDataTable(ds.Tables["MaterialesEmbarques"]));
                }
                if ((ds.Tables["MaterialesEmbarquesTransportista"] != null)) {
                    base.Tables.Add(new MaterialesEmbarquesTransportistaDataTable(ds.Tables["MaterialesEmbarquesTransportista"]));
                }
                if ((ds.Tables["MaterialesEmbarquesTipoEmbarque"] != null)) {
                    base.Tables.Add(new MaterialesEmbarquesTipoEmbarqueDataTable(ds.Tables["MaterialesEmbarquesTipoEmbarque"]));
                }
                if ((ds.Tables["MaterialesCosto"] != null)) {
                    base.Tables.Add(new MaterialesCostoDataTable(ds.Tables["MaterialesCosto"]));
                }
                if ((ds.Tables["users"] != null)) {
                    base.Tables.Add(new usersDataTable(ds.Tables["users"]));
                }
                if ((ds.Tables["users_menus"] != null)) {
                    base.Tables.Add(new users_menusDataTable(ds.Tables["users_menus"]));
                }
                if ((ds.Tables["EmbarquesZodiac"] != null)) {
                    base.Tables.Add(new EmbarquesZodiacDataTable(ds.Tables["EmbarquesZodiac"]));
                }
                if ((ds.Tables["sku_escanear"] != null)) {
                    base.Tables.Add(new sku_escanearDataTable(ds.Tables["sku_escanear"]));
                }
                if ((ds.Tables["ai_Reporte_Bultos_V2"] != null)) {
                    base.Tables.Add(new ai_Reporte_Bultos_V2DataTable(ds.Tables["ai_Reporte_Bultos_V2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMaterialesEmbarques = ((MaterialesEmbarquesDataTable)(base.Tables["MaterialesEmbarques"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesEmbarques != null)) {
                    this.tableMaterialesEmbarques.InitVars();
                }
            }
            this.tableMaterialesEmbarquesTransportista = ((MaterialesEmbarquesTransportistaDataTable)(base.Tables["MaterialesEmbarquesTransportista"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesEmbarquesTransportista != null)) {
                    this.tableMaterialesEmbarquesTransportista.InitVars();
                }
            }
            this.tableMaterialesEmbarquesTipoEmbarque = ((MaterialesEmbarquesTipoEmbarqueDataTable)(base.Tables["MaterialesEmbarquesTipoEmbarque"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesEmbarquesTipoEmbarque != null)) {
                    this.tableMaterialesEmbarquesTipoEmbarque.InitVars();
                }
            }
            this.tableMaterialesCosto = ((MaterialesCostoDataTable)(base.Tables["MaterialesCosto"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesCosto != null)) {
                    this.tableMaterialesCosto.InitVars();
                }
            }
            this.tableusers = ((usersDataTable)(base.Tables["users"]));
            if ((initTable == true)) {
                if ((this.tableusers != null)) {
                    this.tableusers.InitVars();
                }
            }
            this.tableusers_menus = ((users_menusDataTable)(base.Tables["users_menus"]));
            if ((initTable == true)) {
                if ((this.tableusers_menus != null)) {
                    this.tableusers_menus.InitVars();
                }
            }
            this.tableEmbarquesZodiac = ((EmbarquesZodiacDataTable)(base.Tables["EmbarquesZodiac"]));
            if ((initTable == true)) {
                if ((this.tableEmbarquesZodiac != null)) {
                    this.tableEmbarquesZodiac.InitVars();
                }
            }
            this.tablesku_escanear = ((sku_escanearDataTable)(base.Tables["sku_escanear"]));
            if ((initTable == true)) {
                if ((this.tablesku_escanear != null)) {
                    this.tablesku_escanear.InitVars();
                }
            }
            this.tableai_Reporte_Bultos_V2 = ((ai_Reporte_Bultos_V2DataTable)(base.Tables["ai_Reporte_Bultos_V2"]));
            if ((initTable == true)) {
                if ((this.tableai_Reporte_Bultos_V2 != null)) {
                    this.tableai_Reporte_Bultos_V2.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "core_v2DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/core_v2DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMaterialesEmbarques = new MaterialesEmbarquesDataTable();
            base.Tables.Add(this.tableMaterialesEmbarques);
            this.tableMaterialesEmbarquesTransportista = new MaterialesEmbarquesTransportistaDataTable();
            base.Tables.Add(this.tableMaterialesEmbarquesTransportista);
            this.tableMaterialesEmbarquesTipoEmbarque = new MaterialesEmbarquesTipoEmbarqueDataTable();
            base.Tables.Add(this.tableMaterialesEmbarquesTipoEmbarque);
            this.tableMaterialesCosto = new MaterialesCostoDataTable();
            base.Tables.Add(this.tableMaterialesCosto);
            this.tableusers = new usersDataTable();
            base.Tables.Add(this.tableusers);
            this.tableusers_menus = new users_menusDataTable();
            base.Tables.Add(this.tableusers_menus);
            this.tableEmbarquesZodiac = new EmbarquesZodiacDataTable();
            base.Tables.Add(this.tableEmbarquesZodiac);
            this.tablesku_escanear = new sku_escanearDataTable();
            base.Tables.Add(this.tablesku_escanear);
            this.tableai_Reporte_Bultos_V2 = new ai_Reporte_Bultos_V2DataTable();
            base.Tables.Add(this.tableai_Reporte_Bultos_V2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesEmbarques() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesEmbarquesTransportista() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesEmbarquesTipoEmbarque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesCosto() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusers_menus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmbarquesZodiac() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesku_escanear() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeai_Reporte_Bultos_V2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            core_v2DataSet ds = new core_v2DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MaterialesEmbarquesRowChangeEventHandler(object sender, MaterialesEmbarquesRowChangeEvent e);
        
        public delegate void MaterialesEmbarquesTransportistaRowChangeEventHandler(object sender, MaterialesEmbarquesTransportistaRowChangeEvent e);
        
        public delegate void MaterialesEmbarquesTipoEmbarqueRowChangeEventHandler(object sender, MaterialesEmbarquesTipoEmbarqueRowChangeEvent e);
        
        public delegate void MaterialesCostoRowChangeEventHandler(object sender, MaterialesCostoRowChangeEvent e);
        
        public delegate void usersRowChangeEventHandler(object sender, usersRowChangeEvent e);
        
        public delegate void users_menusRowChangeEventHandler(object sender, users_menusRowChangeEvent e);
        
        public delegate void EmbarquesZodiacRowChangeEventHandler(object sender, EmbarquesZodiacRowChangeEvent e);
        
        public delegate void sku_escanearRowChangeEventHandler(object sender, sku_escanearRowChangeEvent e);
        
        public delegate void ai_Reporte_Bultos_V2RowChangeEventHandler(object sender, ai_Reporte_Bultos_V2RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesEmbarquesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnfechaCaptura;
            
            private global::System.Data.DataColumn columnnoTrailer;
            
            private global::System.Data.DataColumn columntransportista;
            
            private global::System.Data.DataColumn columnnoPaletas;
            
            private global::System.Data.DataColumn columnnoFactura;
            
            private global::System.Data.DataColumn columnpackingList;
            
            private global::System.Data.DataColumn columncosto;
            
            private global::System.Data.DataColumn columncomentarios;
            
            private global::System.Data.DataColumn columntipoEmbarque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesDataTable() {
                this.TableName = "MaterialesEmbarques";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEmbarquesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesEmbarquesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaCapturaColumn {
                get {
                    return this.columnfechaCaptura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noTrailerColumn {
                get {
                    return this.columnnoTrailer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transportistaColumn {
                get {
                    return this.columntransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noPaletasColumn {
                get {
                    return this.columnnoPaletas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noFacturaColumn {
                get {
                    return this.columnnoFactura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn packingListColumn {
                get {
                    return this.columnpackingList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costoColumn {
                get {
                    return this.columncosto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn comentariosColumn {
                get {
                    return this.columncomentarios;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoEmbarqueColumn {
                get {
                    return this.columntipoEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesRow this[int index] {
                get {
                    return ((MaterialesEmbarquesRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesEmbarquesRowChangeEventHandler MaterialesEmbarquesRowChanging;
            
            public event MaterialesEmbarquesRowChangeEventHandler MaterialesEmbarquesRowChanged;
            
            public event MaterialesEmbarquesRowChangeEventHandler MaterialesEmbarquesRowDeleting;
            
            public event MaterialesEmbarquesRowChangeEventHandler MaterialesEmbarquesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesEmbarquesRow(MaterialesEmbarquesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesRow AddMaterialesEmbarquesRow(int id, System.DateTime fechaCaptura, string noTrailer, string transportista, int noPaletas, string noFactura, string packingList, decimal costo, string comentarios, string tipoEmbarque) {
                MaterialesEmbarquesRow rowMaterialesEmbarquesRow = ((MaterialesEmbarquesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        fechaCaptura,
                        noTrailer,
                        transportista,
                        noPaletas,
                        noFactura,
                        packingList,
                        costo,
                        comentarios,
                        tipoEmbarque};
                rowMaterialesEmbarquesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesEmbarquesRow);
                return rowMaterialesEmbarquesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesEmbarquesDataTable cln = ((MaterialesEmbarquesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesEmbarquesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnfechaCaptura = base.Columns["fechaCaptura"];
                this.columnnoTrailer = base.Columns["noTrailer"];
                this.columntransportista = base.Columns["transportista"];
                this.columnnoPaletas = base.Columns["noPaletas"];
                this.columnnoFactura = base.Columns["noFactura"];
                this.columnpackingList = base.Columns["packingList"];
                this.columncosto = base.Columns["costo"];
                this.columncomentarios = base.Columns["comentarios"];
                this.columntipoEmbarque = base.Columns["tipoEmbarque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnfechaCaptura = new global::System.Data.DataColumn("fechaCaptura", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaCaptura);
                this.columnnoTrailer = new global::System.Data.DataColumn("noTrailer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoTrailer);
                this.columntransportista = new global::System.Data.DataColumn("transportista", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransportista);
                this.columnnoPaletas = new global::System.Data.DataColumn("noPaletas", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoPaletas);
                this.columnnoFactura = new global::System.Data.DataColumn("noFactura", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoFactura);
                this.columnpackingList = new global::System.Data.DataColumn("packingList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpackingList);
                this.columncosto = new global::System.Data.DataColumn("costo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncosto);
                this.columncomentarios = new global::System.Data.DataColumn("comentarios", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomentarios);
                this.columntipoEmbarque = new global::System.Data.DataColumn("tipoEmbarque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoEmbarque);
                this.columnid.AllowDBNull = false;
                this.columnnoTrailer.MaxLength = 50;
                this.columntransportista.MaxLength = 50;
                this.columnnoFactura.MaxLength = 50;
                this.columnpackingList.MaxLength = 50;
                this.columncomentarios.MaxLength = 250;
                this.columntipoEmbarque.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesRow NewMaterialesEmbarquesRow() {
                return ((MaterialesEmbarquesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesEmbarquesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesEmbarquesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesEmbarquesRowChanged != null)) {
                    this.MaterialesEmbarquesRowChanged(this, new MaterialesEmbarquesRowChangeEvent(((MaterialesEmbarquesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesEmbarquesRowChanging != null)) {
                    this.MaterialesEmbarquesRowChanging(this, new MaterialesEmbarquesRowChangeEvent(((MaterialesEmbarquesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesEmbarquesRowDeleted != null)) {
                    this.MaterialesEmbarquesRowDeleted(this, new MaterialesEmbarquesRowChangeEvent(((MaterialesEmbarquesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesEmbarquesRowDeleting != null)) {
                    this.MaterialesEmbarquesRowDeleting(this, new MaterialesEmbarquesRowChangeEvent(((MaterialesEmbarquesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesEmbarquesRow(MaterialesEmbarquesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesEmbarquesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesEmbarquesTransportistaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntransportista;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTransportistaDataTable() {
                this.TableName = "MaterialesEmbarquesTransportista";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEmbarquesTransportistaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesEmbarquesTransportistaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transportistaColumn {
                get {
                    return this.columntransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTransportistaRow this[int index] {
                get {
                    return ((MaterialesEmbarquesTransportistaRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesEmbarquesTransportistaRowChangeEventHandler MaterialesEmbarquesTransportistaRowChanging;
            
            public event MaterialesEmbarquesTransportistaRowChangeEventHandler MaterialesEmbarquesTransportistaRowChanged;
            
            public event MaterialesEmbarquesTransportistaRowChangeEventHandler MaterialesEmbarquesTransportistaRowDeleting;
            
            public event MaterialesEmbarquesTransportistaRowChangeEventHandler MaterialesEmbarquesTransportistaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesEmbarquesTransportistaRow(MaterialesEmbarquesTransportistaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTransportistaRow AddMaterialesEmbarquesTransportistaRow(string transportista) {
                MaterialesEmbarquesTransportistaRow rowMaterialesEmbarquesTransportistaRow = ((MaterialesEmbarquesTransportistaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        transportista};
                rowMaterialesEmbarquesTransportistaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesEmbarquesTransportistaRow);
                return rowMaterialesEmbarquesTransportistaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesEmbarquesTransportistaDataTable cln = ((MaterialesEmbarquesTransportistaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesEmbarquesTransportistaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntransportista = base.Columns["transportista"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntransportista = new global::System.Data.DataColumn("transportista", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransportista);
                this.columntransportista.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTransportistaRow NewMaterialesEmbarquesTransportistaRow() {
                return ((MaterialesEmbarquesTransportistaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesEmbarquesTransportistaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesEmbarquesTransportistaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesEmbarquesTransportistaRowChanged != null)) {
                    this.MaterialesEmbarquesTransportistaRowChanged(this, new MaterialesEmbarquesTransportistaRowChangeEvent(((MaterialesEmbarquesTransportistaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesEmbarquesTransportistaRowChanging != null)) {
                    this.MaterialesEmbarquesTransportistaRowChanging(this, new MaterialesEmbarquesTransportistaRowChangeEvent(((MaterialesEmbarquesTransportistaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesEmbarquesTransportistaRowDeleted != null)) {
                    this.MaterialesEmbarquesTransportistaRowDeleted(this, new MaterialesEmbarquesTransportistaRowChangeEvent(((MaterialesEmbarquesTransportistaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesEmbarquesTransportistaRowDeleting != null)) {
                    this.MaterialesEmbarquesTransportistaRowDeleting(this, new MaterialesEmbarquesTransportistaRowChangeEvent(((MaterialesEmbarquesTransportistaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesEmbarquesTransportistaRow(MaterialesEmbarquesTransportistaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesEmbarquesTransportistaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesEmbarquesTipoEmbarqueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntipoEmbarque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTipoEmbarqueDataTable() {
                this.TableName = "MaterialesEmbarquesTipoEmbarque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEmbarquesTipoEmbarqueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesEmbarquesTipoEmbarqueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoEmbarqueColumn {
                get {
                    return this.columntipoEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTipoEmbarqueRow this[int index] {
                get {
                    return ((MaterialesEmbarquesTipoEmbarqueRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesEmbarquesTipoEmbarqueRowChangeEventHandler MaterialesEmbarquesTipoEmbarqueRowChanging;
            
            public event MaterialesEmbarquesTipoEmbarqueRowChangeEventHandler MaterialesEmbarquesTipoEmbarqueRowChanged;
            
            public event MaterialesEmbarquesTipoEmbarqueRowChangeEventHandler MaterialesEmbarquesTipoEmbarqueRowDeleting;
            
            public event MaterialesEmbarquesTipoEmbarqueRowChangeEventHandler MaterialesEmbarquesTipoEmbarqueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesEmbarquesTipoEmbarqueRow(MaterialesEmbarquesTipoEmbarqueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTipoEmbarqueRow AddMaterialesEmbarquesTipoEmbarqueRow(string tipoEmbarque) {
                MaterialesEmbarquesTipoEmbarqueRow rowMaterialesEmbarquesTipoEmbarqueRow = ((MaterialesEmbarquesTipoEmbarqueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        tipoEmbarque};
                rowMaterialesEmbarquesTipoEmbarqueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesEmbarquesTipoEmbarqueRow);
                return rowMaterialesEmbarquesTipoEmbarqueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesEmbarquesTipoEmbarqueDataTable cln = ((MaterialesEmbarquesTipoEmbarqueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesEmbarquesTipoEmbarqueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntipoEmbarque = base.Columns["tipoEmbarque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntipoEmbarque = new global::System.Data.DataColumn("tipoEmbarque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoEmbarque);
                this.columntipoEmbarque.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTipoEmbarqueRow NewMaterialesEmbarquesTipoEmbarqueRow() {
                return ((MaterialesEmbarquesTipoEmbarqueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesEmbarquesTipoEmbarqueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesEmbarquesTipoEmbarqueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesEmbarquesTipoEmbarqueRowChanged != null)) {
                    this.MaterialesEmbarquesTipoEmbarqueRowChanged(this, new MaterialesEmbarquesTipoEmbarqueRowChangeEvent(((MaterialesEmbarquesTipoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesEmbarquesTipoEmbarqueRowChanging != null)) {
                    this.MaterialesEmbarquesTipoEmbarqueRowChanging(this, new MaterialesEmbarquesTipoEmbarqueRowChangeEvent(((MaterialesEmbarquesTipoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesEmbarquesTipoEmbarqueRowDeleted != null)) {
                    this.MaterialesEmbarquesTipoEmbarqueRowDeleted(this, new MaterialesEmbarquesTipoEmbarqueRowChangeEvent(((MaterialesEmbarquesTipoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesEmbarquesTipoEmbarqueRowDeleting != null)) {
                    this.MaterialesEmbarquesTipoEmbarqueRowDeleting(this, new MaterialesEmbarquesTipoEmbarqueRowChangeEvent(((MaterialesEmbarquesTipoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesEmbarquesTipoEmbarqueRow(MaterialesEmbarquesTipoEmbarqueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesEmbarquesTipoEmbarqueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesCostoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncosto;
            
            private global::System.Data.DataColumn columntipoCosto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesCostoDataTable() {
                this.TableName = "MaterialesCosto";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesCostoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesCostoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costoColumn {
                get {
                    return this.columncosto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoCostoColumn {
                get {
                    return this.columntipoCosto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesCostoRow this[int index] {
                get {
                    return ((MaterialesCostoRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesCostoRowChangeEventHandler MaterialesCostoRowChanging;
            
            public event MaterialesCostoRowChangeEventHandler MaterialesCostoRowChanged;
            
            public event MaterialesCostoRowChangeEventHandler MaterialesCostoRowDeleting;
            
            public event MaterialesCostoRowChangeEventHandler MaterialesCostoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesCostoRow(MaterialesCostoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesCostoRow AddMaterialesCostoRow(decimal costo, string tipoCosto) {
                MaterialesCostoRow rowMaterialesCostoRow = ((MaterialesCostoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        costo,
                        tipoCosto};
                rowMaterialesCostoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesCostoRow);
                return rowMaterialesCostoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesCostoDataTable cln = ((MaterialesCostoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesCostoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncosto = base.Columns["costo"];
                this.columntipoCosto = base.Columns["tipoCosto"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncosto = new global::System.Data.DataColumn("costo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncosto);
                this.columntipoCosto = new global::System.Data.DataColumn("tipoCosto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoCosto);
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columntipoCosto.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesCostoRow NewMaterialesCostoRow() {
                return ((MaterialesCostoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesCostoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesCostoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesCostoRowChanged != null)) {
                    this.MaterialesCostoRowChanged(this, new MaterialesCostoRowChangeEvent(((MaterialesCostoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesCostoRowChanging != null)) {
                    this.MaterialesCostoRowChanging(this, new MaterialesCostoRowChangeEvent(((MaterialesCostoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesCostoRowDeleted != null)) {
                    this.MaterialesCostoRowDeleted(this, new MaterialesCostoRowChangeEvent(((MaterialesCostoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesCostoRowDeleting != null)) {
                    this.MaterialesCostoRowDeleting(this, new MaterialesCostoRowChangeEvent(((MaterialesCostoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesCostoRow(MaterialesCostoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesCostoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnclogin;
            
            private global::System.Data.DataColumn columnbactive;
            
            private global::System.Data.DataColumn columnnid_user;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersDataTable() {
                this.TableName = "users";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cloginColumn {
                get {
                    return this.columnclogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bactiveColumn {
                get {
                    return this.columnbactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_userColumn {
                get {
                    return this.columnnid_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersRow this[int index] {
                get {
                    return ((usersRow)(this.Rows[index]));
                }
            }
            
            public event usersRowChangeEventHandler usersRowChanging;
            
            public event usersRowChangeEventHandler usersRowChanged;
            
            public event usersRowChangeEventHandler usersRowDeleting;
            
            public event usersRowChangeEventHandler usersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddusersRow(usersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersRow AddusersRow(string clogin, bool bactive) {
                usersRow rowusersRow = ((usersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        clogin,
                        bactive,
                        null};
                rowusersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusersRow);
                return rowusersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersRow FindBynid_user(int nid_user) {
                return ((usersRow)(this.Rows.Find(new object[] {
                            nid_user})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usersDataTable cln = ((usersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnclogin = base.Columns["clogin"];
                this.columnbactive = base.Columns["bactive"];
                this.columnnid_user = base.Columns["nid_user"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnclogin = new global::System.Data.DataColumn("clogin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclogin);
                this.columnbactive = new global::System.Data.DataColumn("bactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbactive);
                this.columnnid_user = new global::System.Data.DataColumn("nid_user", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_user);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnid_user}, true));
                this.columnclogin.MaxLength = 15;
                this.columnbactive.AllowDBNull = false;
                this.columnnid_user.AutoIncrement = true;
                this.columnnid_user.AllowDBNull = false;
                this.columnnid_user.ReadOnly = true;
                this.columnnid_user.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersRow NewusersRow() {
                return ((usersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usersRowChanged != null)) {
                    this.usersRowChanged(this, new usersRowChangeEvent(((usersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usersRowChanging != null)) {
                    this.usersRowChanging(this, new usersRowChangeEvent(((usersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usersRowDeleted != null)) {
                    this.usersRowDeleted(this, new usersRowChangeEvent(((usersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usersRowDeleting != null)) {
                    this.usersRowDeleting(this, new usersRowChangeEvent(((usersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveusersRow(usersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class users_menusDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnid_user;
            
            private global::System.Data.DataColumn columnnid_person;
            
            private global::System.Data.DataColumn columnclogin;
            
            private global::System.Data.DataColumn columncemail;
            
            private global::System.Data.DataColumn columncid_menu;
            
            private global::System.Data.DataColumn columncmenu;
            
            private global::System.Data.DataColumn columnbactive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public users_menusDataTable() {
                this.TableName = "users_menus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal users_menusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected users_menusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_userColumn {
                get {
                    return this.columnnid_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_personColumn {
                get {
                    return this.columnnid_person;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cloginColumn {
                get {
                    return this.columnclogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cemailColumn {
                get {
                    return this.columncemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cid_menuColumn {
                get {
                    return this.columncid_menu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cmenuColumn {
                get {
                    return this.columncmenu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bactiveColumn {
                get {
                    return this.columnbactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public users_menusRow this[int index] {
                get {
                    return ((users_menusRow)(this.Rows[index]));
                }
            }
            
            public event users_menusRowChangeEventHandler users_menusRowChanging;
            
            public event users_menusRowChangeEventHandler users_menusRowChanged;
            
            public event users_menusRowChangeEventHandler users_menusRowDeleting;
            
            public event users_menusRowChangeEventHandler users_menusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusers_menusRow(users_menusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public users_menusRow Addusers_menusRow(int nid_user, int nid_person, string clogin, string cemail, string cid_menu, string cmenu, bool bactive) {
                users_menusRow rowusers_menusRow = ((users_menusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nid_user,
                        nid_person,
                        clogin,
                        cemail,
                        cid_menu,
                        cmenu,
                        bactive};
                rowusers_menusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusers_menusRow);
                return rowusers_menusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                users_menusDataTable cln = ((users_menusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new users_menusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnid_user = base.Columns["nid_user"];
                this.columnnid_person = base.Columns["nid_person"];
                this.columnclogin = base.Columns["clogin"];
                this.columncemail = base.Columns["cemail"];
                this.columncid_menu = base.Columns["cid_menu"];
                this.columncmenu = base.Columns["cmenu"];
                this.columnbactive = base.Columns["bactive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnid_user = new global::System.Data.DataColumn("nid_user", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_user);
                this.columnnid_person = new global::System.Data.DataColumn("nid_person", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_person);
                this.columnclogin = new global::System.Data.DataColumn("clogin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclogin);
                this.columncemail = new global::System.Data.DataColumn("cemail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncemail);
                this.columncid_menu = new global::System.Data.DataColumn("cid_menu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncid_menu);
                this.columncmenu = new global::System.Data.DataColumn("cmenu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmenu);
                this.columnbactive = new global::System.Data.DataColumn("bactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbactive);
                this.columnnid_user.AllowDBNull = false;
                this.columnnid_person.AllowDBNull = false;
                this.columnclogin.AllowDBNull = false;
                this.columnclogin.MaxLength = 15;
                this.columncemail.AllowDBNull = false;
                this.columncemail.MaxLength = 100;
                this.columncid_menu.AllowDBNull = false;
                this.columncid_menu.MaxLength = 15;
                this.columncmenu.AllowDBNull = false;
                this.columncmenu.MaxLength = 50;
                this.columnbactive.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public users_menusRow Newusers_menusRow() {
                return ((users_menusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new users_menusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(users_menusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.users_menusRowChanged != null)) {
                    this.users_menusRowChanged(this, new users_menusRowChangeEvent(((users_menusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.users_menusRowChanging != null)) {
                    this.users_menusRowChanging(this, new users_menusRowChangeEvent(((users_menusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.users_menusRowDeleted != null)) {
                    this.users_menusRowDeleted(this, new users_menusRowChangeEvent(((users_menusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.users_menusRowDeleting != null)) {
                    this.users_menusRowDeleting(this, new users_menusRowChangeEvent(((users_menusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusers_menusRow(users_menusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "users_menusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmbarquesZodiacDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnreceived;
            
            private global::System.Data.DataColumn columncarrierTruckNumber;
            
            private global::System.Data.DataColumn columndepartureDate;
            
            private global::System.Data.DataColumn columncoNumber;
            
            private global::System.Data.DataColumn columnlineNumber;
            
            private global::System.Data.DataColumn columnpoNumber;
            
            private global::System.Data.DataColumn columntrackingNumber;
            
            private global::System.Data.DataColumn columncommentsChih;
            
            private global::System.Data.DataColumn columncarrier;
            
            private global::System.Data.DataColumn columnurgent;
            
            private global::System.Data.DataColumn columnpathTrackingNumber;
            
            private global::System.Data.DataColumn columnarrivalDate;
            
            private global::System.Data.DataColumn columnunloadedDate;
            
            private global::System.Data.DataColumn columnpickupDate;
            
            private global::System.Data.DataColumn columnpickupDateRequested;
            
            private global::System.Data.DataColumn columnpicker;
            
            private global::System.Data.DataColumn columncommentsRBI;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnbillingCharges;
            
            private global::System.Data.DataColumn columnregistroRBI;
            
            private global::System.Data.DataColumn columnusuarioRBI;
            
            private global::System.Data.DataColumn columnregistroChih;
            
            private global::System.Data.DataColumn columnusuarioChih;
            
            private global::System.Data.DataColumn columndone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacDataTable() {
                this.TableName = "EmbarquesZodiac";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmbarquesZodiacDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmbarquesZodiacDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn receivedColumn {
                get {
                    return this.columnreceived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn carrierTruckNumberColumn {
                get {
                    return this.columncarrierTruckNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn departureDateColumn {
                get {
                    return this.columndepartureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coNumberColumn {
                get {
                    return this.columncoNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineNumberColumn {
                get {
                    return this.columnlineNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poNumberColumn {
                get {
                    return this.columnpoNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trackingNumberColumn {
                get {
                    return this.columntrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentsChihColumn {
                get {
                    return this.columncommentsChih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn carrierColumn {
                get {
                    return this.columncarrier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urgentColumn {
                get {
                    return this.columnurgent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pathTrackingNumberColumn {
                get {
                    return this.columnpathTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn arrivalDateColumn {
                get {
                    return this.columnarrivalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unloadedDateColumn {
                get {
                    return this.columnunloadedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pickupDateColumn {
                get {
                    return this.columnpickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pickupDateRequestedColumn {
                get {
                    return this.columnpickupDateRequested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pickerColumn {
                get {
                    return this.columnpicker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentsRBIColumn {
                get {
                    return this.columncommentsRBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billingChargesColumn {
                get {
                    return this.columnbillingCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn registroRBIColumn {
                get {
                    return this.columnregistroRBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usuarioRBIColumn {
                get {
                    return this.columnusuarioRBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn registroChihColumn {
                get {
                    return this.columnregistroChih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usuarioChihColumn {
                get {
                    return this.columnusuarioChih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn doneColumn {
                get {
                    return this.columndone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacRow this[int index] {
                get {
                    return ((EmbarquesZodiacRow)(this.Rows[index]));
                }
            }
            
            public event EmbarquesZodiacRowChangeEventHandler EmbarquesZodiacRowChanging;
            
            public event EmbarquesZodiacRowChangeEventHandler EmbarquesZodiacRowChanged;
            
            public event EmbarquesZodiacRowChangeEventHandler EmbarquesZodiacRowDeleting;
            
            public event EmbarquesZodiacRowChangeEventHandler EmbarquesZodiacRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmbarquesZodiacRow(EmbarquesZodiacRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacRow AddEmbarquesZodiacRow(
                        bool received, 
                        string carrierTruckNumber, 
                        System.DateTime departureDate, 
                        string coNumber, 
                        string lineNumber, 
                        string poNumber, 
                        string trackingNumber, 
                        string commentsChih, 
                        string carrier, 
                        bool urgent, 
                        string pathTrackingNumber, 
                        System.DateTime arrivalDate, 
                        System.DateTime unloadedDate, 
                        System.DateTime pickupDate, 
                        System.DateTime pickupDateRequested, 
                        string picker, 
                        string commentsRBI, 
                        string billingCharges, 
                        System.DateTime registroRBI, 
                        string usuarioRBI, 
                        System.DateTime registroChih, 
                        string usuarioChih, 
                        bool done) {
                EmbarquesZodiacRow rowEmbarquesZodiacRow = ((EmbarquesZodiacRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        received,
                        carrierTruckNumber,
                        departureDate,
                        coNumber,
                        lineNumber,
                        poNumber,
                        trackingNumber,
                        commentsChih,
                        carrier,
                        urgent,
                        pathTrackingNumber,
                        arrivalDate,
                        unloadedDate,
                        pickupDate,
                        pickupDateRequested,
                        picker,
                        commentsRBI,
                        null,
                        billingCharges,
                        registroRBI,
                        usuarioRBI,
                        registroChih,
                        usuarioChih,
                        done};
                rowEmbarquesZodiacRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmbarquesZodiacRow);
                return rowEmbarquesZodiacRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacRow FindByid(int id) {
                return ((EmbarquesZodiacRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmbarquesZodiacDataTable cln = ((EmbarquesZodiacDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmbarquesZodiacDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnreceived = base.Columns["received"];
                this.columncarrierTruckNumber = base.Columns["carrierTruckNumber"];
                this.columndepartureDate = base.Columns["departureDate"];
                this.columncoNumber = base.Columns["coNumber"];
                this.columnlineNumber = base.Columns["lineNumber"];
                this.columnpoNumber = base.Columns["poNumber"];
                this.columntrackingNumber = base.Columns["trackingNumber"];
                this.columncommentsChih = base.Columns["commentsChih"];
                this.columncarrier = base.Columns["carrier"];
                this.columnurgent = base.Columns["urgent"];
                this.columnpathTrackingNumber = base.Columns["pathTrackingNumber"];
                this.columnarrivalDate = base.Columns["arrivalDate"];
                this.columnunloadedDate = base.Columns["unloadedDate"];
                this.columnpickupDate = base.Columns["pickupDate"];
                this.columnpickupDateRequested = base.Columns["pickupDateRequested"];
                this.columnpicker = base.Columns["picker"];
                this.columncommentsRBI = base.Columns["commentsRBI"];
                this.columnid = base.Columns["id"];
                this.columnbillingCharges = base.Columns["billingCharges"];
                this.columnregistroRBI = base.Columns["registroRBI"];
                this.columnusuarioRBI = base.Columns["usuarioRBI"];
                this.columnregistroChih = base.Columns["registroChih"];
                this.columnusuarioChih = base.Columns["usuarioChih"];
                this.columndone = base.Columns["done"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnreceived = new global::System.Data.DataColumn("received", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreceived);
                this.columncarrierTruckNumber = new global::System.Data.DataColumn("carrierTruckNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncarrierTruckNumber);
                this.columndepartureDate = new global::System.Data.DataColumn("departureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartureDate);
                this.columncoNumber = new global::System.Data.DataColumn("coNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoNumber);
                this.columnlineNumber = new global::System.Data.DataColumn("lineNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlineNumber);
                this.columnpoNumber = new global::System.Data.DataColumn("poNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoNumber);
                this.columntrackingNumber = new global::System.Data.DataColumn("trackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrackingNumber);
                this.columncommentsChih = new global::System.Data.DataColumn("commentsChih", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommentsChih);
                this.columncarrier = new global::System.Data.DataColumn("carrier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncarrier);
                this.columnurgent = new global::System.Data.DataColumn("urgent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurgent);
                this.columnpathTrackingNumber = new global::System.Data.DataColumn("pathTrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpathTrackingNumber);
                this.columnarrivalDate = new global::System.Data.DataColumn("arrivalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarrivalDate);
                this.columnunloadedDate = new global::System.Data.DataColumn("unloadedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunloadedDate);
                this.columnpickupDate = new global::System.Data.DataColumn("pickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickupDate);
                this.columnpickupDateRequested = new global::System.Data.DataColumn("pickupDateRequested", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickupDateRequested);
                this.columnpicker = new global::System.Data.DataColumn("picker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpicker);
                this.columncommentsRBI = new global::System.Data.DataColumn("commentsRBI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommentsRBI);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnbillingCharges = new global::System.Data.DataColumn("billingCharges", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillingCharges);
                this.columnregistroRBI = new global::System.Data.DataColumn("registroRBI", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistroRBI);
                this.columnusuarioRBI = new global::System.Data.DataColumn("usuarioRBI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusuarioRBI);
                this.columnregistroChih = new global::System.Data.DataColumn("registroChih", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistroChih);
                this.columnusuarioChih = new global::System.Data.DataColumn("usuarioChih", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusuarioChih);
                this.columndone = new global::System.Data.DataColumn("done", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndone);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columncarrierTruckNumber.MaxLength = 35;
                this.columncoNumber.MaxLength = 35;
                this.columnlineNumber.MaxLength = 35;
                this.columnpoNumber.MaxLength = 35;
                this.columntrackingNumber.MaxLength = 35;
                this.columncommentsChih.MaxLength = 2147483647;
                this.columncarrier.MaxLength = 35;
                this.columnpathTrackingNumber.MaxLength = 50;
                this.columnpicker.MaxLength = 35;
                this.columncommentsRBI.MaxLength = 2147483647;
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnbillingCharges.MaxLength = 35;
                this.columnusuarioRBI.MaxLength = 35;
                this.columnusuarioChih.MaxLength = 35;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacRow NewEmbarquesZodiacRow() {
                return ((EmbarquesZodiacRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmbarquesZodiacRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmbarquesZodiacRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmbarquesZodiacRowChanged != null)) {
                    this.EmbarquesZodiacRowChanged(this, new EmbarquesZodiacRowChangeEvent(((EmbarquesZodiacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmbarquesZodiacRowChanging != null)) {
                    this.EmbarquesZodiacRowChanging(this, new EmbarquesZodiacRowChangeEvent(((EmbarquesZodiacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmbarquesZodiacRowDeleted != null)) {
                    this.EmbarquesZodiacRowDeleted(this, new EmbarquesZodiacRowChangeEvent(((EmbarquesZodiacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmbarquesZodiacRowDeleting != null)) {
                    this.EmbarquesZodiacRowDeleting(this, new EmbarquesZodiacRowChangeEvent(((EmbarquesZodiacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmbarquesZodiacRow(EmbarquesZodiacRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmbarquesZodiacDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sku_escanearDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnnid_sku;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnescaneado;
            
            private global::System.Data.DataColumn columnnid_cliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearDataTable() {
                this.TableName = "sku_escanear";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sku_escanearDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sku_escanearDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn escaneadoColumn {
                get {
                    return this.columnescaneado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_clienteColumn {
                get {
                    return this.columnnid_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow this[int index] {
                get {
                    return ((sku_escanearRow)(this.Rows[index]));
                }
            }
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowChanging;
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowChanged;
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowDeleting;
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsku_escanearRow(sku_escanearRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow Addsku_escanearRow(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente) {
                sku_escanearRow rowsku_escanearRow = ((sku_escanearRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nid_sku,
                        fecha,
                        escaneado,
                        nid_cliente};
                rowsku_escanearRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsku_escanearRow);
                return rowsku_escanearRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow FindByid(int id) {
                return ((sku_escanearRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sku_escanearDataTable cln = ((sku_escanearDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sku_escanearDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnnid_sku = base.Columns["nid_sku"];
                this.columnfecha = base.Columns["fecha"];
                this.columnescaneado = base.Columns["escaneado"];
                this.columnnid_cliente = base.Columns["nid_cliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnescaneado = new global::System.Data.DataColumn("escaneado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnescaneado);
                this.columnnid_cliente = new global::System.Data.DataColumn("nid_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_cliente);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnnid_sku.AllowDBNull = false;
                this.columnnid_sku.MaxLength = 75;
                this.columnfecha.AllowDBNull = false;
                this.columnescaneado.AllowDBNull = false;
                this.columnnid_cliente.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow Newsku_escanearRow() {
                return ((sku_escanearRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sku_escanearRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sku_escanearRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sku_escanearRowChanged != null)) {
                    this.sku_escanearRowChanged(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sku_escanearRowChanging != null)) {
                    this.sku_escanearRowChanging(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sku_escanearRowDeleted != null)) {
                    this.sku_escanearRowDeleted(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sku_escanearRowDeleting != null)) {
                    this.sku_escanearRowDeleting(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesku_escanearRow(sku_escanearRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sku_escanearDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ai_Reporte_Bultos_V2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTrackingNumber;
            
            private global::System.Data.DataColumn columnBundleType;
            
            private global::System.Data.DataColumn columnBundleConditions;
            
            private global::System.Data.DataColumn columnDateArrive;
            
            private global::System.Data.DataColumn columnMonthArrive;
            
            private global::System.Data.DataColumn columnWeekArrive;
            
            private global::System.Data.DataColumn columnDayArrive;
            
            private global::System.Data.DataColumn columnHourArrive;
            
            private global::System.Data.DataColumn columnCarrier;
            
            private global::System.Data.DataColumn columnIdArrive;
            
            private global::System.Data.DataColumn columnGuideNumber;
            
            private global::System.Data.DataColumn columnTransportType;
            
            private global::System.Data.DataColumn columnBundlePersonAssigned;
            
            private global::System.Data.DataColumn columnCustomerAssigned;
            
            private global::System.Data.DataColumn columnBundleLevel;
            
            private global::System.Data.DataColumn columnParentBundle;
            
            private global::System.Data.DataColumn columnDispatchID;
            
            private global::System.Data.DataColumn columnDispatchedBy;
            
            private global::System.Data.DataColumn columnDispatchedCustomerID;
            
            private global::System.Data.DataColumn columnDispatchedCustomer;
            
            private global::System.Data.DataColumn columnDispatchedDate;
            
            private global::System.Data.DataColumn columnDispatchCarrier;
            
            private global::System.Data.DataColumn columnDispatchBoxNumber;
            
            private global::System.Data.DataColumn columnPackingList;
            
            private global::System.Data.DataColumn columnPackingListPDF;
            
            private global::System.Data.DataColumn columnRecorddate;
            
            private global::System.Data.DataColumn columnReporteBultosID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2DataTable() {
                this.TableName = "ai_Reporte_Bultos_V2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ai_Reporte_Bultos_V2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ai_Reporte_Bultos_V2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrackingNumberColumn {
                get {
                    return this.columnTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundleTypeColumn {
                get {
                    return this.columnBundleType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundleConditionsColumn {
                get {
                    return this.columnBundleConditions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateArriveColumn {
                get {
                    return this.columnDateArrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthArriveColumn {
                get {
                    return this.columnMonthArrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeekArriveColumn {
                get {
                    return this.columnWeekArrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayArriveColumn {
                get {
                    return this.columnDayArrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HourArriveColumn {
                get {
                    return this.columnHourArrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarrierColumn {
                get {
                    return this.columnCarrier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdArriveColumn {
                get {
                    return this.columnIdArrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GuideNumberColumn {
                get {
                    return this.columnGuideNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportTypeColumn {
                get {
                    return this.columnTransportType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundlePersonAssignedColumn {
                get {
                    return this.columnBundlePersonAssigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerAssignedColumn {
                get {
                    return this.columnCustomerAssigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundleLevelColumn {
                get {
                    return this.columnBundleLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentBundleColumn {
                get {
                    return this.columnParentBundle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchIDColumn {
                get {
                    return this.columnDispatchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchedByColumn {
                get {
                    return this.columnDispatchedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchedCustomerIDColumn {
                get {
                    return this.columnDispatchedCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchedCustomerColumn {
                get {
                    return this.columnDispatchedCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchedDateColumn {
                get {
                    return this.columnDispatchedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchCarrierColumn {
                get {
                    return this.columnDispatchCarrier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchBoxNumberColumn {
                get {
                    return this.columnDispatchBoxNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackingListColumn {
                get {
                    return this.columnPackingList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackingListPDFColumn {
                get {
                    return this.columnPackingListPDF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecorddateColumn {
                get {
                    return this.columnRecorddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteBultosIDColumn {
                get {
                    return this.columnReporteBultosID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2Row this[int index] {
                get {
                    return ((ai_Reporte_Bultos_V2Row)(this.Rows[index]));
                }
            }
            
            public event ai_Reporte_Bultos_V2RowChangeEventHandler ai_Reporte_Bultos_V2RowChanging;
            
            public event ai_Reporte_Bultos_V2RowChangeEventHandler ai_Reporte_Bultos_V2RowChanged;
            
            public event ai_Reporte_Bultos_V2RowChangeEventHandler ai_Reporte_Bultos_V2RowDeleting;
            
            public event ai_Reporte_Bultos_V2RowChangeEventHandler ai_Reporte_Bultos_V2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addai_Reporte_Bultos_V2Row(ai_Reporte_Bultos_V2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2Row Addai_Reporte_Bultos_V2Row(
                        string TrackingNumber, 
                        string BundleType, 
                        string BundleConditions, 
                        System.DateTime DateArrive, 
                        string MonthArrive, 
                        string WeekArrive, 
                        string DayArrive, 
                        string HourArrive, 
                        string Carrier, 
                        int IdArrive, 
                        string GuideNumber, 
                        string TransportType, 
                        string BundlePersonAssigned, 
                        string CustomerAssigned, 
                        string BundleLevel, 
                        string ParentBundle, 
                        int DispatchID, 
                        string DispatchedBy, 
                        int DispatchedCustomerID, 
                        string DispatchedCustomer, 
                        System.DateTime DispatchedDate, 
                        string DispatchCarrier, 
                        string DispatchBoxNumber, 
                        string PackingList, 
                        string PackingListPDF, 
                        System.DateTime Recorddate) {
                ai_Reporte_Bultos_V2Row rowai_Reporte_Bultos_V2Row = ((ai_Reporte_Bultos_V2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TrackingNumber,
                        BundleType,
                        BundleConditions,
                        DateArrive,
                        MonthArrive,
                        WeekArrive,
                        DayArrive,
                        HourArrive,
                        Carrier,
                        IdArrive,
                        GuideNumber,
                        TransportType,
                        BundlePersonAssigned,
                        CustomerAssigned,
                        BundleLevel,
                        ParentBundle,
                        DispatchID,
                        DispatchedBy,
                        DispatchedCustomerID,
                        DispatchedCustomer,
                        DispatchedDate,
                        DispatchCarrier,
                        DispatchBoxNumber,
                        PackingList,
                        PackingListPDF,
                        Recorddate,
                        null};
                rowai_Reporte_Bultos_V2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowai_Reporte_Bultos_V2Row);
                return rowai_Reporte_Bultos_V2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2Row FindByReporteBultosID(int ReporteBultosID) {
                return ((ai_Reporte_Bultos_V2Row)(this.Rows.Find(new object[] {
                            ReporteBultosID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ai_Reporte_Bultos_V2DataTable cln = ((ai_Reporte_Bultos_V2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ai_Reporte_Bultos_V2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTrackingNumber = base.Columns["TrackingNumber"];
                this.columnBundleType = base.Columns["BundleType"];
                this.columnBundleConditions = base.Columns["BundleConditions"];
                this.columnDateArrive = base.Columns["DateArrive"];
                this.columnMonthArrive = base.Columns["MonthArrive"];
                this.columnWeekArrive = base.Columns["WeekArrive"];
                this.columnDayArrive = base.Columns["DayArrive"];
                this.columnHourArrive = base.Columns["HourArrive"];
                this.columnCarrier = base.Columns["Carrier"];
                this.columnIdArrive = base.Columns["IdArrive"];
                this.columnGuideNumber = base.Columns["GuideNumber"];
                this.columnTransportType = base.Columns["TransportType"];
                this.columnBundlePersonAssigned = base.Columns["BundlePersonAssigned"];
                this.columnCustomerAssigned = base.Columns["CustomerAssigned"];
                this.columnBundleLevel = base.Columns["BundleLevel"];
                this.columnParentBundle = base.Columns["ParentBundle"];
                this.columnDispatchID = base.Columns["DispatchID"];
                this.columnDispatchedBy = base.Columns["DispatchedBy"];
                this.columnDispatchedCustomerID = base.Columns["DispatchedCustomerID"];
                this.columnDispatchedCustomer = base.Columns["DispatchedCustomer"];
                this.columnDispatchedDate = base.Columns["DispatchedDate"];
                this.columnDispatchCarrier = base.Columns["DispatchCarrier"];
                this.columnDispatchBoxNumber = base.Columns["DispatchBoxNumber"];
                this.columnPackingList = base.Columns["PackingList"];
                this.columnPackingListPDF = base.Columns["PackingListPDF"];
                this.columnRecorddate = base.Columns["Recorddate"];
                this.columnReporteBultosID = base.Columns["ReporteBultosID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTrackingNumber = new global::System.Data.DataColumn("TrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingNumber);
                this.columnBundleType = new global::System.Data.DataColumn("BundleType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleType);
                this.columnBundleConditions = new global::System.Data.DataColumn("BundleConditions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleConditions);
                this.columnDateArrive = new global::System.Data.DataColumn("DateArrive", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateArrive);
                this.columnMonthArrive = new global::System.Data.DataColumn("MonthArrive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthArrive);
                this.columnWeekArrive = new global::System.Data.DataColumn("WeekArrive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekArrive);
                this.columnDayArrive = new global::System.Data.DataColumn("DayArrive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayArrive);
                this.columnHourArrive = new global::System.Data.DataColumn("HourArrive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourArrive);
                this.columnCarrier = new global::System.Data.DataColumn("Carrier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarrier);
                this.columnIdArrive = new global::System.Data.DataColumn("IdArrive", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdArrive);
                this.columnGuideNumber = new global::System.Data.DataColumn("GuideNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuideNumber);
                this.columnTransportType = new global::System.Data.DataColumn("TransportType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportType);
                this.columnBundlePersonAssigned = new global::System.Data.DataColumn("BundlePersonAssigned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundlePersonAssigned);
                this.columnCustomerAssigned = new global::System.Data.DataColumn("CustomerAssigned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAssigned);
                this.columnBundleLevel = new global::System.Data.DataColumn("BundleLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleLevel);
                this.columnParentBundle = new global::System.Data.DataColumn("ParentBundle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentBundle);
                this.columnDispatchID = new global::System.Data.DataColumn("DispatchID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchID);
                this.columnDispatchedBy = new global::System.Data.DataColumn("DispatchedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchedBy);
                this.columnDispatchedCustomerID = new global::System.Data.DataColumn("DispatchedCustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchedCustomerID);
                this.columnDispatchedCustomer = new global::System.Data.DataColumn("DispatchedCustomer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchedCustomer);
                this.columnDispatchedDate = new global::System.Data.DataColumn("DispatchedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchedDate);
                this.columnDispatchCarrier = new global::System.Data.DataColumn("DispatchCarrier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchCarrier);
                this.columnDispatchBoxNumber = new global::System.Data.DataColumn("DispatchBoxNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchBoxNumber);
                this.columnPackingList = new global::System.Data.DataColumn("PackingList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingList);
                this.columnPackingListPDF = new global::System.Data.DataColumn("PackingListPDF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingListPDF);
                this.columnRecorddate = new global::System.Data.DataColumn("Recorddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecorddate);
                this.columnReporteBultosID = new global::System.Data.DataColumn("ReporteBultosID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporteBultosID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReporteBultosID}, true));
                this.columnTrackingNumber.AllowDBNull = false;
                this.columnTrackingNumber.MaxLength = 75;
                this.columnBundleType.MaxLength = 30;
                this.columnBundleConditions.MaxLength = 30;
                this.columnMonthArrive.MaxLength = 7;
                this.columnWeekArrive.MaxLength = 8;
                this.columnDayArrive.MaxLength = 10;
                this.columnHourArrive.MaxLength = 5;
                this.columnCarrier.MaxLength = 80;
                this.columnIdArrive.AllowDBNull = false;
                this.columnGuideNumber.MaxLength = 20;
                this.columnTransportType.AllowDBNull = false;
                this.columnTransportType.MaxLength = 7;
                this.columnBundlePersonAssigned.MaxLength = 100;
                this.columnCustomerAssigned.MaxLength = 255;
                this.columnBundleLevel.MaxLength = 20;
                this.columnParentBundle.MaxLength = 70;
                this.columnDispatchedBy.MaxLength = 100;
                this.columnDispatchedCustomer.MaxLength = 255;
                this.columnDispatchCarrier.MaxLength = 80;
                this.columnDispatchBoxNumber.MaxLength = 50;
                this.columnPackingList.MaxLength = 20;
                this.columnPackingListPDF.MaxLength = 43;
                this.columnReporteBultosID.AutoIncrement = true;
                this.columnReporteBultosID.AllowDBNull = false;
                this.columnReporteBultosID.ReadOnly = true;
                this.columnReporteBultosID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2Row Newai_Reporte_Bultos_V2Row() {
                return ((ai_Reporte_Bultos_V2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ai_Reporte_Bultos_V2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ai_Reporte_Bultos_V2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ai_Reporte_Bultos_V2RowChanged != null)) {
                    this.ai_Reporte_Bultos_V2RowChanged(this, new ai_Reporte_Bultos_V2RowChangeEvent(((ai_Reporte_Bultos_V2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ai_Reporte_Bultos_V2RowChanging != null)) {
                    this.ai_Reporte_Bultos_V2RowChanging(this, new ai_Reporte_Bultos_V2RowChangeEvent(((ai_Reporte_Bultos_V2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ai_Reporte_Bultos_V2RowDeleted != null)) {
                    this.ai_Reporte_Bultos_V2RowDeleted(this, new ai_Reporte_Bultos_V2RowChangeEvent(((ai_Reporte_Bultos_V2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ai_Reporte_Bultos_V2RowDeleting != null)) {
                    this.ai_Reporte_Bultos_V2RowDeleting(this, new ai_Reporte_Bultos_V2RowChangeEvent(((ai_Reporte_Bultos_V2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeai_Reporte_Bultos_V2Row(ai_Reporte_Bultos_V2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                core_v2DataSet ds = new core_v2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ai_Reporte_Bultos_V2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesEmbarquesRow : global::System.Data.DataRow {
            
            private MaterialesEmbarquesDataTable tableMaterialesEmbarques;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEmbarquesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesEmbarques = ((MaterialesEmbarquesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableMaterialesEmbarques.idColumn]));
                }
                set {
                    this[this.tableMaterialesEmbarques.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaCaptura {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesEmbarques.fechaCapturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaCaptura\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.fechaCapturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noTrailer {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarques.noTrailerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noTrailer\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.noTrailerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transportista {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarques.transportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transportista\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.transportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noPaletas {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesEmbarques.noPaletasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noPaletas\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.noPaletasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noFactura {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarques.noFacturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noFactura\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.noFacturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string packingList {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarques.packingListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'packingList\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.packingListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal costo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesEmbarques.costoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costo\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.costoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comentarios {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarques.comentariosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comentarios\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.comentariosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipoEmbarque {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarques.tipoEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipoEmbarque\' in table \'MaterialesEmbarques\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarques.tipoEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaCapturaNull() {
                return this.IsNull(this.tableMaterialesEmbarques.fechaCapturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaCapturaNull() {
                this[this.tableMaterialesEmbarques.fechaCapturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoTrailerNull() {
                return this.IsNull(this.tableMaterialesEmbarques.noTrailerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoTrailerNull() {
                this[this.tableMaterialesEmbarques.noTrailerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransportistaNull() {
                return this.IsNull(this.tableMaterialesEmbarques.transportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransportistaNull() {
                this[this.tableMaterialesEmbarques.transportistaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoPaletasNull() {
                return this.IsNull(this.tableMaterialesEmbarques.noPaletasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoPaletasNull() {
                this[this.tableMaterialesEmbarques.noPaletasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoFacturaNull() {
                return this.IsNull(this.tableMaterialesEmbarques.noFacturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoFacturaNull() {
                this[this.tableMaterialesEmbarques.noFacturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspackingListNull() {
                return this.IsNull(this.tableMaterialesEmbarques.packingListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpackingListNull() {
                this[this.tableMaterialesEmbarques.packingListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostoNull() {
                return this.IsNull(this.tableMaterialesEmbarques.costoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostoNull() {
                this[this.tableMaterialesEmbarques.costoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscomentariosNull() {
                return this.IsNull(this.tableMaterialesEmbarques.comentariosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcomentariosNull() {
                this[this.tableMaterialesEmbarques.comentariosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoEmbarqueNull() {
                return this.IsNull(this.tableMaterialesEmbarques.tipoEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoEmbarqueNull() {
                this[this.tableMaterialesEmbarques.tipoEmbarqueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesEmbarquesTransportistaRow : global::System.Data.DataRow {
            
            private MaterialesEmbarquesTransportistaDataTable tableMaterialesEmbarquesTransportista;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEmbarquesTransportistaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesEmbarquesTransportista = ((MaterialesEmbarquesTransportistaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transportista {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarquesTransportista.transportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transportista\' in table \'MaterialesEmbarquesTransportista\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarquesTransportista.transportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransportistaNull() {
                return this.IsNull(this.tableMaterialesEmbarquesTransportista.transportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransportistaNull() {
                this[this.tableMaterialesEmbarquesTransportista.transportistaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesEmbarquesTipoEmbarqueRow : global::System.Data.DataRow {
            
            private MaterialesEmbarquesTipoEmbarqueDataTable tableMaterialesEmbarquesTipoEmbarque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEmbarquesTipoEmbarqueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesEmbarquesTipoEmbarque = ((MaterialesEmbarquesTipoEmbarqueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipoEmbarque {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEmbarquesTipoEmbarque.tipoEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipoEmbarque\' in table \'MaterialesEmbarquesTipoEmbarque\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEmbarquesTipoEmbarque.tipoEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoEmbarqueNull() {
                return this.IsNull(this.tableMaterialesEmbarquesTipoEmbarque.tipoEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoEmbarqueNull() {
                this[this.tableMaterialesEmbarquesTipoEmbarque.tipoEmbarqueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesCostoRow : global::System.Data.DataRow {
            
            private MaterialesCostoDataTable tableMaterialesCosto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesCostoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesCosto = ((MaterialesCostoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableMaterialesCosto.idColumn]));
                }
                set {
                    this[this.tableMaterialesCosto.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal costo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesCosto.costoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costo\' in table \'MaterialesCosto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesCosto.costoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipoCosto {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesCosto.tipoCostoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipoCosto\' in table \'MaterialesCosto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesCosto.tipoCostoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostoNull() {
                return this.IsNull(this.tableMaterialesCosto.costoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostoNull() {
                this[this.tableMaterialesCosto.costoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoCostoNull() {
                return this.IsNull(this.tableMaterialesCosto.tipoCostoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoCostoNull() {
                this[this.tableMaterialesCosto.tipoCostoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usersRow : global::System.Data.DataRow {
            
            private usersDataTable tableusers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusers = ((usersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string clogin {
                get {
                    try {
                        return ((string)(this[this.tableusers.cloginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clogin\' in table \'users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusers.cloginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bactive {
                get {
                    return ((bool)(this[this.tableusers.bactiveColumn]));
                }
                set {
                    this[this.tableusers.bactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_user {
                get {
                    return ((int)(this[this.tableusers.nid_userColumn]));
                }
                set {
                    this[this.tableusers.nid_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscloginNull() {
                return this.IsNull(this.tableusers.cloginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcloginNull() {
                this[this.tableusers.cloginColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class users_menusRow : global::System.Data.DataRow {
            
            private users_menusDataTable tableusers_menus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal users_menusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusers_menus = ((users_menusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_user {
                get {
                    return ((int)(this[this.tableusers_menus.nid_userColumn]));
                }
                set {
                    this[this.tableusers_menus.nid_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_person {
                get {
                    return ((int)(this[this.tableusers_menus.nid_personColumn]));
                }
                set {
                    this[this.tableusers_menus.nid_personColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string clogin {
                get {
                    return ((string)(this[this.tableusers_menus.cloginColumn]));
                }
                set {
                    this[this.tableusers_menus.cloginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cemail {
                get {
                    return ((string)(this[this.tableusers_menus.cemailColumn]));
                }
                set {
                    this[this.tableusers_menus.cemailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cid_menu {
                get {
                    return ((string)(this[this.tableusers_menus.cid_menuColumn]));
                }
                set {
                    this[this.tableusers_menus.cid_menuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cmenu {
                get {
                    return ((string)(this[this.tableusers_menus.cmenuColumn]));
                }
                set {
                    this[this.tableusers_menus.cmenuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bactive {
                get {
                    return ((bool)(this[this.tableusers_menus.bactiveColumn]));
                }
                set {
                    this[this.tableusers_menus.bactiveColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmbarquesZodiacRow : global::System.Data.DataRow {
            
            private EmbarquesZodiacDataTable tableEmbarquesZodiac;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmbarquesZodiacRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmbarquesZodiac = ((EmbarquesZodiacDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool received {
                get {
                    try {
                        return ((bool)(this[this.tableEmbarquesZodiac.receivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'received\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.receivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string carrierTruckNumber {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.carrierTruckNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'carrierTruckNumber\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.carrierTruckNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime departureDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.departureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'departureDate\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.departureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coNumber {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.coNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coNumber\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.coNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lineNumber {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.lineNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lineNumber\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.lineNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poNumber {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.poNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'poNumber\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.poNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.trackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trackingNumber\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.trackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string commentsChih {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.commentsChihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commentsChih\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.commentsChihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string carrier {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.carrierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'carrier\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.carrierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool urgent {
                get {
                    try {
                        return ((bool)(this[this.tableEmbarquesZodiac.urgentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'urgent\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.urgentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pathTrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.pathTrackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pathTrackingNumber\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.pathTrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime arrivalDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.arrivalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arrivalDate\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.arrivalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime unloadedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.unloadedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unloadedDate\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.unloadedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime pickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.pickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pickupDate\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.pickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime pickupDateRequested {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.pickupDateRequestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pickupDateRequested\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.pickupDateRequestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string picker {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.pickerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'picker\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.pickerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string commentsRBI {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.commentsRBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commentsRBI\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.commentsRBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableEmbarquesZodiac.idColumn]));
                }
                set {
                    this[this.tableEmbarquesZodiac.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string billingCharges {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.billingChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billingCharges\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.billingChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime registroRBI {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.registroRBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registroRBI\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.registroRBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usuarioRBI {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.usuarioRBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'usuarioRBI\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.usuarioRBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime registroChih {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmbarquesZodiac.registroChihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registroChih\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.registroChihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usuarioChih {
                get {
                    try {
                        return ((string)(this[this.tableEmbarquesZodiac.usuarioChihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'usuarioChih\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.usuarioChihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool done {
                get {
                    try {
                        return ((bool)(this[this.tableEmbarquesZodiac.doneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'done\' in table \'EmbarquesZodiac\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmbarquesZodiac.doneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreceivedNull() {
                return this.IsNull(this.tableEmbarquesZodiac.receivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreceivedNull() {
                this[this.tableEmbarquesZodiac.receivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscarrierTruckNumberNull() {
                return this.IsNull(this.tableEmbarquesZodiac.carrierTruckNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcarrierTruckNumberNull() {
                this[this.tableEmbarquesZodiac.carrierTruckNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepartureDateNull() {
                return this.IsNull(this.tableEmbarquesZodiac.departureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepartureDateNull() {
                this[this.tableEmbarquesZodiac.departureDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoNumberNull() {
                return this.IsNull(this.tableEmbarquesZodiac.coNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoNumberNull() {
                this[this.tableEmbarquesZodiac.coNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNumberNull() {
                return this.IsNull(this.tableEmbarquesZodiac.lineNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNumberNull() {
                this[this.tableEmbarquesZodiac.lineNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspoNumberNull() {
                return this.IsNull(this.tableEmbarquesZodiac.poNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpoNumberNull() {
                this[this.tableEmbarquesZodiac.poNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrackingNumberNull() {
                return this.IsNull(this.tableEmbarquesZodiac.trackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrackingNumberNull() {
                this[this.tableEmbarquesZodiac.trackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentsChihNull() {
                return this.IsNull(this.tableEmbarquesZodiac.commentsChihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentsChihNull() {
                this[this.tableEmbarquesZodiac.commentsChihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscarrierNull() {
                return this.IsNull(this.tableEmbarquesZodiac.carrierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcarrierNull() {
                this[this.tableEmbarquesZodiac.carrierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurgentNull() {
                return this.IsNull(this.tableEmbarquesZodiac.urgentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturgentNull() {
                this[this.tableEmbarquesZodiac.urgentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspathTrackingNumberNull() {
                return this.IsNull(this.tableEmbarquesZodiac.pathTrackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpathTrackingNumberNull() {
                this[this.tableEmbarquesZodiac.pathTrackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsarrivalDateNull() {
                return this.IsNull(this.tableEmbarquesZodiac.arrivalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetarrivalDateNull() {
                this[this.tableEmbarquesZodiac.arrivalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunloadedDateNull() {
                return this.IsNull(this.tableEmbarquesZodiac.unloadedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunloadedDateNull() {
                this[this.tableEmbarquesZodiac.unloadedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspickupDateNull() {
                return this.IsNull(this.tableEmbarquesZodiac.pickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpickupDateNull() {
                this[this.tableEmbarquesZodiac.pickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspickupDateRequestedNull() {
                return this.IsNull(this.tableEmbarquesZodiac.pickupDateRequestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpickupDateRequestedNull() {
                this[this.tableEmbarquesZodiac.pickupDateRequestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspickerNull() {
                return this.IsNull(this.tableEmbarquesZodiac.pickerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpickerNull() {
                this[this.tableEmbarquesZodiac.pickerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentsRBINull() {
                return this.IsNull(this.tableEmbarquesZodiac.commentsRBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentsRBINull() {
                this[this.tableEmbarquesZodiac.commentsRBIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbillingChargesNull() {
                return this.IsNull(this.tableEmbarquesZodiac.billingChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbillingChargesNull() {
                this[this.tableEmbarquesZodiac.billingChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregistroRBINull() {
                return this.IsNull(this.tableEmbarquesZodiac.registroRBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregistroRBINull() {
                this[this.tableEmbarquesZodiac.registroRBIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusuarioRBINull() {
                return this.IsNull(this.tableEmbarquesZodiac.usuarioRBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusuarioRBINull() {
                this[this.tableEmbarquesZodiac.usuarioRBIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregistroChihNull() {
                return this.IsNull(this.tableEmbarquesZodiac.registroChihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregistroChihNull() {
                this[this.tableEmbarquesZodiac.registroChihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusuarioChihNull() {
                return this.IsNull(this.tableEmbarquesZodiac.usuarioChihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusuarioChihNull() {
                this[this.tableEmbarquesZodiac.usuarioChihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdoneNull() {
                return this.IsNull(this.tableEmbarquesZodiac.doneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdoneNull() {
                this[this.tableEmbarquesZodiac.doneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sku_escanearRow : global::System.Data.DataRow {
            
            private sku_escanearDataTable tablesku_escanear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sku_escanearRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesku_escanear = ((sku_escanearDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablesku_escanear.idColumn]));
                }
                set {
                    this[this.tablesku_escanear.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    return ((string)(this[this.tablesku_escanear.nid_skuColumn]));
                }
                set {
                    this[this.tablesku_escanear.nid_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    return ((global::System.DateTime)(this[this.tablesku_escanear.fechaColumn]));
                }
                set {
                    this[this.tablesku_escanear.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool escaneado {
                get {
                    return ((bool)(this[this.tablesku_escanear.escaneadoColumn]));
                }
                set {
                    this[this.tablesku_escanear.escaneadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_cliente {
                get {
                    return ((int)(this[this.tablesku_escanear.nid_clienteColumn]));
                }
                set {
                    this[this.tablesku_escanear.nid_clienteColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ai_Reporte_Bultos_V2Row : global::System.Data.DataRow {
            
            private ai_Reporte_Bultos_V2DataTable tableai_Reporte_Bultos_V2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ai_Reporte_Bultos_V2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableai_Reporte_Bultos_V2 = ((ai_Reporte_Bultos_V2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrackingNumber {
                get {
                    return ((string)(this[this.tableai_Reporte_Bultos_V2.TrackingNumberColumn]));
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.TrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BundleType {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.BundleTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleType\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.BundleTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BundleConditions {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.BundleConditionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleConditions\' in table \'ai_Reporte_Bultos_V2\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.BundleConditionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateArrive {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableai_Reporte_Bultos_V2.DateArriveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateArrive\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DateArriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonthArrive {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.MonthArriveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthArrive\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.MonthArriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeekArrive {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.WeekArriveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeekArrive\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.WeekArriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayArrive {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.DayArriveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayArrive\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DayArriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HourArrive {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.HourArriveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HourArrive\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.HourArriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Carrier {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.CarrierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Carrier\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.CarrierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdArrive {
                get {
                    return ((int)(this[this.tableai_Reporte_Bultos_V2.IdArriveColumn]));
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.IdArriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GuideNumber {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.GuideNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GuideNumber\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.GuideNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransportType {
                get {
                    return ((string)(this[this.tableai_Reporte_Bultos_V2.TransportTypeColumn]));
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.TransportTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BundlePersonAssigned {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.BundlePersonAssignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundlePersonAssigned\' in table \'ai_Reporte_Bultos_V2\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.BundlePersonAssignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerAssigned {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.CustomerAssignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAssigned\' in table \'ai_Reporte_Bultos_V2\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.CustomerAssignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BundleLevel {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.BundleLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleLevel\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.BundleLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentBundle {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.ParentBundleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentBundle\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.ParentBundleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DispatchID {
                get {
                    try {
                        return ((int)(this[this.tableai_Reporte_Bultos_V2.DispatchIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchID\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DispatchedBy {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.DispatchedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchedBy\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DispatchedCustomerID {
                get {
                    try {
                        return ((int)(this[this.tableai_Reporte_Bultos_V2.DispatchedCustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchedCustomerID\' in table \'ai_Reporte_Bultos_V2\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchedCustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DispatchedCustomer {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.DispatchedCustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchedCustomer\' in table \'ai_Reporte_Bultos_V2\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchedCustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DispatchedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableai_Reporte_Bultos_V2.DispatchedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchedDate\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DispatchCarrier {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.DispatchCarrierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchCarrier\' in table \'ai_Reporte_Bultos_V2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchCarrierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DispatchBoxNumber {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.DispatchBoxNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchBoxNumber\' in table \'ai_Reporte_Bultos_V2\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.DispatchBoxNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackingList {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.PackingListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingList\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.PackingListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackingListPDF {
                get {
                    try {
                        return ((string)(this[this.tableai_Reporte_Bultos_V2.PackingListPDFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingListPDF\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.PackingListPDFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Recorddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableai_Reporte_Bultos_V2.RecorddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recorddate\' in table \'ai_Reporte_Bultos_V2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.RecorddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReporteBultosID {
                get {
                    return ((int)(this[this.tableai_Reporte_Bultos_V2.ReporteBultosIDColumn]));
                }
                set {
                    this[this.tableai_Reporte_Bultos_V2.ReporteBultosIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundleTypeNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.BundleTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundleTypeNull() {
                this[this.tableai_Reporte_Bultos_V2.BundleTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundleConditionsNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.BundleConditionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundleConditionsNull() {
                this[this.tableai_Reporte_Bultos_V2.BundleConditionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateArriveNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DateArriveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateArriveNull() {
                this[this.tableai_Reporte_Bultos_V2.DateArriveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthArriveNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.MonthArriveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthArriveNull() {
                this[this.tableai_Reporte_Bultos_V2.MonthArriveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeekArriveNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.WeekArriveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeekArriveNull() {
                this[this.tableai_Reporte_Bultos_V2.WeekArriveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayArriveNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DayArriveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayArriveNull() {
                this[this.tableai_Reporte_Bultos_V2.DayArriveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHourArriveNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.HourArriveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHourArriveNull() {
                this[this.tableai_Reporte_Bultos_V2.HourArriveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarrierNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.CarrierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarrierNull() {
                this[this.tableai_Reporte_Bultos_V2.CarrierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGuideNumberNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.GuideNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGuideNumberNull() {
                this[this.tableai_Reporte_Bultos_V2.GuideNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundlePersonAssignedNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.BundlePersonAssignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundlePersonAssignedNull() {
                this[this.tableai_Reporte_Bultos_V2.BundlePersonAssignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerAssignedNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.CustomerAssignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerAssignedNull() {
                this[this.tableai_Reporte_Bultos_V2.CustomerAssignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundleLevelNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.BundleLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundleLevelNull() {
                this[this.tableai_Reporte_Bultos_V2.BundleLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentBundleNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.ParentBundleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentBundleNull() {
                this[this.tableai_Reporte_Bultos_V2.ParentBundleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchIDNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchIDNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchedByNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchedByNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchedCustomerIDNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchedCustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchedCustomerIDNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchedCustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchedCustomerNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchedCustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchedCustomerNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchedCustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchedDateNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchedDateNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchCarrierNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchCarrierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchCarrierNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchCarrierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchBoxNumberNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.DispatchBoxNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchBoxNumberNull() {
                this[this.tableai_Reporte_Bultos_V2.DispatchBoxNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackingListNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.PackingListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackingListNull() {
                this[this.tableai_Reporte_Bultos_V2.PackingListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackingListPDFNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.PackingListPDFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackingListPDFNull() {
                this[this.tableai_Reporte_Bultos_V2.PackingListPDFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecorddateNull() {
                return this.IsNull(this.tableai_Reporte_Bultos_V2.RecorddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecorddateNull() {
                this[this.tableai_Reporte_Bultos_V2.RecorddateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesEmbarquesRowChangeEvent : global::System.EventArgs {
            
            private MaterialesEmbarquesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesRowChangeEvent(MaterialesEmbarquesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesEmbarquesTransportistaRowChangeEvent : global::System.EventArgs {
            
            private MaterialesEmbarquesTransportistaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTransportistaRowChangeEvent(MaterialesEmbarquesTransportistaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTransportistaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesEmbarquesTipoEmbarqueRowChangeEvent : global::System.EventArgs {
            
            private MaterialesEmbarquesTipoEmbarqueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTipoEmbarqueRowChangeEvent(MaterialesEmbarquesTipoEmbarqueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEmbarquesTipoEmbarqueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesCostoRowChangeEvent : global::System.EventArgs {
            
            private MaterialesCostoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesCostoRowChangeEvent(MaterialesCostoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesCostoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usersRowChangeEvent : global::System.EventArgs {
            
            private usersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersRowChangeEvent(usersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class users_menusRowChangeEvent : global::System.EventArgs {
            
            private users_menusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public users_menusRowChangeEvent(users_menusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public users_menusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmbarquesZodiacRowChangeEvent : global::System.EventArgs {
            
            private EmbarquesZodiacRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacRowChangeEvent(EmbarquesZodiacRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmbarquesZodiacRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sku_escanearRowChangeEvent : global::System.EventArgs {
            
            private sku_escanearRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRowChangeEvent(sku_escanearRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ai_Reporte_Bultos_V2RowChangeEvent : global::System.EventArgs {
            
            private ai_Reporte_Bultos_V2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2RowChangeEvent(ai_Reporte_Bultos_V2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ai_Reporte_Bultos_V2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MaterialCore.core_v2DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesEmbarquesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesEmbarquesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesEmbarques";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("fechaCaptura", "fechaCaptura");
            tableMapping.ColumnMappings.Add("noTrailer", "noTrailer");
            tableMapping.ColumnMappings.Add("transportista", "transportista");
            tableMapping.ColumnMappings.Add("noPaletas", "noPaletas");
            tableMapping.ColumnMappings.Add("noFactura", "noFactura");
            tableMapping.ColumnMappings.Add("packingList", "packingList");
            tableMapping.ColumnMappings.Add("costo", "costo");
            tableMapping.ColumnMappings.Add("comentarios", "comentarios");
            tableMapping.ColumnMappings.Add("tipoEmbarque", "tipoEmbarque");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO MaterialesEmbarques
                      (fechaCaptura, noTrailer, transportista, noPaletas, noFactura, packingList, costo, comentarios, tipoEmbarque)
VALUES     (@fechaCaptura,@noTrailer,@transportista,@noPaletas,@noFactura,@packingList,@costo,@comentarios,@tipoEmbarque)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaCaptura", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noTrailer", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "noTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transportista", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noPaletas", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "noPaletas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noFactura", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "noFactura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@packingList", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "packingList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@costo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, "costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comentarios", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipoEmbarque", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "tipoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, fechaCaptura, noTrailer, transportista, noPaletas, noFactura, packingL" +
                "ist, costo, comentarios, tipoEmbarque FROM dbo.MaterialesEmbarques";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"UPDATE    MaterialesEmbarques
SET              fechaCaptura= @fechaCaptura,
noTrailer=@noTrailer,
transportista=@transportista,
noPaletas=@noPaletas,
noFactura=@noFactura,
packingList=@packingLis,
costo=@costo,
comentarios=@comentarios,
tipoEmbarque=@tipoEmbarque
WHERE     (id = @id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaCaptura", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noTrailer", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "noTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transportista", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noPaletas", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "noPaletas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noFactura", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "noFactura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@packingLis", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "packingList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@costo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, "costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comentarios", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipoEmbarque", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "tipoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(core_v2DataSet.MaterialesEmbarquesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.MaterialesEmbarquesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.MaterialesEmbarquesDataTable dataTable = new core_v2DataSet.MaterialesEmbarquesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.MaterialesEmbarquesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesEmbarques");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> fechaCaptura, string noTrailer, string transportista, global::System.Nullable<int> noPaletas, string noFactura, string packingList, global::System.Nullable<decimal> costo, string comentarios, string tipoEmbarque) {
            if ((fechaCaptura.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(fechaCaptura.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((noTrailer == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(noTrailer));
            }
            if ((transportista == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(transportista));
            }
            if ((noPaletas.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(noPaletas.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((noFactura == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(noFactura));
            }
            if ((packingList == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(packingList));
            }
            if ((costo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(costo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((comentarios == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(comentarios));
            }
            if ((tipoEmbarque == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(tipoEmbarque));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(global::System.Nullable<global::System.DateTime> fechaCaptura, string noTrailer, string transportista, global::System.Nullable<int> noPaletas, string noFactura, string packingLis, global::System.Nullable<decimal> costo, string comentarios, string tipoEmbarque, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((fechaCaptura.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(fechaCaptura.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((noTrailer == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(noTrailer));
            }
            if ((transportista == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(transportista));
            }
            if ((noPaletas.HasValue == true)) {
                command.Parameters[3].Value = ((int)(noPaletas.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((noFactura == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(noFactura));
            }
            if ((packingLis == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(packingLis));
            }
            if ((costo.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(costo.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((comentarios == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(comentarios));
            }
            if ((tipoEmbarque == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(tipoEmbarque));
            }
            command.Parameters[9].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesEmbarquesTransportistaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesEmbarquesTransportistaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesEmbarquesTransportista";
            tableMapping.ColumnMappings.Add("transportista", "transportista");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     transportista\r\nFROM         MaterialesEmbarques\r\nGROUP BY transportist" +
                "a";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillTransportista(core_v2DataSet.MaterialesEmbarquesTransportistaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.MaterialesEmbarquesTransportistaDataTable GetDataTransportista() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.MaterialesEmbarquesTransportistaDataTable dataTable = new core_v2DataSet.MaterialesEmbarquesTransportistaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesEmbarquesTipoEmbarqueTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesEmbarquesTipoEmbarqueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesEmbarquesTipoEmbarque";
            tableMapping.ColumnMappings.Add("tipoEmbarque", "tipoEmbarque");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tipoEmbarque\r\nFROM         MaterialesEmbarques\r\nGROUP BY tipoEmbarque";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     tipoEmbarque\r\nFROM         MaterialesEmbarques\r\nGROUP BY tipoEmbarque";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillTipoEmbarque(core_v2DataSet.MaterialesEmbarquesTipoEmbarqueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTipoEmbarque(core_v2DataSet.MaterialesEmbarquesTipoEmbarqueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual core_v2DataSet.MaterialesEmbarquesTipoEmbarqueDataTable GetDataByTipoEmbarque() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            core_v2DataSet.MaterialesEmbarquesTipoEmbarqueDataTable dataTable = new core_v2DataSet.MaterialesEmbarquesTipoEmbarqueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesCostoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesCostoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesCosto";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("costo", "costo");
            tableMapping.ColumnMappings.Add("tipoCosto", "tipoCosto");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MaterialesCosto] ([costo], [tipoCosto]) VALUES (@costo, @tipoCosto)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@costo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipoCosto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tipoCosto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     MaterialesCosto.*\r\nFROM         MaterialesCosto";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillTipoCosto(core_v2DataSet.MaterialesCostoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.MaterialesCostoDataTable GetDataTipoCosto() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.MaterialesCostoDataTable dataTable = new core_v2DataSet.MaterialesCostoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.MaterialesCostoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesCosto");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> costo, string tipoCosto) {
            if ((costo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(costo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((tipoCosto == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(tipoCosto));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "users";
            tableMapping.ColumnMappings.Add("clogin", "clogin");
            tableMapping.ColumnMappings.Add("bactive", "bactive");
            tableMapping.ColumnMappings.Add("nid_user", "nid_user");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [users] WHERE (([bactive] = @Original_bactive) AND ([nid_user] = @Ori" +
                "ginal_nid_user))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bactive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [users] SET [bactive] = @bactive WHERE (([bactive] = @Original_bactive) AN" +
                "D ([nid_user] = @Original_nid_user));\r\nSELECT UPPER(REPLACE(cemail, \'@aiig.com\'," +
                " \' \')) AS clogin, bactive, nid_user FROM users WHERE (nid_user = @nid_user) ORDE" +
                "R BY cemail";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bactive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_user", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UPPER(REPLACE(cemail, \'@aiig.com\', \' \')) AS clogin, bactive, nid_user FROM" +
                " users ORDER BY cemail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE    users\r\nSET              bactive = @bactive\r\nWHERE     (nid_user = @Orig" +
                "inal_nid_user);  \r\nSELECT UPPER(REPLACE(cemail, \'@aiig.com\', \' \')) AS clogin, ba" +
                "ctive, nid_user FROM users WHERE (nid_user = @nid_user) ORDER BY cemail";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bactive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "bactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_user", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_user", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillLogin(core_v2DataSet.usersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.usersDataTable GetDataLogin() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.usersDataTable dataTable = new core_v2DataSet.usersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.usersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "users");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(bool Original_bactive, int Original_nid_user) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((bool)(Original_bactive));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_nid_user));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool bactive, bool Original_bactive, int Original_nid_user, int nid_user) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((bool)(bactive));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Original_bactive));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_nid_user));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(nid_user));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool bactive, bool Original_bactive, int Original_nid_user) {
            return this.Update(bactive, Original_bactive, Original_nid_user, Original_nid_user);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(bool bactive, int Original_nid_user, int nid_user) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((bool)(bactive));
            command.Parameters[1].Value = ((int)(Original_nid_user));
            command.Parameters[2].Value = ((int)(nid_user));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class users_menusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public users_menusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "users_menus";
            tableMapping.ColumnMappings.Add("nid_user", "nid_user");
            tableMapping.ColumnMappings.Add("nid_person", "nid_person");
            tableMapping.ColumnMappings.Add("clogin", "clogin");
            tableMapping.ColumnMappings.Add("cemail", "cemail");
            tableMapping.ColumnMappings.Add("cid_menu", "cid_menu");
            tableMapping.ColumnMappings.Add("cmenu", "cmenu");
            tableMapping.ColumnMappings.Add("bactive", "bactive");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [users_menus] ([nid_user], [nid_person], [clogin], [cemail], [cid_men" +
                "u], [cmenu], [bactive]) VALUES (@nid_user, @nid_person, @clogin, @cemail, @cid_m" +
                "enu, @cmenu, @bactive)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_person", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_person", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clogin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clogin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cemail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cemail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cid_menu", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cid_menu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cmenu", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cmenu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     users_menus.*\r\nFROM         users_menus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillUserMenu(core_v2DataSet.users_menusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.users_menusDataTable GetDataUserMenu() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.users_menusDataTable dataTable = new core_v2DataSet.users_menusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.users_menusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "users_menus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int nid_user, int nid_person, string clogin, string cemail, string cid_menu, string cmenu, bool bactive) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(nid_user));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(nid_person));
            if ((clogin == null)) {
                throw new global::System.ArgumentNullException("clogin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(clogin));
            }
            if ((cemail == null)) {
                throw new global::System.ArgumentNullException("cemail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(cemail));
            }
            if ((cid_menu == null)) {
                throw new global::System.ArgumentNullException("cid_menu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(cid_menu));
            }
            if ((cmenu == null)) {
                throw new global::System.ArgumentNullException("cmenu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(cmenu));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(bactive));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmbarquesZodiacTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmbarquesZodiacTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EmbarquesZodiac";
            tableMapping.ColumnMappings.Add("received", "received");
            tableMapping.ColumnMappings.Add("carrierTruckNumber", "carrierTruckNumber");
            tableMapping.ColumnMappings.Add("departureDate", "departureDate");
            tableMapping.ColumnMappings.Add("coNumber", "coNumber");
            tableMapping.ColumnMappings.Add("lineNumber", "lineNumber");
            tableMapping.ColumnMappings.Add("poNumber", "poNumber");
            tableMapping.ColumnMappings.Add("trackingNumber", "trackingNumber");
            tableMapping.ColumnMappings.Add("commentsChih", "commentsChih");
            tableMapping.ColumnMappings.Add("carrier", "carrier");
            tableMapping.ColumnMappings.Add("urgent", "urgent");
            tableMapping.ColumnMappings.Add("pathTrackingNumber", "pathTrackingNumber");
            tableMapping.ColumnMappings.Add("arrivalDate", "arrivalDate");
            tableMapping.ColumnMappings.Add("unloadedDate", "unloadedDate");
            tableMapping.ColumnMappings.Add("pickupDate", "pickupDate");
            tableMapping.ColumnMappings.Add("pickupDateRequested", "pickupDateRequested");
            tableMapping.ColumnMappings.Add("picker", "picker");
            tableMapping.ColumnMappings.Add("commentsRBI", "commentsRBI");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("billingCharges", "billingCharges");
            tableMapping.ColumnMappings.Add("registroRBI", "registroRBI");
            tableMapping.ColumnMappings.Add("usuarioRBI", "usuarioRBI");
            tableMapping.ColumnMappings.Add("registroChih", "registroChih");
            tableMapping.ColumnMappings.Add("usuarioChih", "usuarioChih");
            tableMapping.ColumnMappings.Add("done", "done");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [EmbarquesZodiac] WHERE (([id] = @Original_id) AND ((@IsNull_carrierT" +
                "ruckNumber = 1 AND [carrierTruckNumber] IS NULL) OR ([carrierTruckNumber] = @Ori" +
                "ginal_carrierTruckNumber)) AND ((@IsNull_departureDate = 1 AND [departureDate] I" +
                "S NULL) OR ([departureDate] = @Original_departureDate)) AND ((@IsNull_coNumber =" +
                " 1 AND [coNumber] IS NULL) OR ([coNumber] = @Original_coNumber)) AND ((@IsNull_p" +
                "oNumber = 1 AND [poNumber] IS NULL) OR ([poNumber] = @Original_poNumber)) AND ((" +
                "@IsNull_carrier = 1 AND [carrier] IS NULL) OR ([carrier] = @Original_carrier)) A" +
                "ND ((@IsNull_billingCharges = 1 AND [billingCharges] IS NULL) OR ([billingCharge" +
                "s] = @Original_billingCharges)) AND ((@IsNull_urgent = 1 AND [urgent] IS NULL) O" +
                "R ([urgent] = @Original_urgent)) AND ((@IsNull_lineNumber = 1 AND [lineNumber] I" +
                "S NULL) OR ([lineNumber] = @Original_lineNumber)) AND ((@IsNull_trackingNumber =" +
                " 1 AND [trackingNumber] IS NULL) OR ([trackingNumber] = @Original_trackingNumber" +
                ")) AND ((@IsNull_pathTrackingNumber = 1 AND [pathTrackingNumber] IS NULL) OR ([p" +
                "athTrackingNumber] = @Original_pathTrackingNumber)) AND ((@IsNull_received = 1 A" +
                "ND [received] IS NULL) OR ([received] = @Original_received)) AND ((@IsNull_arriv" +
                "alDate = 1 AND [arrivalDate] IS NULL) OR ([arrivalDate] = @Original_arrivalDate)" +
                ") AND ((@IsNull_unloadedDate = 1 AND [unloadedDate] IS NULL) OR ([unloadedDate] " +
                "= @Original_unloadedDate)) AND ((@IsNull_pickupDateRequested = 1 AND [pickupDate" +
                "Requested] IS NULL) OR ([pickupDateRequested] = @Original_pickupDateRequested)) " +
                "AND ((@IsNull_pickupDate = 1 AND [pickupDate] IS NULL) OR ([pickupDate] = @Origi" +
                "nal_pickupDate)) AND ((@IsNull_picker = 1 AND [picker] IS NULL) OR ([picker] = @" +
                "Original_picker)) AND ((@IsNull_registroRBI = 1 AND [registroRBI] IS NULL) OR ([" +
                "registroRBI] = @Original_registroRBI)) AND ((@IsNull_usuarioRBI = 1 AND [usuario" +
                "RBI] IS NULL) OR ([usuarioRBI] = @Original_usuarioRBI)) AND ((@IsNull_registroCh" +
                "ih = 1 AND [registroChih] IS NULL) OR ([registroChih] = @Original_registroChih))" +
                " AND ((@IsNull_usuarioChih = 1 AND [usuarioChih] IS NULL) OR ([usuarioChih] = @O" +
                "riginal_usuarioChih)) AND ((@IsNull_done = 1 AND [done] IS NULL) OR ([done] = @O" +
                "riginal_done)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_carrierTruckNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrierTruckNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_carrierTruckNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrierTruckNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_coNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_coNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_poNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "poNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_poNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "poNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_carrier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_billingCharges", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billingCharges", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_billingCharges", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billingCharges", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_urgent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urgent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_urgent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urgent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_lineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lineNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lineNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_trackingNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pathTrackingNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathTrackingNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pathTrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathTrackingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_received", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_unloadedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_unloadedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pickupDateRequested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pickupDateRequested", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pickupDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pickupDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_picker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_picker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registroRBI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registroRBI", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_usuarioRBI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_usuarioRBI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registroChih", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroChih", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registroChih", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroChih", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_usuarioChih", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioChih", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_usuarioChih", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioChih", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_done", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_done", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [EmbarquesZodiac] ([carrierTruckNumber], [departureDate], [coNumber], [poNumber], [carrier], [billingCharges], [commentsChih], [urgent], [lineNumber], [trackingNumber], [pathTrackingNumber], [received], [arrivalDate], [unloadedDate], [pickupDateRequested], [pickupDate], [picker], [commentsRBI], [registroRBI], [usuarioRBI], [registroChih], [usuarioChih], [done]) VALUES (@carrierTruckNumber, @departureDate, @coNumber, @poNumber, @carrier, @billingCharges, @commentsChih, @urgent, @lineNumber, @trackingNumber, @pathTrackingNumber, @received, @arrivalDate, @unloadedDate, @pickupDateRequested, @pickupDate, @picker, @commentsRBI, @registroRBI, @usuarioRBI, @registroChih, @usuarioChih, @done);
SELECT id, carrierTruckNumber, departureDate, coNumber, poNumber, carrier, billingCharges, commentsChih, urgent, lineNumber, trackingNumber, pathTrackingNumber, received, arrivalDate, unloadedDate, pickupDateRequested, pickupDate, picker, commentsRBI, registroRBI, usuarioRBI, registroChih, usuarioChih, done FROM EmbarquesZodiac WHERE (id = SCOPE_IDENTITY()) ORDER BY urgent DESC, departureDate";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carrierTruckNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrierTruckNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@poNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "poNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billingCharges", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billingCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsChih", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsChih", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@urgent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urgent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lineNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pathTrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathTrackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@received", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unloadedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pickupDateRequested", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pickupDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@picker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsRBI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registroRBI", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usuarioRBI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registroChih", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroChih", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usuarioChih", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioChih", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@done", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [EmbarquesZodiac] SET [carrierTruckNumber] = @carrierTruckNumber, [departu" +
                "reDate] = @departureDate, [coNumber] = @coNumber, [poNumber] = @poNumber, [carri" +
                "er] = @carrier, [billingCharges] = @billingCharges, [commentsChih] = @commentsCh" +
                "ih, [urgent] = @urgent, [lineNumber] = @lineNumber, [trackingNumber] = @tracking" +
                "Number, [pathTrackingNumber] = @pathTrackingNumber, [received] = @received, [arr" +
                "ivalDate] = @arrivalDate, [unloadedDate] = @unloadedDate, [pickupDateRequested] " +
                "= @pickupDateRequested, [pickupDate] = @pickupDate, [picker] = @picker, [comment" +
                "sRBI] = @commentsRBI, [registroRBI] = @registroRBI, [usuarioRBI] = @usuarioRBI, " +
                "[registroChih] = @registroChih, [usuarioChih] = @usuarioChih, [done] = @done WHE" +
                "RE (([id] = @Original_id) AND ((@IsNull_carrierTruckNumber = 1 AND [carrierTruck" +
                "Number] IS NULL) OR ([carrierTruckNumber] = @Original_carrierTruckNumber)) AND (" +
                "(@IsNull_departureDate = 1 AND [departureDate] IS NULL) OR ([departureDate] = @O" +
                "riginal_departureDate)) AND ((@IsNull_coNumber = 1 AND [coNumber] IS NULL) OR ([" +
                "coNumber] = @Original_coNumber)) AND ((@IsNull_poNumber = 1 AND [poNumber] IS NU" +
                "LL) OR ([poNumber] = @Original_poNumber)) AND ((@IsNull_carrier = 1 AND [carrier" +
                "] IS NULL) OR ([carrier] = @Original_carrier)) AND ((@IsNull_billingCharges = 1 " +
                "AND [billingCharges] IS NULL) OR ([billingCharges] = @Original_billingCharges)) " +
                "AND ((@IsNull_urgent = 1 AND [urgent] IS NULL) OR ([urgent] = @Original_urgent))" +
                " AND ((@IsNull_lineNumber = 1 AND [lineNumber] IS NULL) OR ([lineNumber] = @Orig" +
                "inal_lineNumber)) AND ((@IsNull_trackingNumber = 1 AND [trackingNumber] IS NULL)" +
                " OR ([trackingNumber] = @Original_trackingNumber)) AND ((@IsNull_pathTrackingNum" +
                "ber = 1 AND [pathTrackingNumber] IS NULL) OR ([pathTrackingNumber] = @Original_p" +
                "athTrackingNumber)) AND ((@IsNull_received = 1 AND [received] IS NULL) OR ([rece" +
                "ived] = @Original_received)) AND ((@IsNull_arrivalDate = 1 AND [arrivalDate] IS " +
                "NULL) OR ([arrivalDate] = @Original_arrivalDate)) AND ((@IsNull_unloadedDate = 1" +
                " AND [unloadedDate] IS NULL) OR ([unloadedDate] = @Original_unloadedDate)) AND (" +
                "(@IsNull_pickupDateRequested = 1 AND [pickupDateRequested] IS NULL) OR ([pickupD" +
                "ateRequested] = @Original_pickupDateRequested)) AND ((@IsNull_pickupDate = 1 AND" +
                " [pickupDate] IS NULL) OR ([pickupDate] = @Original_pickupDate)) AND ((@IsNull_p" +
                "icker = 1 AND [picker] IS NULL) OR ([picker] = @Original_picker)) AND ((@IsNull_" +
                "registroRBI = 1 AND [registroRBI] IS NULL) OR ([registroRBI] = @Original_registr" +
                "oRBI)) AND ((@IsNull_usuarioRBI = 1 AND [usuarioRBI] IS NULL) OR ([usuarioRBI] =" +
                " @Original_usuarioRBI)) AND ((@IsNull_registroChih = 1 AND [registroChih] IS NUL" +
                "L) OR ([registroChih] = @Original_registroChih)) AND ((@IsNull_usuarioChih = 1 A" +
                "ND [usuarioChih] IS NULL) OR ([usuarioChih] = @Original_usuarioChih)) AND ((@IsN" +
                "ull_done = 1 AND [done] IS NULL) OR ([done] = @Original_done)));\r\nSELECT id, car" +
                "rierTruckNumber, departureDate, coNumber, poNumber, carrier, billingCharges, com" +
                "mentsChih, urgent, lineNumber, trackingNumber, pathTrackingNumber, received, arr" +
                "ivalDate, unloadedDate, pickupDateRequested, pickupDate, picker, commentsRBI, re" +
                "gistroRBI, usuarioRBI, registroChih, usuarioChih, done FROM EmbarquesZodiac WHER" +
                "E (id = @id) ORDER BY urgent DESC, departureDate";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carrierTruckNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrierTruckNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@poNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "poNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billingCharges", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billingCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsChih", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsChih", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@urgent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urgent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lineNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pathTrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathTrackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@received", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unloadedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pickupDateRequested", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pickupDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@picker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsRBI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registroRBI", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usuarioRBI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registroChih", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroChih", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usuarioChih", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioChih", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@done", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_carrierTruckNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrierTruckNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_carrierTruckNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrierTruckNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departureDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departureDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_coNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_coNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_poNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "poNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_poNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "poNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_carrier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carrier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_billingCharges", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billingCharges", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_billingCharges", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billingCharges", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_urgent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urgent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_urgent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urgent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_lineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lineNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lineNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_trackingNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pathTrackingNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathTrackingNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pathTrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pathTrackingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_received", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_unloadedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_unloadedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pickupDateRequested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pickupDateRequested", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pickupDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pickupDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_picker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_picker", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registroRBI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registroRBI", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_usuarioRBI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_usuarioRBI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_registroChih", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroChih", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_registroChih", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "registroChih", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_usuarioChih", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioChih", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_usuarioChih", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioChih", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_done", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_done", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[12];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     id, carrierTruckNumber, departureDate, coNumber, poNumber, carrier, billingCharges, commentsChih, urgent, lineNumber, trackingNumber, 
                      pathTrackingNumber, received, arrivalDate, unloadedDate, pickupDateRequested, pickupDate, picker, commentsRBI, registroRBI, usuarioRBI, 
                      registroChih, usuarioChih, done
FROM         EmbarquesZodiac
ORDER BY urgent DESC, departureDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              commentsRBI = @commentsRBI\r\nWHERE    " +
                " (id = @id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsRBI", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "commentsRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT arrivalDate, billingCharges, carrier, carrierTruckNumber, coNumber, commentsChih, commentsRBI, departureDate, done, id, lineNumber, pathTrackingNumber, picker, pickupDate, pickupDateRequested, poNumber, received, registroChih, registroRBI, trackingNumber, unloadedDate, urgent, usuarioChih, usuarioRBI FROM EmbarquesZodiac WHERE (id = @id)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              arrivalDate = @arrivalDate\r\nWHERE    " +
                " (id = @id); \r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              done = @done\r\nWHERE     (id = @Origin" +
                "al_id); \r\n";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@done", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "done", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE    EmbarquesZodiac\r\nSET               picker = @picker\r\nWHERE     (id = @i" +
                "d); \r\n";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@picker", global::System.Data.SqlDbType.VarChar, 35, global::System.Data.ParameterDirection.Input, 0, 0, "picker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              pickupDate = @pickupDate\r\nWHERE     (" +
                "id = @id); \r\n";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pickupDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              pickupDateRequested = @pickupDateRequ" +
                "ested\r\nWHERE     (id = @id); \r\n";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pickupDateRequested", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "pickupDateRequested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              registroRBI = @registroRBI, usuarioRB" +
                "I = @usuarioRBI\r\nWHERE     (id = @id);  \r\n";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@registroRBI", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "registroRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usuarioRBI", global::System.Data.SqlDbType.VarChar, 35, global::System.Data.ParameterDirection.Input, 0, 0, "usuarioRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              received = @received\r\nWHERE     (id =" +
                " @Original_id); \r\n";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@received", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE    EmbarquesZodiac\r\nSET              trackingNumber = @trackingNumber\r\nWHE" +
                "RE     (id = @Original_id); \r\n";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trackingNumber", global::System.Data.SqlDbType.VarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, "trackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "UPDATE    EmbarquesZodiac\r\nSET               unloadedDate = @unloadedDate\r\nWHERE " +
                "    (id = @id); \r\n";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unloadedDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "unloadedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillEmbarques(core_v2DataSet.EmbarquesZodiacDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.EmbarquesZodiacDataTable GetDataEmbarques() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.EmbarquesZodiacDataTable dataTable = new core_v2DataSet.EmbarquesZodiacDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByRegistro(core_v2DataSet.EmbarquesZodiacDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual core_v2DataSet.EmbarquesZodiacDataTable GetDataByRegistro(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            core_v2DataSet.EmbarquesZodiacDataTable dataTable = new core_v2DataSet.EmbarquesZodiacDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.EmbarquesZodiacDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "EmbarquesZodiac");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_carrierTruckNumber, 
                    global::System.Nullable<global::System.DateTime> Original_departureDate, 
                    string Original_coNumber, 
                    string Original_poNumber, 
                    string Original_carrier, 
                    string Original_billingCharges, 
                    global::System.Nullable<bool> Original_urgent, 
                    string Original_lineNumber, 
                    string Original_trackingNumber, 
                    string Original_pathTrackingNumber, 
                    global::System.Nullable<bool> Original_received, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalDate, 
                    global::System.Nullable<global::System.DateTime> Original_unloadedDate, 
                    global::System.Nullable<global::System.DateTime> Original_pickupDateRequested, 
                    global::System.Nullable<global::System.DateTime> Original_pickupDate, 
                    string Original_picker, 
                    global::System.Nullable<global::System.DateTime> Original_registroRBI, 
                    string Original_usuarioRBI, 
                    global::System.Nullable<global::System.DateTime> Original_registroChih, 
                    string Original_usuarioChih, 
                    global::System.Nullable<bool> Original_done) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_carrierTruckNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_carrierTruckNumber));
            }
            if ((Original_departureDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_departureDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_coNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_coNumber));
            }
            if ((Original_poNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_poNumber));
            }
            if ((Original_carrier == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_carrier));
            }
            if ((Original_billingCharges == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_billingCharges));
            }
            if ((Original_urgent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_urgent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_lineNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_lineNumber));
            }
            if ((Original_trackingNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_trackingNumber));
            }
            if ((Original_pathTrackingNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_pathTrackingNumber));
            }
            if ((Original_received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_arrivalDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_arrivalDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_unloadedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_unloadedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_pickupDateRequested.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_pickupDateRequested.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_pickupDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_pickupDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_picker == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_picker));
            }
            if ((Original_registroRBI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_registroRBI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_usuarioRBI == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_usuarioRBI));
            }
            if ((Original_registroChih.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_registroChih.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_usuarioChih == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_usuarioChih));
            }
            if ((Original_done.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_done.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string carrierTruckNumber, 
                    global::System.Nullable<global::System.DateTime> departureDate, 
                    string coNumber, 
                    string poNumber, 
                    string carrier, 
                    string billingCharges, 
                    string commentsChih, 
                    global::System.Nullable<bool> urgent, 
                    string lineNumber, 
                    string trackingNumber, 
                    string pathTrackingNumber, 
                    global::System.Nullable<bool> received, 
                    global::System.Nullable<global::System.DateTime> arrivalDate, 
                    global::System.Nullable<global::System.DateTime> unloadedDate, 
                    global::System.Nullable<global::System.DateTime> pickupDateRequested, 
                    global::System.Nullable<global::System.DateTime> pickupDate, 
                    string picker, 
                    string commentsRBI, 
                    global::System.Nullable<global::System.DateTime> registroRBI, 
                    string usuarioRBI, 
                    global::System.Nullable<global::System.DateTime> registroChih, 
                    string usuarioChih, 
                    global::System.Nullable<bool> done) {
            if ((carrierTruckNumber == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(carrierTruckNumber));
            }
            if ((departureDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(departureDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((coNumber == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(coNumber));
            }
            if ((poNumber == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(poNumber));
            }
            if ((carrier == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(carrier));
            }
            if ((billingCharges == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(billingCharges));
            }
            if ((commentsChih == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(commentsChih));
            }
            if ((urgent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(urgent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((lineNumber == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(lineNumber));
            }
            if ((trackingNumber == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(trackingNumber));
            }
            if ((pathTrackingNumber == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(pathTrackingNumber));
            }
            if ((received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((arrivalDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(arrivalDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((unloadedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(unloadedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((pickupDateRequested.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(pickupDateRequested.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((pickupDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(pickupDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((picker == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(picker));
            }
            if ((commentsRBI == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(commentsRBI));
            }
            if ((registroRBI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(registroRBI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((usuarioRBI == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(usuarioRBI));
            }
            if ((registroChih.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(registroChih.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((usuarioChih == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(usuarioChih));
            }
            if ((done.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(done.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string carrierTruckNumber, 
                    global::System.Nullable<global::System.DateTime> departureDate, 
                    string coNumber, 
                    string poNumber, 
                    string carrier, 
                    string billingCharges, 
                    string commentsChih, 
                    global::System.Nullable<bool> urgent, 
                    string lineNumber, 
                    string trackingNumber, 
                    string pathTrackingNumber, 
                    global::System.Nullable<bool> received, 
                    global::System.Nullable<global::System.DateTime> arrivalDate, 
                    global::System.Nullable<global::System.DateTime> unloadedDate, 
                    global::System.Nullable<global::System.DateTime> pickupDateRequested, 
                    global::System.Nullable<global::System.DateTime> pickupDate, 
                    string picker, 
                    string commentsRBI, 
                    global::System.Nullable<global::System.DateTime> registroRBI, 
                    string usuarioRBI, 
                    global::System.Nullable<global::System.DateTime> registroChih, 
                    string usuarioChih, 
                    global::System.Nullable<bool> done, 
                    int Original_id, 
                    string Original_carrierTruckNumber, 
                    global::System.Nullable<global::System.DateTime> Original_departureDate, 
                    string Original_coNumber, 
                    string Original_poNumber, 
                    string Original_carrier, 
                    string Original_billingCharges, 
                    global::System.Nullable<bool> Original_urgent, 
                    string Original_lineNumber, 
                    string Original_trackingNumber, 
                    string Original_pathTrackingNumber, 
                    global::System.Nullable<bool> Original_received, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalDate, 
                    global::System.Nullable<global::System.DateTime> Original_unloadedDate, 
                    global::System.Nullable<global::System.DateTime> Original_pickupDateRequested, 
                    global::System.Nullable<global::System.DateTime> Original_pickupDate, 
                    string Original_picker, 
                    global::System.Nullable<global::System.DateTime> Original_registroRBI, 
                    string Original_usuarioRBI, 
                    global::System.Nullable<global::System.DateTime> Original_registroChih, 
                    string Original_usuarioChih, 
                    global::System.Nullable<bool> Original_done, 
                    int id) {
            if ((carrierTruckNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(carrierTruckNumber));
            }
            if ((departureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(departureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((coNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(coNumber));
            }
            if ((poNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(poNumber));
            }
            if ((carrier == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(carrier));
            }
            if ((billingCharges == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(billingCharges));
            }
            if ((commentsChih == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(commentsChih));
            }
            if ((urgent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(urgent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((lineNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(lineNumber));
            }
            if ((trackingNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(trackingNumber));
            }
            if ((pathTrackingNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(pathTrackingNumber));
            }
            if ((received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((arrivalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(arrivalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((unloadedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(unloadedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((pickupDateRequested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(pickupDateRequested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((pickupDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(pickupDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((picker == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(picker));
            }
            if ((commentsRBI == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(commentsRBI));
            }
            if ((registroRBI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(registroRBI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((usuarioRBI == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(usuarioRBI));
            }
            if ((registroChih.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(registroChih.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((usuarioChih == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(usuarioChih));
            }
            if ((done.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(done.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_id));
            if ((Original_carrierTruckNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_carrierTruckNumber));
            }
            if ((Original_departureDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_departureDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_coNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_coNumber));
            }
            if ((Original_poNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_poNumber));
            }
            if ((Original_carrier == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_carrier));
            }
            if ((Original_billingCharges == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_billingCharges));
            }
            if ((Original_urgent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_urgent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_lineNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_lineNumber));
            }
            if ((Original_trackingNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_trackingNumber));
            }
            if ((Original_pathTrackingNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_pathTrackingNumber));
            }
            if ((Original_received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(Original_received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_arrivalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Original_arrivalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_unloadedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_unloadedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_pickupDateRequested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_pickupDateRequested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_pickupDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_pickupDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_picker == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_picker));
            }
            if ((Original_registroRBI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_registroRBI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_usuarioRBI == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_usuarioRBI));
            }
            if ((Original_registroChih.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_registroChih.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_usuarioChih == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_usuarioChih));
            }
            if ((Original_done.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_done.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string carrierTruckNumber, 
                    global::System.Nullable<global::System.DateTime> departureDate, 
                    string coNumber, 
                    string poNumber, 
                    string carrier, 
                    string billingCharges, 
                    string commentsChih, 
                    global::System.Nullable<bool> urgent, 
                    string lineNumber, 
                    string trackingNumber, 
                    string pathTrackingNumber, 
                    global::System.Nullable<bool> received, 
                    global::System.Nullable<global::System.DateTime> arrivalDate, 
                    global::System.Nullable<global::System.DateTime> unloadedDate, 
                    global::System.Nullable<global::System.DateTime> pickupDateRequested, 
                    global::System.Nullable<global::System.DateTime> pickupDate, 
                    string picker, 
                    string commentsRBI, 
                    global::System.Nullable<global::System.DateTime> registroRBI, 
                    string usuarioRBI, 
                    global::System.Nullable<global::System.DateTime> registroChih, 
                    string usuarioChih, 
                    global::System.Nullable<bool> done, 
                    int Original_id, 
                    string Original_carrierTruckNumber, 
                    global::System.Nullable<global::System.DateTime> Original_departureDate, 
                    string Original_coNumber, 
                    string Original_poNumber, 
                    string Original_carrier, 
                    string Original_billingCharges, 
                    global::System.Nullable<bool> Original_urgent, 
                    string Original_lineNumber, 
                    string Original_trackingNumber, 
                    string Original_pathTrackingNumber, 
                    global::System.Nullable<bool> Original_received, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalDate, 
                    global::System.Nullable<global::System.DateTime> Original_unloadedDate, 
                    global::System.Nullable<global::System.DateTime> Original_pickupDateRequested, 
                    global::System.Nullable<global::System.DateTime> Original_pickupDate, 
                    string Original_picker, 
                    global::System.Nullable<global::System.DateTime> Original_registroRBI, 
                    string Original_usuarioRBI, 
                    global::System.Nullable<global::System.DateTime> Original_registroChih, 
                    string Original_usuarioChih, 
                    global::System.Nullable<bool> Original_done) {
            return this.Update(carrierTruckNumber, departureDate, coNumber, poNumber, carrier, billingCharges, commentsChih, urgent, lineNumber, trackingNumber, pathTrackingNumber, received, arrivalDate, unloadedDate, pickupDateRequested, pickupDate, picker, commentsRBI, registroRBI, usuarioRBI, registroChih, usuarioChih, done, Original_id, Original_carrierTruckNumber, Original_departureDate, Original_coNumber, Original_poNumber, Original_carrier, Original_billingCharges, Original_urgent, Original_lineNumber, Original_trackingNumber, Original_pathTrackingNumber, Original_received, Original_arrivalDate, Original_unloadedDate, Original_pickupDateRequested, Original_pickupDate, Original_picker, Original_registroRBI, Original_usuarioRBI, Original_registroChih, Original_usuarioChih, Original_done, Original_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int AddComments(string commentsRBI, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((commentsRBI == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(commentsRBI));
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateArrivalDate(global::System.Nullable<global::System.DateTime> arrivalDate, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((arrivalDate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(arrivalDate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateDone(global::System.Nullable<bool> done, int Original_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((done.HasValue == true)) {
                command.Parameters[0].Value = ((bool)(done.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdatePicker(string picker, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((picker == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(picker));
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdatePickupDate(global::System.Nullable<global::System.DateTime> pickupDate, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((pickupDate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(pickupDate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdatePickupDateRequested(global::System.Nullable<global::System.DateTime> pickupDateRequested, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[7];
            if ((pickupDateRequested.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(pickupDateRequested.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryRegistro(global::System.Nullable<global::System.DateTime> registroRBI, string usuarioRBI, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[8];
            if ((registroRBI.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(registroRBI.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((usuarioRBI == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(usuarioRBI));
            }
            command.Parameters[2].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateReceived(global::System.Nullable<bool> received, int Original_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[9];
            if ((received.HasValue == true)) {
                command.Parameters[0].Value = ((bool)(received.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTrackingNumber(string trackingNumber, int Original_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[10];
            if ((trackingNumber == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(trackingNumber));
            }
            command.Parameters[1].Value = ((int)(Original_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateUnloadedDate(global::System.Nullable<global::System.DateTime> unloadedDate, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[11];
            if ((unloadedDate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(unloadedDate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sku_escanearTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sku_escanearTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sku_escanear";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            tableMapping.ColumnMappings.Add("fecha", "fecha");
            tableMapping.ColumnMappings.Add("escaneado", "escaneado");
            tableMapping.ColumnMappings.Add("nid_cliente", "nid_cliente");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [sku_escanear] WHERE (([id] = @Original_id) AND ([nid_sku] = @Origina" +
                "l_nid_sku) AND ([fecha] = @Original_fecha) AND ([escaneado] = @Original_escanead" +
                "o) AND ([nid_cliente] = @Original_nid_cliente))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [sku_escanear] ([nid_sku], [fecha], [escaneado], [nid_cliente]) VALUE" +
                "S (@nid_sku, @fecha, @escaneado, @nid_cliente);\r\nSELECT id, nid_sku, fecha, esca" +
                "neado, nid_cliente FROM sku_escanear WHERE (id = SCOPE_IDENTITY()) ORDER BY fech" +
                "a DESC";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [sku_escanear] SET [nid_sku] = @nid_sku, [fecha] = @fecha, [escaneado] = @escaneado, [nid_cliente] = @nid_cliente WHERE (([id] = @Original_id) AND ([nid_sku] = @Original_nid_sku) AND ([fecha] = @Original_fecha) AND ([escaneado] = @Original_escaneado) AND ([nid_cliente] = @Original_nid_cliente));
SELECT id, nid_sku, fecha, escaneado, nid_cliente FROM sku_escanear WHERE (id = @id) ORDER BY fecha DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     id, nid_sku, fecha, escaneado, nid_cliente
FROM         sku_escanear
WHERE     (nid_cliente = @nid_cliente) AND (escaneado = @escaneado) AND (fecha BETWEEN DATEADD(MONTH, - 1, GETDATE()) AND DATEADD(day, 1, 
                      GETDATE()))
ORDER BY fecha DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO [sku_escanear] ([nid_sku], [fecha], [escaneado], [nid_cliente]) VALUE" +
                "S (@nid_sku, @fecha, @escaneado, @nid_cliente);\r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillskuEscanear(core_v2DataSet.sku_escanearDataTable dataTable, int nid_cliente, bool escaneado) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nid_cliente));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(escaneado));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.sku_escanearDataTable GetDataskuEscanear(int nid_cliente, bool escaneado) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nid_cliente));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(escaneado));
            core_v2DataSet.sku_escanearDataTable dataTable = new core_v2DataSet.sku_escanearDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.sku_escanearDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "sku_escanear");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_nid_sku, System.DateTime Original_fecha, bool Original_escaneado, int Original_nid_cliente) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_nid_sku == null)) {
                throw new global::System.ArgumentNullException("Original_nid_sku");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nid_sku));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_fecha));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_escaneado));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_nid_cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente) {
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nid_sku));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(fecha));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(escaneado));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(nid_cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente, int Original_id, string Original_nid_sku, System.DateTime Original_fecha, bool Original_escaneado, int Original_nid_cliente, int id) {
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nid_sku));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(fecha));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(escaneado));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(nid_cliente));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_nid_sku == null)) {
                throw new global::System.ArgumentNullException("Original_nid_sku");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_nid_sku));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_fecha));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Original_escaneado));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_nid_cliente));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente, int Original_id, string Original_nid_sku, System.DateTime Original_fecha, bool Original_escaneado, int Original_nid_cliente) {
            return this.Update(nid_sku, fecha, escaneado, nid_cliente, Original_id, Original_nid_sku, Original_fecha, Original_escaneado, Original_nid_cliente, Original_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertskuEscanear(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                command.Parameters[0].Value = ((string)(nid_sku));
            }
            command.Parameters[1].Value = ((System.DateTime)(fecha));
            command.Parameters[2].Value = ((bool)(escaneado));
            command.Parameters[3].Value = ((int)(nid_cliente));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ai_Reporte_Bultos_V2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ai_Reporte_Bultos_V2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ai_Reporte_Bultos_V2";
            tableMapping.ColumnMappings.Add("TrackingNumber", "TrackingNumber");
            tableMapping.ColumnMappings.Add("BundleType", "BundleType");
            tableMapping.ColumnMappings.Add("BundleConditions", "BundleConditions");
            tableMapping.ColumnMappings.Add("DateArrive", "DateArrive");
            tableMapping.ColumnMappings.Add("MonthArrive", "MonthArrive");
            tableMapping.ColumnMappings.Add("WeekArrive", "WeekArrive");
            tableMapping.ColumnMappings.Add("DayArrive", "DayArrive");
            tableMapping.ColumnMappings.Add("HourArrive", "HourArrive");
            tableMapping.ColumnMappings.Add("Carrier", "Carrier");
            tableMapping.ColumnMappings.Add("IdArrive", "IdArrive");
            tableMapping.ColumnMappings.Add("GuideNumber", "GuideNumber");
            tableMapping.ColumnMappings.Add("TransportType", "TransportType");
            tableMapping.ColumnMappings.Add("BundlePersonAssigned", "BundlePersonAssigned");
            tableMapping.ColumnMappings.Add("CustomerAssigned", "CustomerAssigned");
            tableMapping.ColumnMappings.Add("BundleLevel", "BundleLevel");
            tableMapping.ColumnMappings.Add("ParentBundle", "ParentBundle");
            tableMapping.ColumnMappings.Add("DispatchID", "DispatchID");
            tableMapping.ColumnMappings.Add("DispatchedBy", "DispatchedBy");
            tableMapping.ColumnMappings.Add("DispatchedCustomerID", "DispatchedCustomerID");
            tableMapping.ColumnMappings.Add("DispatchedCustomer", "DispatchedCustomer");
            tableMapping.ColumnMappings.Add("DispatchedDate", "DispatchedDate");
            tableMapping.ColumnMappings.Add("DispatchCarrier", "DispatchCarrier");
            tableMapping.ColumnMappings.Add("DispatchBoxNumber", "DispatchBoxNumber");
            tableMapping.ColumnMappings.Add("PackingList", "PackingList");
            tableMapping.ColumnMappings.Add("PackingListPDF", "PackingListPDF");
            tableMapping.ColumnMappings.Add("Recorddate", "Recorddate");
            tableMapping.ColumnMappings.Add("ReporteBultosID", "ReporteBultosID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ai_Reporte_Bultos_V2] WHERE (([TrackingNumber] = @Original_TrackingN" +
                "umber) AND ((@IsNull_BundleType = 1 AND [BundleType] IS NULL) OR ([BundleType] =" +
                " @Original_BundleType)) AND ((@IsNull_BundleConditions = 1 AND [BundleConditions" +
                "] IS NULL) OR ([BundleConditions] = @Original_BundleConditions)) AND ((@IsNull_D" +
                "ateArrive = 1 AND [DateArrive] IS NULL) OR ([DateArrive] = @Original_DateArrive)" +
                ") AND ((@IsNull_MonthArrive = 1 AND [MonthArrive] IS NULL) OR ([MonthArrive] = @" +
                "Original_MonthArrive)) AND ((@IsNull_WeekArrive = 1 AND [WeekArrive] IS NULL) OR" +
                " ([WeekArrive] = @Original_WeekArrive)) AND ((@IsNull_DayArrive = 1 AND [DayArri" +
                "ve] IS NULL) OR ([DayArrive] = @Original_DayArrive)) AND ((@IsNull_HourArrive = " +
                "1 AND [HourArrive] IS NULL) OR ([HourArrive] = @Original_HourArrive)) AND ((@IsN" +
                "ull_Carrier = 1 AND [Carrier] IS NULL) OR ([Carrier] = @Original_Carrier)) AND (" +
                "[IdArrive] = @Original_IdArrive) AND ((@IsNull_GuideNumber = 1 AND [GuideNumber]" +
                " IS NULL) OR ([GuideNumber] = @Original_GuideNumber)) AND ([TransportType] = @Or" +
                "iginal_TransportType) AND ((@IsNull_BundlePersonAssigned = 1 AND [BundlePersonAs" +
                "signed] IS NULL) OR ([BundlePersonAssigned] = @Original_BundlePersonAssigned)) A" +
                "ND ((@IsNull_CustomerAssigned = 1 AND [CustomerAssigned] IS NULL) OR ([CustomerA" +
                "ssigned] = @Original_CustomerAssigned)) AND ((@IsNull_BundleLevel = 1 AND [Bundl" +
                "eLevel] IS NULL) OR ([BundleLevel] = @Original_BundleLevel)) AND ((@IsNull_Paren" +
                "tBundle = 1 AND [ParentBundle] IS NULL) OR ([ParentBundle] = @Original_ParentBun" +
                "dle)) AND ((@IsNull_DispatchID = 1 AND [DispatchID] IS NULL) OR ([DispatchID] = " +
                "@Original_DispatchID)) AND ((@IsNull_DispatchedBy = 1 AND [DispatchedBy] IS NULL" +
                ") OR ([DispatchedBy] = @Original_DispatchedBy)) AND ((@IsNull_DispatchedCustomer" +
                "ID = 1 AND [DispatchedCustomerID] IS NULL) OR ([DispatchedCustomerID] = @Origina" +
                "l_DispatchedCustomerID)) AND ((@IsNull_DispatchedCustomer = 1 AND [DispatchedCus" +
                "tomer] IS NULL) OR ([DispatchedCustomer] = @Original_DispatchedCustomer)) AND ((" +
                "@IsNull_DispatchedDate = 1 AND [DispatchedDate] IS NULL) OR ([DispatchedDate] = " +
                "@Original_DispatchedDate)) AND ((@IsNull_DispatchCarrier = 1 AND [DispatchCarrie" +
                "r] IS NULL) OR ([DispatchCarrier] = @Original_DispatchCarrier)) AND ((@IsNull_Di" +
                "spatchBoxNumber = 1 AND [DispatchBoxNumber] IS NULL) OR ([DispatchBoxNumber] = @" +
                "Original_DispatchBoxNumber)) AND ((@IsNull_PackingList = 1 AND [PackingList] IS " +
                "NULL) OR ([PackingList] = @Original_PackingList)) AND ((@IsNull_PackingListPDF =" +
                " 1 AND [PackingListPDF] IS NULL) OR ([PackingListPDF] = @Original_PackingListPDF" +
                ")) AND ((@IsNull_Recorddate = 1 AND [Recorddate] IS NULL) OR ([Recorddate] = @Or" +
                "iginal_Recorddate)) AND ([ReporteBultosID] = @Original_ReporteBultosID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundleType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundleType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundleConditions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleConditions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundleConditions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleConditions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateArrive", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MonthArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeekArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeekArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DayArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DayArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HourArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HourArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Carrier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carrier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carrier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GuideNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuideNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuideNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuideNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundlePersonAssigned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundlePersonAssigned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundlePersonAssigned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundlePersonAssigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerAssigned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAssigned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerAssigned", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAssigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundleLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundleLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ParentBundle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentBundle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentBundle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentBundle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedCustomer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedCustomer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchCarrier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchCarrier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchCarrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchCarrier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchBoxNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchBoxNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchBoxNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchBoxNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingList", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingList", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingList", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingListPDF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListPDF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingListPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListPDF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recorddate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorddate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorddate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReporteBultosID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReporteBultosID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ai_Reporte_Bultos_V2] ([TrackingNumber], [BundleType], [BundleConditions], [DateArrive], [MonthArrive], [WeekArrive], [DayArrive], [HourArrive], [Carrier], [IdArrive], [GuideNumber], [TransportType], [BundlePersonAssigned], [CustomerAssigned], [BundleLevel], [ParentBundle], [DispatchID], [DispatchedBy], [DispatchedCustomerID], [DispatchedCustomer], [DispatchedDate], [DispatchCarrier], [DispatchBoxNumber], [PackingList], [PackingListPDF], [Recorddate]) VALUES (@TrackingNumber, @BundleType, @BundleConditions, @DateArrive, @MonthArrive, @WeekArrive, @DayArrive, @HourArrive, @Carrier, @IdArrive, @GuideNumber, @TransportType, @BundlePersonAssigned, @CustomerAssigned, @BundleLevel, @ParentBundle, @DispatchID, @DispatchedBy, @DispatchedCustomerID, @DispatchedCustomer, @DispatchedDate, @DispatchCarrier, @DispatchBoxNumber, @PackingList, @PackingListPDF, @Recorddate);
SELECT TrackingNumber, BundleType, BundleConditions, DateArrive, MonthArrive, WeekArrive, DayArrive, HourArrive, Carrier, IdArrive, GuideNumber, TransportType, BundlePersonAssigned, CustomerAssigned, BundleLevel, ParentBundle, DispatchID, DispatchedBy, DispatchedCustomerID, DispatchedCustomer, DispatchedDate, DispatchCarrier, DispatchBoxNumber, PackingList, PackingListPDF, Recorddate, ReporteBultosID FROM ai_Reporte_Bultos_V2 WHERE (ReporteBultosID = SCOPE_IDENTITY()) ORDER BY DateArrive DESC";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundleType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundleConditions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleConditions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateArrive", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeekArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carrier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuideNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuideNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundlePersonAssigned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundlePersonAssigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAssigned", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAssigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundleLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentBundle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentBundle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedCustomer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchCarrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchCarrier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchBoxNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchBoxNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingList", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingListPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListPDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ai_Reporte_Bultos_V2] SET [TrackingNumber] = @TrackingNumber, [BundleType" +
                "] = @BundleType, [BundleConditions] = @BundleConditions, [DateArrive] = @DateArr" +
                "ive, [MonthArrive] = @MonthArrive, [WeekArrive] = @WeekArrive, [DayArrive] = @Da" +
                "yArrive, [HourArrive] = @HourArrive, [Carrier] = @Carrier, [IdArrive] = @IdArriv" +
                "e, [GuideNumber] = @GuideNumber, [TransportType] = @TransportType, [BundlePerson" +
                "Assigned] = @BundlePersonAssigned, [CustomerAssigned] = @CustomerAssigned, [Bund" +
                "leLevel] = @BundleLevel, [ParentBundle] = @ParentBundle, [DispatchID] = @Dispatc" +
                "hID, [DispatchedBy] = @DispatchedBy, [DispatchedCustomerID] = @DispatchedCustome" +
                "rID, [DispatchedCustomer] = @DispatchedCustomer, [DispatchedDate] = @DispatchedD" +
                "ate, [DispatchCarrier] = @DispatchCarrier, [DispatchBoxNumber] = @DispatchBoxNum" +
                "ber, [PackingList] = @PackingList, [PackingListPDF] = @PackingListPDF, [Recordda" +
                "te] = @Recorddate WHERE (([TrackingNumber] = @Original_TrackingNumber) AND ((@Is" +
                "Null_BundleType = 1 AND [BundleType] IS NULL) OR ([BundleType] = @Original_Bundl" +
                "eType)) AND ((@IsNull_BundleConditions = 1 AND [BundleConditions] IS NULL) OR ([" +
                "BundleConditions] = @Original_BundleConditions)) AND ((@IsNull_DateArrive = 1 AN" +
                "D [DateArrive] IS NULL) OR ([DateArrive] = @Original_DateArrive)) AND ((@IsNull_" +
                "MonthArrive = 1 AND [MonthArrive] IS NULL) OR ([MonthArrive] = @Original_MonthAr" +
                "rive)) AND ((@IsNull_WeekArrive = 1 AND [WeekArrive] IS NULL) OR ([WeekArrive] =" +
                " @Original_WeekArrive)) AND ((@IsNull_DayArrive = 1 AND [DayArrive] IS NULL) OR " +
                "([DayArrive] = @Original_DayArrive)) AND ((@IsNull_HourArrive = 1 AND [HourArriv" +
                "e] IS NULL) OR ([HourArrive] = @Original_HourArrive)) AND ((@IsNull_Carrier = 1 " +
                "AND [Carrier] IS NULL) OR ([Carrier] = @Original_Carrier)) AND ([IdArrive] = @Or" +
                "iginal_IdArrive) AND ((@IsNull_GuideNumber = 1 AND [GuideNumber] IS NULL) OR ([G" +
                "uideNumber] = @Original_GuideNumber)) AND ([TransportType] = @Original_Transport" +
                "Type) AND ((@IsNull_BundlePersonAssigned = 1 AND [BundlePersonAssigned] IS NULL)" +
                " OR ([BundlePersonAssigned] = @Original_BundlePersonAssigned)) AND ((@IsNull_Cus" +
                "tomerAssigned = 1 AND [CustomerAssigned] IS NULL) OR ([CustomerAssigned] = @Orig" +
                "inal_CustomerAssigned)) AND ((@IsNull_BundleLevel = 1 AND [BundleLevel] IS NULL)" +
                " OR ([BundleLevel] = @Original_BundleLevel)) AND ((@IsNull_ParentBundle = 1 AND " +
                "[ParentBundle] IS NULL) OR ([ParentBundle] = @Original_ParentBundle)) AND ((@IsN" +
                "ull_DispatchID = 1 AND [DispatchID] IS NULL) OR ([DispatchID] = @Original_Dispat" +
                "chID)) AND ((@IsNull_DispatchedBy = 1 AND [DispatchedBy] IS NULL) OR ([Dispatche" +
                "dBy] = @Original_DispatchedBy)) AND ((@IsNull_DispatchedCustomerID = 1 AND [Disp" +
                "atchedCustomerID] IS NULL) OR ([DispatchedCustomerID] = @Original_DispatchedCust" +
                "omerID)) AND ((@IsNull_DispatchedCustomer = 1 AND [DispatchedCustomer] IS NULL) " +
                "OR ([DispatchedCustomer] = @Original_DispatchedCustomer)) AND ((@IsNull_Dispatch" +
                "edDate = 1 AND [DispatchedDate] IS NULL) OR ([DispatchedDate] = @Original_Dispat" +
                "chedDate)) AND ((@IsNull_DispatchCarrier = 1 AND [DispatchCarrier] IS NULL) OR (" +
                "[DispatchCarrier] = @Original_DispatchCarrier)) AND ((@IsNull_DispatchBoxNumber " +
                "= 1 AND [DispatchBoxNumber] IS NULL) OR ([DispatchBoxNumber] = @Original_Dispatc" +
                "hBoxNumber)) AND ((@IsNull_PackingList = 1 AND [PackingList] IS NULL) OR ([Packi" +
                "ngList] = @Original_PackingList)) AND ((@IsNull_PackingListPDF = 1 AND [PackingL" +
                "istPDF] IS NULL) OR ([PackingListPDF] = @Original_PackingListPDF)) AND ((@IsNull" +
                "_Recorddate = 1 AND [Recorddate] IS NULL) OR ([Recorddate] = @Original_Recorddat" +
                "e)) AND ([ReporteBultosID] = @Original_ReporteBultosID));\r\nSELECT TrackingNumber" +
                ", BundleType, BundleConditions, DateArrive, MonthArrive, WeekArrive, DayArrive, " +
                "HourArrive, Carrier, IdArrive, GuideNumber, TransportType, BundlePersonAssigned," +
                " CustomerAssigned, BundleLevel, ParentBundle, DispatchID, DispatchedBy, Dispatch" +
                "edCustomerID, DispatchedCustomer, DispatchedDate, DispatchCarrier, DispatchBoxNu" +
                "mber, PackingList, PackingListPDF, Recorddate, ReporteBultosID FROM ai_Reporte_B" +
                "ultos_V2 WHERE (ReporteBultosID = @ReporteBultosID) ORDER BY DateArrive DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundleType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundleConditions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleConditions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateArrive", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeekArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carrier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdArrive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuideNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuideNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundlePersonAssigned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundlePersonAssigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAssigned", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAssigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BundleLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentBundle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentBundle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedCustomer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchCarrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchCarrier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DispatchBoxNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchBoxNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingList", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingListPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListPDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recorddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrackingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundleType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundleType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundleConditions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleConditions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundleConditions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleConditions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateArrive", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MonthArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeekArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeekArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DayArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DayArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HourArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourArrive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HourArrive", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Carrier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carrier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carrier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdArrive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdArrive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GuideNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuideNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuideNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuideNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundlePersonAssigned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundlePersonAssigned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundlePersonAssigned", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundlePersonAssigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerAssigned", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAssigned", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerAssigned", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAssigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BundleLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BundleLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BundleLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ParentBundle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentBundle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentBundle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentBundle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedCustomer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedCustomer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedCustomer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchCarrier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchCarrier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchCarrier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchCarrier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DispatchBoxNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchBoxNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DispatchBoxNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DispatchBoxNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingList", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingList", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingList", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingListPDF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListPDF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingListPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListPDF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recorddate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorddate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recorddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recorddate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReporteBultosID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReporteBultosID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReporteBultosID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReporteBultosID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.Core_ReportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TrackingNumber, BundleType, BundleConditions, DateArrive, MonthArrive, WeekArrive, DayArrive, HourArrive, Carrier, IdArrive, GuideNumber, TransportType, BundlePersonAssigned, CustomerAssigned, BundleLevel, ParentBundle, DispatchID, DispatchedBy, DispatchedCustomerID, DispatchedCustomer, DispatchedDate, DispatchCarrier, DispatchBoxNumber, PackingList, PackingListPDF, Recorddate, ReporteBultosID FROM ai_Reporte_Bultos_V2 ORDER BY DateArrive DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCoreReports(core_v2DataSet.ai_Reporte_Bultos_V2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual core_v2DataSet.ai_Reporte_Bultos_V2DataTable GetDataCoreReports() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            core_v2DataSet.ai_Reporte_Bultos_V2DataTable dataTable = new core_v2DataSet.ai_Reporte_Bultos_V2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet.ai_Reporte_Bultos_V2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(core_v2DataSet dataSet) {
            return this.Adapter.Update(dataSet, "ai_Reporte_Bultos_V2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_TrackingNumber, 
                    string Original_BundleType, 
                    string Original_BundleConditions, 
                    global::System.Nullable<global::System.DateTime> Original_DateArrive, 
                    string Original_MonthArrive, 
                    string Original_WeekArrive, 
                    string Original_DayArrive, 
                    string Original_HourArrive, 
                    string Original_Carrier, 
                    int Original_IdArrive, 
                    string Original_GuideNumber, 
                    string Original_TransportType, 
                    string Original_BundlePersonAssigned, 
                    string Original_CustomerAssigned, 
                    string Original_BundleLevel, 
                    string Original_ParentBundle, 
                    global::System.Nullable<int> Original_DispatchID, 
                    string Original_DispatchedBy, 
                    global::System.Nullable<int> Original_DispatchedCustomerID, 
                    string Original_DispatchedCustomer, 
                    global::System.Nullable<global::System.DateTime> Original_DispatchedDate, 
                    string Original_DispatchCarrier, 
                    string Original_DispatchBoxNumber, 
                    string Original_PackingList, 
                    string Original_PackingListPDF, 
                    global::System.Nullable<global::System.DateTime> Original_Recorddate, 
                    int Original_ReporteBultosID) {
            if ((Original_TrackingNumber == null)) {
                throw new global::System.ArgumentNullException("Original_TrackingNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TrackingNumber));
            }
            if ((Original_BundleType == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BundleType));
            }
            if ((Original_BundleConditions == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BundleConditions));
            }
            if ((Original_DateArrive.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateArrive.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_MonthArrive == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MonthArrive));
            }
            if ((Original_WeekArrive == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_WeekArrive));
            }
            if ((Original_DayArrive == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_DayArrive));
            }
            if ((Original_HourArrive == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_HourArrive));
            }
            if ((Original_Carrier == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Carrier));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_IdArrive));
            if ((Original_GuideNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_GuideNumber));
            }
            if ((Original_TransportType == null)) {
                throw new global::System.ArgumentNullException("Original_TransportType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_TransportType));
            }
            if ((Original_BundlePersonAssigned == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_BundlePersonAssigned));
            }
            if ((Original_CustomerAssigned == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_CustomerAssigned));
            }
            if ((Original_BundleLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_BundleLevel));
            }
            if ((Original_ParentBundle == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_ParentBundle));
            }
            if ((Original_DispatchID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_DispatchID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_DispatchedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_DispatchedBy));
            }
            if ((Original_DispatchedCustomerID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_DispatchedCustomerID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_DispatchedCustomer == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_DispatchedCustomer));
            }
            if ((Original_DispatchedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_DispatchedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_DispatchCarrier == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_DispatchCarrier));
            }
            if ((Original_DispatchBoxNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_DispatchBoxNumber));
            }
            if ((Original_PackingList == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_PackingList));
            }
            if ((Original_PackingListPDF == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_PackingListPDF));
            }
            if ((Original_Recorddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_Recorddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[49].Value = ((int)(Original_ReporteBultosID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string TrackingNumber, 
                    string BundleType, 
                    string BundleConditions, 
                    global::System.Nullable<global::System.DateTime> DateArrive, 
                    string MonthArrive, 
                    string WeekArrive, 
                    string DayArrive, 
                    string HourArrive, 
                    string Carrier, 
                    int IdArrive, 
                    string GuideNumber, 
                    string TransportType, 
                    string BundlePersonAssigned, 
                    string CustomerAssigned, 
                    string BundleLevel, 
                    string ParentBundle, 
                    global::System.Nullable<int> DispatchID, 
                    string DispatchedBy, 
                    global::System.Nullable<int> DispatchedCustomerID, 
                    string DispatchedCustomer, 
                    global::System.Nullable<global::System.DateTime> DispatchedDate, 
                    string DispatchCarrier, 
                    string DispatchBoxNumber, 
                    string PackingList, 
                    string PackingListPDF, 
                    global::System.Nullable<global::System.DateTime> Recorddate) {
            if ((TrackingNumber == null)) {
                throw new global::System.ArgumentNullException("TrackingNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TrackingNumber));
            }
            if ((BundleType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BundleType));
            }
            if ((BundleConditions == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BundleConditions));
            }
            if ((DateArrive.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DateArrive.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MonthArrive == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MonthArrive));
            }
            if ((WeekArrive == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(WeekArrive));
            }
            if ((DayArrive == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DayArrive));
            }
            if ((HourArrive == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(HourArrive));
            }
            if ((Carrier == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Carrier));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(IdArrive));
            if ((GuideNumber == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(GuideNumber));
            }
            if ((TransportType == null)) {
                throw new global::System.ArgumentNullException("TransportType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(TransportType));
            }
            if ((BundlePersonAssigned == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(BundlePersonAssigned));
            }
            if ((CustomerAssigned == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CustomerAssigned));
            }
            if ((BundleLevel == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(BundleLevel));
            }
            if ((ParentBundle == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ParentBundle));
            }
            if ((DispatchID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(DispatchID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DispatchedBy == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DispatchedBy));
            }
            if ((DispatchedCustomerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(DispatchedCustomerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((DispatchedCustomer == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(DispatchedCustomer));
            }
            if ((DispatchedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(DispatchedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((DispatchCarrier == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(DispatchCarrier));
            }
            if ((DispatchBoxNumber == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(DispatchBoxNumber));
            }
            if ((PackingList == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(PackingList));
            }
            if ((PackingListPDF == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(PackingListPDF));
            }
            if ((Recorddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(Recorddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TrackingNumber, 
                    string BundleType, 
                    string BundleConditions, 
                    global::System.Nullable<global::System.DateTime> DateArrive, 
                    string MonthArrive, 
                    string WeekArrive, 
                    string DayArrive, 
                    string HourArrive, 
                    string Carrier, 
                    int IdArrive, 
                    string GuideNumber, 
                    string TransportType, 
                    string BundlePersonAssigned, 
                    string CustomerAssigned, 
                    string BundleLevel, 
                    string ParentBundle, 
                    global::System.Nullable<int> DispatchID, 
                    string DispatchedBy, 
                    global::System.Nullable<int> DispatchedCustomerID, 
                    string DispatchedCustomer, 
                    global::System.Nullable<global::System.DateTime> DispatchedDate, 
                    string DispatchCarrier, 
                    string DispatchBoxNumber, 
                    string PackingList, 
                    string PackingListPDF, 
                    global::System.Nullable<global::System.DateTime> Recorddate, 
                    string Original_TrackingNumber, 
                    string Original_BundleType, 
                    string Original_BundleConditions, 
                    global::System.Nullable<global::System.DateTime> Original_DateArrive, 
                    string Original_MonthArrive, 
                    string Original_WeekArrive, 
                    string Original_DayArrive, 
                    string Original_HourArrive, 
                    string Original_Carrier, 
                    int Original_IdArrive, 
                    string Original_GuideNumber, 
                    string Original_TransportType, 
                    string Original_BundlePersonAssigned, 
                    string Original_CustomerAssigned, 
                    string Original_BundleLevel, 
                    string Original_ParentBundle, 
                    global::System.Nullable<int> Original_DispatchID, 
                    string Original_DispatchedBy, 
                    global::System.Nullable<int> Original_DispatchedCustomerID, 
                    string Original_DispatchedCustomer, 
                    global::System.Nullable<global::System.DateTime> Original_DispatchedDate, 
                    string Original_DispatchCarrier, 
                    string Original_DispatchBoxNumber, 
                    string Original_PackingList, 
                    string Original_PackingListPDF, 
                    global::System.Nullable<global::System.DateTime> Original_Recorddate, 
                    int Original_ReporteBultosID, 
                    int ReporteBultosID) {
            if ((TrackingNumber == null)) {
                throw new global::System.ArgumentNullException("TrackingNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TrackingNumber));
            }
            if ((BundleType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BundleType));
            }
            if ((BundleConditions == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BundleConditions));
            }
            if ((DateArrive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DateArrive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MonthArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MonthArrive));
            }
            if ((WeekArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(WeekArrive));
            }
            if ((DayArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DayArrive));
            }
            if ((HourArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(HourArrive));
            }
            if ((Carrier == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Carrier));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(IdArrive));
            if ((GuideNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(GuideNumber));
            }
            if ((TransportType == null)) {
                throw new global::System.ArgumentNullException("TransportType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(TransportType));
            }
            if ((BundlePersonAssigned == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(BundlePersonAssigned));
            }
            if ((CustomerAssigned == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CustomerAssigned));
            }
            if ((BundleLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(BundleLevel));
            }
            if ((ParentBundle == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ParentBundle));
            }
            if ((DispatchID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(DispatchID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DispatchedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DispatchedBy));
            }
            if ((DispatchedCustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(DispatchedCustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((DispatchedCustomer == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(DispatchedCustomer));
            }
            if ((DispatchedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(DispatchedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((DispatchCarrier == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(DispatchCarrier));
            }
            if ((DispatchBoxNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(DispatchBoxNumber));
            }
            if ((PackingList == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(PackingList));
            }
            if ((PackingListPDF == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(PackingListPDF));
            }
            if ((Recorddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Recorddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_TrackingNumber == null)) {
                throw new global::System.ArgumentNullException("Original_TrackingNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TrackingNumber));
            }
            if ((Original_BundleType == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_BundleType));
            }
            if ((Original_BundleConditions == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_BundleConditions));
            }
            if ((Original_DateArrive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_DateArrive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_MonthArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_MonthArrive));
            }
            if ((Original_WeekArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_WeekArrive));
            }
            if ((Original_DayArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_DayArrive));
            }
            if ((Original_HourArrive == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_HourArrive));
            }
            if ((Original_Carrier == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Carrier));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_IdArrive));
            if ((Original_GuideNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_GuideNumber));
            }
            if ((Original_TransportType == null)) {
                throw new global::System.ArgumentNullException("Original_TransportType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_TransportType));
            }
            if ((Original_BundlePersonAssigned == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_BundlePersonAssigned));
            }
            if ((Original_CustomerAssigned == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_CustomerAssigned));
            }
            if ((Original_BundleLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_BundleLevel));
            }
            if ((Original_ParentBundle == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_ParentBundle));
            }
            if ((Original_DispatchID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_DispatchID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_DispatchedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_DispatchedBy));
            }
            if ((Original_DispatchedCustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_DispatchedCustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_DispatchedCustomer == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_DispatchedCustomer));
            }
            if ((Original_DispatchedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(Original_DispatchedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_DispatchCarrier == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_DispatchCarrier));
            }
            if ((Original_DispatchBoxNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_DispatchBoxNumber));
            }
            if ((Original_PackingList == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_PackingList));
            }
            if ((Original_PackingListPDF == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_PackingListPDF));
            }
            if ((Original_Recorddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_Recorddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_ReporteBultosID));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(ReporteBultosID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TrackingNumber, 
                    string BundleType, 
                    string BundleConditions, 
                    global::System.Nullable<global::System.DateTime> DateArrive, 
                    string MonthArrive, 
                    string WeekArrive, 
                    string DayArrive, 
                    string HourArrive, 
                    string Carrier, 
                    int IdArrive, 
                    string GuideNumber, 
                    string TransportType, 
                    string BundlePersonAssigned, 
                    string CustomerAssigned, 
                    string BundleLevel, 
                    string ParentBundle, 
                    global::System.Nullable<int> DispatchID, 
                    string DispatchedBy, 
                    global::System.Nullable<int> DispatchedCustomerID, 
                    string DispatchedCustomer, 
                    global::System.Nullable<global::System.DateTime> DispatchedDate, 
                    string DispatchCarrier, 
                    string DispatchBoxNumber, 
                    string PackingList, 
                    string PackingListPDF, 
                    global::System.Nullable<global::System.DateTime> Recorddate, 
                    string Original_TrackingNumber, 
                    string Original_BundleType, 
                    string Original_BundleConditions, 
                    global::System.Nullable<global::System.DateTime> Original_DateArrive, 
                    string Original_MonthArrive, 
                    string Original_WeekArrive, 
                    string Original_DayArrive, 
                    string Original_HourArrive, 
                    string Original_Carrier, 
                    int Original_IdArrive, 
                    string Original_GuideNumber, 
                    string Original_TransportType, 
                    string Original_BundlePersonAssigned, 
                    string Original_CustomerAssigned, 
                    string Original_BundleLevel, 
                    string Original_ParentBundle, 
                    global::System.Nullable<int> Original_DispatchID, 
                    string Original_DispatchedBy, 
                    global::System.Nullable<int> Original_DispatchedCustomerID, 
                    string Original_DispatchedCustomer, 
                    global::System.Nullable<global::System.DateTime> Original_DispatchedDate, 
                    string Original_DispatchCarrier, 
                    string Original_DispatchBoxNumber, 
                    string Original_PackingList, 
                    string Original_PackingListPDF, 
                    global::System.Nullable<global::System.DateTime> Original_Recorddate, 
                    int Original_ReporteBultosID) {
            return this.Update(TrackingNumber, BundleType, BundleConditions, DateArrive, MonthArrive, WeekArrive, DayArrive, HourArrive, Carrier, IdArrive, GuideNumber, TransportType, BundlePersonAssigned, CustomerAssigned, BundleLevel, ParentBundle, DispatchID, DispatchedBy, DispatchedCustomerID, DispatchedCustomer, DispatchedDate, DispatchCarrier, DispatchBoxNumber, PackingList, PackingListPDF, Recorddate, Original_TrackingNumber, Original_BundleType, Original_BundleConditions, Original_DateArrive, Original_MonthArrive, Original_WeekArrive, Original_DayArrive, Original_HourArrive, Original_Carrier, Original_IdArrive, Original_GuideNumber, Original_TransportType, Original_BundlePersonAssigned, Original_CustomerAssigned, Original_BundleLevel, Original_ParentBundle, Original_DispatchID, Original_DispatchedBy, Original_DispatchedCustomerID, Original_DispatchedCustomer, Original_DispatchedDate, Original_DispatchCarrier, Original_DispatchBoxNumber, Original_PackingList, Original_PackingListPDF, Original_Recorddate, Original_ReporteBultosID, Original_ReporteBultosID);
        }
    }
}

#pragma warning restore 1591