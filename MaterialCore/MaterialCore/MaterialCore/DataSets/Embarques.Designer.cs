//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MaterialCore.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Embarques")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Embarques : global::System.Data.DataSet {
        
        private MaterialesSinEnviarPlantaDataTable tableMaterialesSinEnviarPlanta;
        
        private MaterialesSinEnviarDataTable tableMaterialesSinEnviar;
        
        private GenerarTXTDataTable tableGenerarTXT;
        
        private ProveedoresTXTDataTable tableProveedoresTXT;
        
        private SKUSinPackingDataTable tableSKUSinPacking;
        
        private PLSinEscanearDataTable tablePLSinEscanear;
        
        private MaterialesPaltetasDataTable tableMaterialesPaltetas;
        
        private MaterialesEnviarDataTable tableMaterialesEnviar;
        
        private GenerarTXTRehacerDataTable tableGenerarTXTRehacer;
        
        private ProveedoresTXTRehacerDataTable tableProveedoresTXTRehacer;
        
        private sku_escanearDataTable tablesku_escanear;
        
        private MaterialesPaletasGuiasDataTable tableMaterialesPaletasGuias;
        
        private DetenerPartidaConTarimaDataTable tableDetenerPartidaConTarima;
        
        private DetenerPartidaSinEnviarDataTable tableDetenerPartidaSinEnviar;
        
        private ConsecutivoEmbarqueDataTable tableConsecutivoEmbarque;
        
        private ProveedoresConsecutivoDataTable tableProveedoresConsecutivo;
        
        private DatosComplementariosDataTable tableDatosComplementarios;
        
        private PartidasDespachadasDataTable tablePartidasDespachadas;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Embarques() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Embarques(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MaterialesSinEnviarPlanta"] != null)) {
                    base.Tables.Add(new MaterialesSinEnviarPlantaDataTable(ds.Tables["MaterialesSinEnviarPlanta"]));
                }
                if ((ds.Tables["MaterialesSinEnviar"] != null)) {
                    base.Tables.Add(new MaterialesSinEnviarDataTable(ds.Tables["MaterialesSinEnviar"]));
                }
                if ((ds.Tables["GenerarTXT"] != null)) {
                    base.Tables.Add(new GenerarTXTDataTable(ds.Tables["GenerarTXT"]));
                }
                if ((ds.Tables["ProveedoresTXT"] != null)) {
                    base.Tables.Add(new ProveedoresTXTDataTable(ds.Tables["ProveedoresTXT"]));
                }
                if ((ds.Tables["SKUSinPacking"] != null)) {
                    base.Tables.Add(new SKUSinPackingDataTable(ds.Tables["SKUSinPacking"]));
                }
                if ((ds.Tables["PLSinEscanear"] != null)) {
                    base.Tables.Add(new PLSinEscanearDataTable(ds.Tables["PLSinEscanear"]));
                }
                if ((ds.Tables["MaterialesPaltetas"] != null)) {
                    base.Tables.Add(new MaterialesPaltetasDataTable(ds.Tables["MaterialesPaltetas"]));
                }
                if ((ds.Tables["MaterialesEnviar"] != null)) {
                    base.Tables.Add(new MaterialesEnviarDataTable(ds.Tables["MaterialesEnviar"]));
                }
                if ((ds.Tables["GenerarTXTRehacer"] != null)) {
                    base.Tables.Add(new GenerarTXTRehacerDataTable(ds.Tables["GenerarTXTRehacer"]));
                }
                if ((ds.Tables["ProveedoresTXTRehacer"] != null)) {
                    base.Tables.Add(new ProveedoresTXTRehacerDataTable(ds.Tables["ProveedoresTXTRehacer"]));
                }
                if ((ds.Tables["sku_escanear"] != null)) {
                    base.Tables.Add(new sku_escanearDataTable(ds.Tables["sku_escanear"]));
                }
                if ((ds.Tables["MaterialesPaletasGuias"] != null)) {
                    base.Tables.Add(new MaterialesPaletasGuiasDataTable(ds.Tables["MaterialesPaletasGuias"]));
                }
                if ((ds.Tables["DetenerPartidaConTarima"] != null)) {
                    base.Tables.Add(new DetenerPartidaConTarimaDataTable(ds.Tables["DetenerPartidaConTarima"]));
                }
                if ((ds.Tables["DetenerPartidaSinEnviar"] != null)) {
                    base.Tables.Add(new DetenerPartidaSinEnviarDataTable(ds.Tables["DetenerPartidaSinEnviar"]));
                }
                if ((ds.Tables["ConsecutivoEmbarque"] != null)) {
                    base.Tables.Add(new ConsecutivoEmbarqueDataTable(ds.Tables["ConsecutivoEmbarque"]));
                }
                if ((ds.Tables["ProveedoresConsecutivo"] != null)) {
                    base.Tables.Add(new ProveedoresConsecutivoDataTable(ds.Tables["ProveedoresConsecutivo"]));
                }
                if ((ds.Tables["DatosComplementarios"] != null)) {
                    base.Tables.Add(new DatosComplementariosDataTable(ds.Tables["DatosComplementarios"]));
                }
                if ((ds.Tables["PartidasDespachadas"] != null)) {
                    base.Tables.Add(new PartidasDespachadasDataTable(ds.Tables["PartidasDespachadas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesSinEnviarPlantaDataTable MaterialesSinEnviarPlanta {
            get {
                return this.tableMaterialesSinEnviarPlanta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesSinEnviarDataTable MaterialesSinEnviar {
            get {
                return this.tableMaterialesSinEnviar;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GenerarTXTDataTable GenerarTXT {
            get {
                return this.tableGenerarTXT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProveedoresTXTDataTable ProveedoresTXT {
            get {
                return this.tableProveedoresTXT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SKUSinPackingDataTable SKUSinPacking {
            get {
                return this.tableSKUSinPacking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLSinEscanearDataTable PLSinEscanear {
            get {
                return this.tablePLSinEscanear;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesPaltetasDataTable MaterialesPaltetas {
            get {
                return this.tableMaterialesPaltetas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesEnviarDataTable MaterialesEnviar {
            get {
                return this.tableMaterialesEnviar;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GenerarTXTRehacerDataTable GenerarTXTRehacer {
            get {
                return this.tableGenerarTXTRehacer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProveedoresTXTRehacerDataTable ProveedoresTXTRehacer {
            get {
                return this.tableProveedoresTXTRehacer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sku_escanearDataTable sku_escanear {
            get {
                return this.tablesku_escanear;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesPaletasGuiasDataTable MaterialesPaletasGuias {
            get {
                return this.tableMaterialesPaletasGuias;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DetenerPartidaConTarimaDataTable DetenerPartidaConTarima {
            get {
                return this.tableDetenerPartidaConTarima;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DetenerPartidaSinEnviarDataTable DetenerPartidaSinEnviar {
            get {
                return this.tableDetenerPartidaSinEnviar;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConsecutivoEmbarqueDataTable ConsecutivoEmbarque {
            get {
                return this.tableConsecutivoEmbarque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProveedoresConsecutivoDataTable ProveedoresConsecutivo {
            get {
                return this.tableProveedoresConsecutivo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DatosComplementariosDataTable DatosComplementarios {
            get {
                return this.tableDatosComplementarios;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PartidasDespachadasDataTable PartidasDespachadas {
            get {
                return this.tablePartidasDespachadas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Embarques cln = ((Embarques)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MaterialesSinEnviarPlanta"] != null)) {
                    base.Tables.Add(new MaterialesSinEnviarPlantaDataTable(ds.Tables["MaterialesSinEnviarPlanta"]));
                }
                if ((ds.Tables["MaterialesSinEnviar"] != null)) {
                    base.Tables.Add(new MaterialesSinEnviarDataTable(ds.Tables["MaterialesSinEnviar"]));
                }
                if ((ds.Tables["GenerarTXT"] != null)) {
                    base.Tables.Add(new GenerarTXTDataTable(ds.Tables["GenerarTXT"]));
                }
                if ((ds.Tables["ProveedoresTXT"] != null)) {
                    base.Tables.Add(new ProveedoresTXTDataTable(ds.Tables["ProveedoresTXT"]));
                }
                if ((ds.Tables["SKUSinPacking"] != null)) {
                    base.Tables.Add(new SKUSinPackingDataTable(ds.Tables["SKUSinPacking"]));
                }
                if ((ds.Tables["PLSinEscanear"] != null)) {
                    base.Tables.Add(new PLSinEscanearDataTable(ds.Tables["PLSinEscanear"]));
                }
                if ((ds.Tables["MaterialesPaltetas"] != null)) {
                    base.Tables.Add(new MaterialesPaltetasDataTable(ds.Tables["MaterialesPaltetas"]));
                }
                if ((ds.Tables["MaterialesEnviar"] != null)) {
                    base.Tables.Add(new MaterialesEnviarDataTable(ds.Tables["MaterialesEnviar"]));
                }
                if ((ds.Tables["GenerarTXTRehacer"] != null)) {
                    base.Tables.Add(new GenerarTXTRehacerDataTable(ds.Tables["GenerarTXTRehacer"]));
                }
                if ((ds.Tables["ProveedoresTXTRehacer"] != null)) {
                    base.Tables.Add(new ProveedoresTXTRehacerDataTable(ds.Tables["ProveedoresTXTRehacer"]));
                }
                if ((ds.Tables["sku_escanear"] != null)) {
                    base.Tables.Add(new sku_escanearDataTable(ds.Tables["sku_escanear"]));
                }
                if ((ds.Tables["MaterialesPaletasGuias"] != null)) {
                    base.Tables.Add(new MaterialesPaletasGuiasDataTable(ds.Tables["MaterialesPaletasGuias"]));
                }
                if ((ds.Tables["DetenerPartidaConTarima"] != null)) {
                    base.Tables.Add(new DetenerPartidaConTarimaDataTable(ds.Tables["DetenerPartidaConTarima"]));
                }
                if ((ds.Tables["DetenerPartidaSinEnviar"] != null)) {
                    base.Tables.Add(new DetenerPartidaSinEnviarDataTable(ds.Tables["DetenerPartidaSinEnviar"]));
                }
                if ((ds.Tables["ConsecutivoEmbarque"] != null)) {
                    base.Tables.Add(new ConsecutivoEmbarqueDataTable(ds.Tables["ConsecutivoEmbarque"]));
                }
                if ((ds.Tables["ProveedoresConsecutivo"] != null)) {
                    base.Tables.Add(new ProveedoresConsecutivoDataTable(ds.Tables["ProveedoresConsecutivo"]));
                }
                if ((ds.Tables["DatosComplementarios"] != null)) {
                    base.Tables.Add(new DatosComplementariosDataTable(ds.Tables["DatosComplementarios"]));
                }
                if ((ds.Tables["PartidasDespachadas"] != null)) {
                    base.Tables.Add(new PartidasDespachadasDataTable(ds.Tables["PartidasDespachadas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMaterialesSinEnviarPlanta = ((MaterialesSinEnviarPlantaDataTable)(base.Tables["MaterialesSinEnviarPlanta"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesSinEnviarPlanta != null)) {
                    this.tableMaterialesSinEnviarPlanta.InitVars();
                }
            }
            this.tableMaterialesSinEnviar = ((MaterialesSinEnviarDataTable)(base.Tables["MaterialesSinEnviar"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesSinEnviar != null)) {
                    this.tableMaterialesSinEnviar.InitVars();
                }
            }
            this.tableGenerarTXT = ((GenerarTXTDataTable)(base.Tables["GenerarTXT"]));
            if ((initTable == true)) {
                if ((this.tableGenerarTXT != null)) {
                    this.tableGenerarTXT.InitVars();
                }
            }
            this.tableProveedoresTXT = ((ProveedoresTXTDataTable)(base.Tables["ProveedoresTXT"]));
            if ((initTable == true)) {
                if ((this.tableProveedoresTXT != null)) {
                    this.tableProveedoresTXT.InitVars();
                }
            }
            this.tableSKUSinPacking = ((SKUSinPackingDataTable)(base.Tables["SKUSinPacking"]));
            if ((initTable == true)) {
                if ((this.tableSKUSinPacking != null)) {
                    this.tableSKUSinPacking.InitVars();
                }
            }
            this.tablePLSinEscanear = ((PLSinEscanearDataTable)(base.Tables["PLSinEscanear"]));
            if ((initTable == true)) {
                if ((this.tablePLSinEscanear != null)) {
                    this.tablePLSinEscanear.InitVars();
                }
            }
            this.tableMaterialesPaltetas = ((MaterialesPaltetasDataTable)(base.Tables["MaterialesPaltetas"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesPaltetas != null)) {
                    this.tableMaterialesPaltetas.InitVars();
                }
            }
            this.tableMaterialesEnviar = ((MaterialesEnviarDataTable)(base.Tables["MaterialesEnviar"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesEnviar != null)) {
                    this.tableMaterialesEnviar.InitVars();
                }
            }
            this.tableGenerarTXTRehacer = ((GenerarTXTRehacerDataTable)(base.Tables["GenerarTXTRehacer"]));
            if ((initTable == true)) {
                if ((this.tableGenerarTXTRehacer != null)) {
                    this.tableGenerarTXTRehacer.InitVars();
                }
            }
            this.tableProveedoresTXTRehacer = ((ProveedoresTXTRehacerDataTable)(base.Tables["ProveedoresTXTRehacer"]));
            if ((initTable == true)) {
                if ((this.tableProveedoresTXTRehacer != null)) {
                    this.tableProveedoresTXTRehacer.InitVars();
                }
            }
            this.tablesku_escanear = ((sku_escanearDataTable)(base.Tables["sku_escanear"]));
            if ((initTable == true)) {
                if ((this.tablesku_escanear != null)) {
                    this.tablesku_escanear.InitVars();
                }
            }
            this.tableMaterialesPaletasGuias = ((MaterialesPaletasGuiasDataTable)(base.Tables["MaterialesPaletasGuias"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesPaletasGuias != null)) {
                    this.tableMaterialesPaletasGuias.InitVars();
                }
            }
            this.tableDetenerPartidaConTarima = ((DetenerPartidaConTarimaDataTable)(base.Tables["DetenerPartidaConTarima"]));
            if ((initTable == true)) {
                if ((this.tableDetenerPartidaConTarima != null)) {
                    this.tableDetenerPartidaConTarima.InitVars();
                }
            }
            this.tableDetenerPartidaSinEnviar = ((DetenerPartidaSinEnviarDataTable)(base.Tables["DetenerPartidaSinEnviar"]));
            if ((initTable == true)) {
                if ((this.tableDetenerPartidaSinEnviar != null)) {
                    this.tableDetenerPartidaSinEnviar.InitVars();
                }
            }
            this.tableConsecutivoEmbarque = ((ConsecutivoEmbarqueDataTable)(base.Tables["ConsecutivoEmbarque"]));
            if ((initTable == true)) {
                if ((this.tableConsecutivoEmbarque != null)) {
                    this.tableConsecutivoEmbarque.InitVars();
                }
            }
            this.tableProveedoresConsecutivo = ((ProveedoresConsecutivoDataTable)(base.Tables["ProveedoresConsecutivo"]));
            if ((initTable == true)) {
                if ((this.tableProveedoresConsecutivo != null)) {
                    this.tableProveedoresConsecutivo.InitVars();
                }
            }
            this.tableDatosComplementarios = ((DatosComplementariosDataTable)(base.Tables["DatosComplementarios"]));
            if ((initTable == true)) {
                if ((this.tableDatosComplementarios != null)) {
                    this.tableDatosComplementarios.InitVars();
                }
            }
            this.tablePartidasDespachadas = ((PartidasDespachadasDataTable)(base.Tables["PartidasDespachadas"]));
            if ((initTable == true)) {
                if ((this.tablePartidasDespachadas != null)) {
                    this.tablePartidasDespachadas.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Embarques";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Embarques.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMaterialesSinEnviarPlanta = new MaterialesSinEnviarPlantaDataTable();
            base.Tables.Add(this.tableMaterialesSinEnviarPlanta);
            this.tableMaterialesSinEnviar = new MaterialesSinEnviarDataTable();
            base.Tables.Add(this.tableMaterialesSinEnviar);
            this.tableGenerarTXT = new GenerarTXTDataTable();
            base.Tables.Add(this.tableGenerarTXT);
            this.tableProveedoresTXT = new ProveedoresTXTDataTable();
            base.Tables.Add(this.tableProveedoresTXT);
            this.tableSKUSinPacking = new SKUSinPackingDataTable();
            base.Tables.Add(this.tableSKUSinPacking);
            this.tablePLSinEscanear = new PLSinEscanearDataTable();
            base.Tables.Add(this.tablePLSinEscanear);
            this.tableMaterialesPaltetas = new MaterialesPaltetasDataTable();
            base.Tables.Add(this.tableMaterialesPaltetas);
            this.tableMaterialesEnviar = new MaterialesEnviarDataTable();
            base.Tables.Add(this.tableMaterialesEnviar);
            this.tableGenerarTXTRehacer = new GenerarTXTRehacerDataTable();
            base.Tables.Add(this.tableGenerarTXTRehacer);
            this.tableProveedoresTXTRehacer = new ProveedoresTXTRehacerDataTable();
            base.Tables.Add(this.tableProveedoresTXTRehacer);
            this.tablesku_escanear = new sku_escanearDataTable();
            base.Tables.Add(this.tablesku_escanear);
            this.tableMaterialesPaletasGuias = new MaterialesPaletasGuiasDataTable();
            base.Tables.Add(this.tableMaterialesPaletasGuias);
            this.tableDetenerPartidaConTarima = new DetenerPartidaConTarimaDataTable();
            base.Tables.Add(this.tableDetenerPartidaConTarima);
            this.tableDetenerPartidaSinEnviar = new DetenerPartidaSinEnviarDataTable();
            base.Tables.Add(this.tableDetenerPartidaSinEnviar);
            this.tableConsecutivoEmbarque = new ConsecutivoEmbarqueDataTable();
            base.Tables.Add(this.tableConsecutivoEmbarque);
            this.tableProveedoresConsecutivo = new ProveedoresConsecutivoDataTable();
            base.Tables.Add(this.tableProveedoresConsecutivo);
            this.tableDatosComplementarios = new DatosComplementariosDataTable();
            base.Tables.Add(this.tableDatosComplementarios);
            this.tablePartidasDespachadas = new PartidasDespachadasDataTable();
            base.Tables.Add(this.tablePartidasDespachadas);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesSinEnviarPlanta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesSinEnviar() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGenerarTXT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProveedoresTXT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSKUSinPacking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLSinEscanear() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesPaltetas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesEnviar() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGenerarTXTRehacer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProveedoresTXTRehacer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesku_escanear() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesPaletasGuias() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDetenerPartidaConTarima() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDetenerPartidaSinEnviar() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeConsecutivoEmbarque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProveedoresConsecutivo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDatosComplementarios() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePartidasDespachadas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Embarques ds = new Embarques();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MaterialesSinEnviarPlantaRowChangeEventHandler(object sender, MaterialesSinEnviarPlantaRowChangeEvent e);
        
        public delegate void MaterialesSinEnviarRowChangeEventHandler(object sender, MaterialesSinEnviarRowChangeEvent e);
        
        public delegate void GenerarTXTRowChangeEventHandler(object sender, GenerarTXTRowChangeEvent e);
        
        public delegate void ProveedoresTXTRowChangeEventHandler(object sender, ProveedoresTXTRowChangeEvent e);
        
        public delegate void SKUSinPackingRowChangeEventHandler(object sender, SKUSinPackingRowChangeEvent e);
        
        public delegate void PLSinEscanearRowChangeEventHandler(object sender, PLSinEscanearRowChangeEvent e);
        
        public delegate void MaterialesPaltetasRowChangeEventHandler(object sender, MaterialesPaltetasRowChangeEvent e);
        
        public delegate void MaterialesEnviarRowChangeEventHandler(object sender, MaterialesEnviarRowChangeEvent e);
        
        public delegate void GenerarTXTRehacerRowChangeEventHandler(object sender, GenerarTXTRehacerRowChangeEvent e);
        
        public delegate void ProveedoresTXTRehacerRowChangeEventHandler(object sender, ProveedoresTXTRehacerRowChangeEvent e);
        
        public delegate void sku_escanearRowChangeEventHandler(object sender, sku_escanearRowChangeEvent e);
        
        public delegate void MaterialesPaletasGuiasRowChangeEventHandler(object sender, MaterialesPaletasGuiasRowChangeEvent e);
        
        public delegate void DetenerPartidaConTarimaRowChangeEventHandler(object sender, DetenerPartidaConTarimaRowChangeEvent e);
        
        public delegate void DetenerPartidaSinEnviarRowChangeEventHandler(object sender, DetenerPartidaSinEnviarRowChangeEvent e);
        
        public delegate void ConsecutivoEmbarqueRowChangeEventHandler(object sender, ConsecutivoEmbarqueRowChangeEvent e);
        
        public delegate void ProveedoresConsecutivoRowChangeEventHandler(object sender, ProveedoresConsecutivoRowChangeEvent e);
        
        public delegate void DatosComplementariosRowChangeEventHandler(object sender, DatosComplementariosRowChangeEvent e);
        
        public delegate void PartidasDespachadasRowChangeEventHandler(object sender, PartidasDespachadasRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesSinEnviarPlantaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFechaEmbarque;
            
            private global::System.Data.DataColumn columnPlanta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarPlantaDataTable() {
                this.TableName = "MaterialesSinEnviarPlanta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesSinEnviarPlantaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesSinEnviarPlantaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEmbarqueColumn {
                get {
                    return this.columnFechaEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarPlantaRow this[int index] {
                get {
                    return ((MaterialesSinEnviarPlantaRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesSinEnviarPlantaRowChangeEventHandler MaterialesSinEnviarPlantaRowChanging;
            
            public event MaterialesSinEnviarPlantaRowChangeEventHandler MaterialesSinEnviarPlantaRowChanged;
            
            public event MaterialesSinEnviarPlantaRowChangeEventHandler MaterialesSinEnviarPlantaRowDeleting;
            
            public event MaterialesSinEnviarPlantaRowChangeEventHandler MaterialesSinEnviarPlantaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesSinEnviarPlantaRow(MaterialesSinEnviarPlantaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarPlantaRow AddMaterialesSinEnviarPlantaRow(string FechaEmbarque, string Planta) {
                MaterialesSinEnviarPlantaRow rowMaterialesSinEnviarPlantaRow = ((MaterialesSinEnviarPlantaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FechaEmbarque,
                        Planta};
                rowMaterialesSinEnviarPlantaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesSinEnviarPlantaRow);
                return rowMaterialesSinEnviarPlantaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesSinEnviarPlantaDataTable cln = ((MaterialesSinEnviarPlantaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesSinEnviarPlantaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFechaEmbarque = base.Columns["FechaEmbarque"];
                this.columnPlanta = base.Columns["Planta"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFechaEmbarque = new global::System.Data.DataColumn("FechaEmbarque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEmbarque);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnFechaEmbarque.ReadOnly = true;
                this.columnFechaEmbarque.MaxLength = 12;
                this.columnPlanta.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarPlantaRow NewMaterialesSinEnviarPlantaRow() {
                return ((MaterialesSinEnviarPlantaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesSinEnviarPlantaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesSinEnviarPlantaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesSinEnviarPlantaRowChanged != null)) {
                    this.MaterialesSinEnviarPlantaRowChanged(this, new MaterialesSinEnviarPlantaRowChangeEvent(((MaterialesSinEnviarPlantaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesSinEnviarPlantaRowChanging != null)) {
                    this.MaterialesSinEnviarPlantaRowChanging(this, new MaterialesSinEnviarPlantaRowChangeEvent(((MaterialesSinEnviarPlantaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesSinEnviarPlantaRowDeleted != null)) {
                    this.MaterialesSinEnviarPlantaRowDeleted(this, new MaterialesSinEnviarPlantaRowChangeEvent(((MaterialesSinEnviarPlantaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesSinEnviarPlantaRowDeleting != null)) {
                    this.MaterialesSinEnviarPlantaRowDeleting(this, new MaterialesSinEnviarPlantaRowChangeEvent(((MaterialesSinEnviarPlantaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesSinEnviarPlantaRow(MaterialesSinEnviarPlantaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesSinEnviarPlantaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesSinEnviarDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMaterialesOCId;
            
            private global::System.Data.DataColumn columnClienteID;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnEnviado;
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnPais;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnComentario;
            
            private global::System.Data.DataColumn columnBultos;
            
            private global::System.Data.DataColumn columnNoGuia;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnProgramaId;
            
            private global::System.Data.DataColumn columnNombreProveedor;
            
            private global::System.Data.DataColumn columnProveedorId;
            
            private global::System.Data.DataColumn columnescaneado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarDataTable() {
                this.TableName = "MaterialesSinEnviar";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesSinEnviarDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesSinEnviarDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesOCIdColumn {
                get {
                    return this.columnMaterialesOCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIDColumn {
                get {
                    return this.columnClienteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnviadoColumn {
                get {
                    return this.columnEnviado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisColumn {
                get {
                    return this.columnPais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentarioColumn {
                get {
                    return this.columnComentario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BultosColumn {
                get {
                    return this.columnBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGuiaColumn {
                get {
                    return this.columnNoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramaIdColumn {
                get {
                    return this.columnProgramaId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreProveedorColumn {
                get {
                    return this.columnNombreProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn escaneadoColumn {
                get {
                    return this.columnescaneado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarRow this[int index] {
                get {
                    return ((MaterialesSinEnviarRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesSinEnviarRowChangeEventHandler MaterialesSinEnviarRowChanging;
            
            public event MaterialesSinEnviarRowChangeEventHandler MaterialesSinEnviarRowChanged;
            
            public event MaterialesSinEnviarRowChangeEventHandler MaterialesSinEnviarRowDeleting;
            
            public event MaterialesSinEnviarRowChangeEventHandler MaterialesSinEnviarRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesSinEnviarRow(MaterialesSinEnviarRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarRow AddMaterialesSinEnviarRow(
                        int MaterialesOCId, 
                        int ClienteID, 
                        int RenglonId, 
                        decimal CantidadRecibida, 
                        System.DateTime Fecha, 
                        bool Enviado, 
                        int Id, 
                        string NumeroParte, 
                        string Descripcion, 
                        decimal Precio, 
                        string UnidadMedida, 
                        string FacturaProveedor, 
                        string Pais, 
                        string Planta, 
                        string Comentario, 
                        int Bultos, 
                        string NoGuia, 
                        string Moneda, 
                        string ProgramaId, 
                        string NombreProveedor, 
                        string ProveedorId, 
                        bool escaneado) {
                MaterialesSinEnviarRow rowMaterialesSinEnviarRow = ((MaterialesSinEnviarRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialesOCId,
                        ClienteID,
                        RenglonId,
                        CantidadRecibida,
                        Fecha,
                        Enviado,
                        Id,
                        NumeroParte,
                        Descripcion,
                        Precio,
                        UnidadMedida,
                        FacturaProveedor,
                        Pais,
                        Planta,
                        Comentario,
                        Bultos,
                        NoGuia,
                        Moneda,
                        ProgramaId,
                        NombreProveedor,
                        ProveedorId,
                        escaneado};
                rowMaterialesSinEnviarRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesSinEnviarRow);
                return rowMaterialesSinEnviarRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesSinEnviarDataTable cln = ((MaterialesSinEnviarDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesSinEnviarDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialesOCId = base.Columns["MaterialesOCId"];
                this.columnClienteID = base.Columns["ClienteID"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnEnviado = base.Columns["Enviado"];
                this.columnId = base.Columns["Id"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnPais = base.Columns["Pais"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnComentario = base.Columns["Comentario"];
                this.columnBultos = base.Columns["Bultos"];
                this.columnNoGuia = base.Columns["NoGuia"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnProgramaId = base.Columns["ProgramaId"];
                this.columnNombreProveedor = base.Columns["NombreProveedor"];
                this.columnProveedorId = base.Columns["ProveedorId"];
                this.columnescaneado = base.Columns["escaneado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialesOCId = new global::System.Data.DataColumn("MaterialesOCId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesOCId);
                this.columnClienteID = new global::System.Data.DataColumn("ClienteID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteID);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnEnviado = new global::System.Data.DataColumn("Enviado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnviado);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnPais = new global::System.Data.DataColumn("Pais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPais);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnComentario = new global::System.Data.DataColumn("Comentario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentario);
                this.columnBultos = new global::System.Data.DataColumn("Bultos", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBultos);
                this.columnNoGuia = new global::System.Data.DataColumn("NoGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGuia);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnProgramaId = new global::System.Data.DataColumn("ProgramaId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramaId);
                this.columnNombreProveedor = new global::System.Data.DataColumn("NombreProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreProveedor);
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnescaneado = new global::System.Data.DataColumn("escaneado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnescaneado);
                this.columnMaterialesOCId.AllowDBNull = false;
                this.columnClienteID.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnCantidadRecibida.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnEnviado.AllowDBNull = false;
                this.columnId.AllowDBNull = false;
                this.columnNumeroParte.MaxLength = 50;
                this.columnDescripcion.MaxLength = 200;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnFacturaProveedor.MaxLength = 45;
                this.columnPais.MaxLength = 10;
                this.columnPlanta.MaxLength = 10;
                this.columnComentario.MaxLength = 250;
                this.columnNoGuia.MaxLength = 75;
                this.columnMoneda.MaxLength = 10;
                this.columnProgramaId.MaxLength = 50;
                this.columnNombreProveedor.MaxLength = 250;
                this.columnProveedorId.MaxLength = 150;
                this.columnescaneado.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarRow NewMaterialesSinEnviarRow() {
                return ((MaterialesSinEnviarRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesSinEnviarRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesSinEnviarRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesSinEnviarRowChanged != null)) {
                    this.MaterialesSinEnviarRowChanged(this, new MaterialesSinEnviarRowChangeEvent(((MaterialesSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesSinEnviarRowChanging != null)) {
                    this.MaterialesSinEnviarRowChanging(this, new MaterialesSinEnviarRowChangeEvent(((MaterialesSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesSinEnviarRowDeleted != null)) {
                    this.MaterialesSinEnviarRowDeleted(this, new MaterialesSinEnviarRowChangeEvent(((MaterialesSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesSinEnviarRowDeleting != null)) {
                    this.MaterialesSinEnviarRowDeleting(this, new MaterialesSinEnviarRowChangeEvent(((MaterialesSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesSinEnviarRow(MaterialesSinEnviarRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesSinEnviarDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GenerarTXTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFechaRecibo;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnNumero1;
            
            private global::System.Data.DataColumn columnPais;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnNumero2;
            
            private global::System.Data.DataColumn columnBu1;
            
            private global::System.Data.DataColumn columnBu2;
            
            private global::System.Data.DataColumn columnNumero3;
            
            private global::System.Data.DataColumn columnNoGuia;
            
            private global::System.Data.DataColumn columnTarima;
            
            private global::System.Data.DataColumn columnProveedorId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnEmbarquePlanta;
            
            private global::System.Data.DataColumn columnid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTDataTable() {
                this.TableName = "GenerarTXT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GenerarTXTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GenerarTXTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaReciboColumn {
                get {
                    return this.columnFechaRecibo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Numero1Column {
                get {
                    return this.columnNumero1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisColumn {
                get {
                    return this.columnPais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Numero2Column {
                get {
                    return this.columnNumero2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bu1Column {
                get {
                    return this.columnBu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bu2Column {
                get {
                    return this.columnBu2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Numero3Column {
                get {
                    return this.columnNumero3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGuiaColumn {
                get {
                    return this.columnNoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TarimaColumn {
                get {
                    return this.columnTarima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmbarquePlantaColumn {
                get {
                    return this.columnEmbarquePlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow this[int index] {
                get {
                    return ((GenerarTXTRow)(this.Rows[index]));
                }
            }
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowChanging;
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowChanged;
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowDeleting;
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGenerarTXTRow(GenerarTXTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow AddGenerarTXTRow(
                        System.DateTime FechaRecibo, 
                        string FacturaProveedor, 
                        string NumeroParte, 
                        decimal CantidadRecibida, 
                        string UnidadMedida, 
                        string Numero1, 
                        string Pais, 
                        string Moneda, 
                        string Numero2, 
                        string Bu1, 
                        string Bu2, 
                        string Numero3, 
                        string NoGuia, 
                        string Tarima, 
                        string ProveedorId, 
                        int RenglonId, 
                        string EmbarquePlanta, 
                        int id) {
                GenerarTXTRow rowGenerarTXTRow = ((GenerarTXTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FechaRecibo,
                        FacturaProveedor,
                        NumeroParte,
                        CantidadRecibida,
                        UnidadMedida,
                        Numero1,
                        Pais,
                        Moneda,
                        Numero2,
                        Bu1,
                        Bu2,
                        Numero3,
                        NoGuia,
                        Tarima,
                        ProveedorId,
                        RenglonId,
                        EmbarquePlanta,
                        id};
                rowGenerarTXTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGenerarTXTRow);
                return rowGenerarTXTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GenerarTXTDataTable cln = ((GenerarTXTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GenerarTXTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFechaRecibo = base.Columns["FechaRecibo"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnNumero1 = base.Columns["Numero1"];
                this.columnPais = base.Columns["Pais"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnNumero2 = base.Columns["Numero2"];
                this.columnBu1 = base.Columns["Bu1"];
                this.columnBu2 = base.Columns["Bu2"];
                this.columnNumero3 = base.Columns["Numero3"];
                this.columnNoGuia = base.Columns["NoGuia"];
                this.columnTarima = base.Columns["Tarima"];
                this.columnProveedorId = base.Columns["ProveedorId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnEmbarquePlanta = base.Columns["EmbarquePlanta"];
                this.columnid = base.Columns["id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFechaRecibo = new global::System.Data.DataColumn("FechaRecibo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRecibo);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnNumero1 = new global::System.Data.DataColumn("Numero1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero1);
                this.columnPais = new global::System.Data.DataColumn("Pais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPais);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnNumero2 = new global::System.Data.DataColumn("Numero2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero2);
                this.columnBu1 = new global::System.Data.DataColumn("Bu1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBu1);
                this.columnBu2 = new global::System.Data.DataColumn("Bu2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBu2);
                this.columnNumero3 = new global::System.Data.DataColumn("Numero3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero3);
                this.columnNoGuia = new global::System.Data.DataColumn("NoGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGuia);
                this.columnTarima = new global::System.Data.DataColumn("Tarima", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarima);
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnEmbarquePlanta = new global::System.Data.DataColumn("EmbarquePlanta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmbarquePlanta);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnFacturaProveedor.MaxLength = 45;
                this.columnNumeroParte.MaxLength = 50;
                this.columnCantidadRecibida.AllowDBNull = false;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnNumero1.ReadOnly = true;
                this.columnNumero1.MaxLength = 17;
                this.columnPais.MaxLength = 10;
                this.columnMoneda.MaxLength = 10;
                this.columnNumero2.ReadOnly = true;
                this.columnNumero2.MaxLength = 10;
                this.columnBu1.ReadOnly = true;
                this.columnBu1.MaxLength = 2;
                this.columnBu2.ReadOnly = true;
                this.columnBu2.MaxLength = 2;
                this.columnNumero3.ReadOnly = true;
                this.columnNumero3.MaxLength = 50;
                this.columnNoGuia.MaxLength = 75;
                this.columnTarima.ReadOnly = true;
                this.columnTarima.MaxLength = 4;
                this.columnProveedorId.MaxLength = 150;
                this.columnRenglonId.AllowDBNull = false;
                this.columnEmbarquePlanta.ReadOnly = true;
                this.columnEmbarquePlanta.MaxLength = 161;
                this.columnid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow NewGenerarTXTRow() {
                return ((GenerarTXTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GenerarTXTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GenerarTXTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GenerarTXTRowChanged != null)) {
                    this.GenerarTXTRowChanged(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GenerarTXTRowChanging != null)) {
                    this.GenerarTXTRowChanging(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GenerarTXTRowDeleted != null)) {
                    this.GenerarTXTRowDeleted(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GenerarTXTRowDeleting != null)) {
                    this.GenerarTXTRowDeleting(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGenerarTXTRow(GenerarTXTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GenerarTXTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProveedoresTXTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProveedorId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTDataTable() {
                this.TableName = "ProveedoresTXT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresTXTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProveedoresTXTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow this[int index] {
                get {
                    return ((ProveedoresTXTRow)(this.Rows[index]));
                }
            }
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowChanging;
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowChanged;
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowDeleting;
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProveedoresTXTRow(ProveedoresTXTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow AddProveedoresTXTRow(string ProveedorId) {
                ProveedoresTXTRow rowProveedoresTXTRow = ((ProveedoresTXTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProveedorId};
                rowProveedoresTXTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProveedoresTXTRow);
                return rowProveedoresTXTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProveedoresTXTDataTable cln = ((ProveedoresTXTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProveedoresTXTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProveedorId = base.Columns["ProveedorId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnProveedorId.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow NewProveedoresTXTRow() {
                return ((ProveedoresTXTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProveedoresTXTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProveedoresTXTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProveedoresTXTRowChanged != null)) {
                    this.ProveedoresTXTRowChanged(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProveedoresTXTRowChanging != null)) {
                    this.ProveedoresTXTRowChanging(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProveedoresTXTRowDeleted != null)) {
                    this.ProveedoresTXTRowDeleted(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProveedoresTXTRowDeleting != null)) {
                    this.ProveedoresTXTRowDeleting(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProveedoresTXTRow(ProveedoresTXTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProveedoresTXTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SKUSinPackingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnid_sku;
            
            private global::System.Data.DataColumn columnddate;
            
            private global::System.Data.DataColumn columnnid_opl_in;
            
            private global::System.Data.DataColumn columnbFile;
            
            private global::System.Data.DataColumn columnbexists;
            
            private global::System.Data.DataColumn columnnid_opl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingDataTable() {
                this.TableName = "SKUSinPacking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SKUSinPackingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SKUSinPackingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ddateColumn {
                get {
                    return this.columnddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_opl_inColumn {
                get {
                    return this.columnnid_opl_in;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bFileColumn {
                get {
                    return this.columnbFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bexistsColumn {
                get {
                    return this.columnbexists;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_oplColumn {
                get {
                    return this.columnnid_opl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingRow this[int index] {
                get {
                    return ((SKUSinPackingRow)(this.Rows[index]));
                }
            }
            
            public event SKUSinPackingRowChangeEventHandler SKUSinPackingRowChanging;
            
            public event SKUSinPackingRowChangeEventHandler SKUSinPackingRowChanged;
            
            public event SKUSinPackingRowChangeEventHandler SKUSinPackingRowDeleting;
            
            public event SKUSinPackingRowChangeEventHandler SKUSinPackingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSKUSinPackingRow(SKUSinPackingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingRow AddSKUSinPackingRow(string nid_sku, System.DateTime ddate, string nid_opl_in, bool bFile, bool bexists) {
                SKUSinPackingRow rowSKUSinPackingRow = ((SKUSinPackingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nid_sku,
                        ddate,
                        nid_opl_in,
                        bFile,
                        bexists,
                        null};
                rowSKUSinPackingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSKUSinPackingRow);
                return rowSKUSinPackingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingRow FindBynid_skunid_opl(string nid_sku, int nid_opl) {
                return ((SKUSinPackingRow)(this.Rows.Find(new object[] {
                            nid_sku,
                            nid_opl})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SKUSinPackingDataTable cln = ((SKUSinPackingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SKUSinPackingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnid_sku = base.Columns["nid_sku"];
                this.columnddate = base.Columns["ddate"];
                this.columnnid_opl_in = base.Columns["nid_opl_in"];
                this.columnbFile = base.Columns["bFile"];
                this.columnbexists = base.Columns["bexists"];
                this.columnnid_opl = base.Columns["nid_opl"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columnddate = new global::System.Data.DataColumn("ddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnddate);
                this.columnnid_opl_in = new global::System.Data.DataColumn("nid_opl_in", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_opl_in);
                this.columnbFile = new global::System.Data.DataColumn("bFile", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbFile);
                this.columnbexists = new global::System.Data.DataColumn("bexists", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbexists);
                this.columnnid_opl = new global::System.Data.DataColumn("nid_opl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_opl);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnid_sku,
                                this.columnnid_opl}, true));
                this.columnnid_sku.AllowDBNull = false;
                this.columnnid_sku.MaxLength = 75;
                this.columnddate.AllowDBNull = false;
                this.columnnid_opl_in.MaxLength = 20;
                this.columnbexists.AllowDBNull = false;
                this.columnnid_opl.AutoIncrement = true;
                this.columnnid_opl.AllowDBNull = false;
                this.columnnid_opl.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingRow NewSKUSinPackingRow() {
                return ((SKUSinPackingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SKUSinPackingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SKUSinPackingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SKUSinPackingRowChanged != null)) {
                    this.SKUSinPackingRowChanged(this, new SKUSinPackingRowChangeEvent(((SKUSinPackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SKUSinPackingRowChanging != null)) {
                    this.SKUSinPackingRowChanging(this, new SKUSinPackingRowChangeEvent(((SKUSinPackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SKUSinPackingRowDeleted != null)) {
                    this.SKUSinPackingRowDeleted(this, new SKUSinPackingRowChangeEvent(((SKUSinPackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SKUSinPackingRowDeleting != null)) {
                    this.SKUSinPackingRowDeleting(this, new SKUSinPackingRowChangeEvent(((SKUSinPackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSKUSinPackingRow(SKUSinPackingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SKUSinPackingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLSinEscanearDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnddate;
            
            private global::System.Data.DataColumn columnnid_opl_in;
            
            private global::System.Data.DataColumn columnbFile;
            
            private global::System.Data.DataColumn columnnid_opl;
            
            private global::System.Data.DataColumn columnnid_sku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLSinEscanearDataTable() {
                this.TableName = "PLSinEscanear";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLSinEscanearDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLSinEscanearDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ddateColumn {
                get {
                    return this.columnddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_opl_inColumn {
                get {
                    return this.columnnid_opl_in;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bFileColumn {
                get {
                    return this.columnbFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_oplColumn {
                get {
                    return this.columnnid_opl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLSinEscanearRow this[int index] {
                get {
                    return ((PLSinEscanearRow)(this.Rows[index]));
                }
            }
            
            public event PLSinEscanearRowChangeEventHandler PLSinEscanearRowChanging;
            
            public event PLSinEscanearRowChangeEventHandler PLSinEscanearRowChanged;
            
            public event PLSinEscanearRowChangeEventHandler PLSinEscanearRowDeleting;
            
            public event PLSinEscanearRowChangeEventHandler PLSinEscanearRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLSinEscanearRow(PLSinEscanearRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLSinEscanearRow AddPLSinEscanearRow(System.DateTime ddate, string nid_opl_in, bool bFile, string nid_sku) {
                PLSinEscanearRow rowPLSinEscanearRow = ((PLSinEscanearRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ddate,
                        nid_opl_in,
                        bFile,
                        null,
                        nid_sku};
                rowPLSinEscanearRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLSinEscanearRow);
                return rowPLSinEscanearRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLSinEscanearDataTable cln = ((PLSinEscanearDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLSinEscanearDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnddate = base.Columns["ddate"];
                this.columnnid_opl_in = base.Columns["nid_opl_in"];
                this.columnbFile = base.Columns["bFile"];
                this.columnnid_opl = base.Columns["nid_opl"];
                this.columnnid_sku = base.Columns["nid_sku"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnddate = new global::System.Data.DataColumn("ddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnddate);
                this.columnnid_opl_in = new global::System.Data.DataColumn("nid_opl_in", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_opl_in);
                this.columnbFile = new global::System.Data.DataColumn("bFile", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbFile);
                this.columnnid_opl = new global::System.Data.DataColumn("nid_opl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_opl);
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columnddate.AllowDBNull = false;
                this.columnnid_opl_in.MaxLength = 20;
                this.columnnid_opl.AutoIncrement = true;
                this.columnnid_opl.AllowDBNull = false;
                this.columnnid_opl.ReadOnly = true;
                this.columnnid_sku.AllowDBNull = false;
                this.columnnid_sku.MaxLength = 75;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLSinEscanearRow NewPLSinEscanearRow() {
                return ((PLSinEscanearRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLSinEscanearRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLSinEscanearRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLSinEscanearRowChanged != null)) {
                    this.PLSinEscanearRowChanged(this, new PLSinEscanearRowChangeEvent(((PLSinEscanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLSinEscanearRowChanging != null)) {
                    this.PLSinEscanearRowChanging(this, new PLSinEscanearRowChangeEvent(((PLSinEscanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLSinEscanearRowDeleted != null)) {
                    this.PLSinEscanearRowDeleted(this, new PLSinEscanearRowChangeEvent(((PLSinEscanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLSinEscanearRowDeleting != null)) {
                    this.PLSinEscanearRowDeleting(this, new PLSinEscanearRowChangeEvent(((PLSinEscanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLSinEscanearRow(PLSinEscanearRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLSinEscanearDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesPaltetasDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnFechaRecibo;
            
            private global::System.Data.DataColumn columnNumeroPaleta;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnPesoBruto;
            
            private global::System.Data.DataColumn columnCantidadBultos;
            
            private global::System.Data.DataColumn columnTipoEmbarque;
            
            private global::System.Data.DataColumn columnContenidoTipoBulto;
            
            private global::System.Data.DataColumn columnFechaEmbarque;
            
            private global::System.Data.DataColumn columnConsecutivoEmbarque;
            
            private global::System.Data.DataColumn columnNombrePaleta;
            
            private global::System.Data.DataColumn columnnid_sku;
            
            private global::System.Data.DataColumn columnConsecutivo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaltetasDataTable() {
                this.TableName = "MaterialesPaltetas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesPaltetasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesPaltetasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaReciboColumn {
                get {
                    return this.columnFechaRecibo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroPaletaColumn {
                get {
                    return this.columnNumeroPaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoBrutoColumn {
                get {
                    return this.columnPesoBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadBultosColumn {
                get {
                    return this.columnCantidadBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoEmbarqueColumn {
                get {
                    return this.columnTipoEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContenidoTipoBultoColumn {
                get {
                    return this.columnContenidoTipoBulto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEmbarqueColumn {
                get {
                    return this.columnFechaEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoEmbarqueColumn {
                get {
                    return this.columnConsecutivoEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombrePaletaColumn {
                get {
                    return this.columnNombrePaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoColumn {
                get {
                    return this.columnConsecutivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaltetasRow this[int index] {
                get {
                    return ((MaterialesPaltetasRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesPaltetasRowChangeEventHandler MaterialesPaltetasRowChanging;
            
            public event MaterialesPaltetasRowChangeEventHandler MaterialesPaltetasRowChanged;
            
            public event MaterialesPaltetasRowChangeEventHandler MaterialesPaltetasRowDeleting;
            
            public event MaterialesPaltetasRowChangeEventHandler MaterialesPaltetasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesPaltetasRow(MaterialesPaltetasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaltetasRow AddMaterialesPaltetasRow(System.DateTime FechaRecibo, string NumeroPaleta, string Planta, decimal PesoBruto, decimal CantidadBultos, string TipoEmbarque, string ContenidoTipoBulto, System.DateTime FechaEmbarque, int ConsecutivoEmbarque, string NombrePaleta, string nid_sku, int Consecutivo) {
                MaterialesPaltetasRow rowMaterialesPaltetasRow = ((MaterialesPaltetasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FechaRecibo,
                        NumeroPaleta,
                        Planta,
                        PesoBruto,
                        CantidadBultos,
                        TipoEmbarque,
                        ContenidoTipoBulto,
                        FechaEmbarque,
                        ConsecutivoEmbarque,
                        NombrePaleta,
                        nid_sku,
                        Consecutivo};
                rowMaterialesPaltetasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesPaltetasRow);
                return rowMaterialesPaltetasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesPaltetasDataTable cln = ((MaterialesPaltetasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesPaltetasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnFechaRecibo = base.Columns["FechaRecibo"];
                this.columnNumeroPaleta = base.Columns["NumeroPaleta"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnPesoBruto = base.Columns["PesoBruto"];
                this.columnCantidadBultos = base.Columns["CantidadBultos"];
                this.columnTipoEmbarque = base.Columns["TipoEmbarque"];
                this.columnContenidoTipoBulto = base.Columns["ContenidoTipoBulto"];
                this.columnFechaEmbarque = base.Columns["FechaEmbarque"];
                this.columnConsecutivoEmbarque = base.Columns["ConsecutivoEmbarque"];
                this.columnNombrePaleta = base.Columns["NombrePaleta"];
                this.columnnid_sku = base.Columns["nid_sku"];
                this.columnConsecutivo = base.Columns["Consecutivo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFechaRecibo = new global::System.Data.DataColumn("FechaRecibo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRecibo);
                this.columnNumeroPaleta = new global::System.Data.DataColumn("NumeroPaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroPaleta);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnPesoBruto = new global::System.Data.DataColumn("PesoBruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoBruto);
                this.columnCantidadBultos = new global::System.Data.DataColumn("CantidadBultos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadBultos);
                this.columnTipoEmbarque = new global::System.Data.DataColumn("TipoEmbarque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoEmbarque);
                this.columnContenidoTipoBulto = new global::System.Data.DataColumn("ContenidoTipoBulto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContenidoTipoBulto);
                this.columnFechaEmbarque = new global::System.Data.DataColumn("FechaEmbarque", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEmbarque);
                this.columnConsecutivoEmbarque = new global::System.Data.DataColumn("ConsecutivoEmbarque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivoEmbarque);
                this.columnNombrePaleta = new global::System.Data.DataColumn("NombrePaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombrePaleta);
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columnConsecutivo = new global::System.Data.DataColumn("Consecutivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivo);
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnFechaRecibo.AllowDBNull = false;
                this.columnNumeroPaleta.MaxLength = 50;
                this.columnPlanta.MaxLength = 50;
                this.columnTipoEmbarque.MaxLength = 50;
                this.columnContenidoTipoBulto.MaxLength = 50;
                this.columnNombrePaleta.MaxLength = 50;
                this.columnnid_sku.MaxLength = 72;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaltetasRow NewMaterialesPaltetasRow() {
                return ((MaterialesPaltetasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesPaltetasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesPaltetasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesPaltetasRowChanged != null)) {
                    this.MaterialesPaltetasRowChanged(this, new MaterialesPaltetasRowChangeEvent(((MaterialesPaltetasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesPaltetasRowChanging != null)) {
                    this.MaterialesPaltetasRowChanging(this, new MaterialesPaltetasRowChangeEvent(((MaterialesPaltetasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesPaltetasRowDeleted != null)) {
                    this.MaterialesPaltetasRowDeleted(this, new MaterialesPaltetasRowChangeEvent(((MaterialesPaltetasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesPaltetasRowDeleting != null)) {
                    this.MaterialesPaltetasRowDeleting(this, new MaterialesPaltetasRowChangeEvent(((MaterialesPaltetasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesPaltetasRow(MaterialesPaltetasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesPaltetasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesEnviarDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnMaterialesPaletasId;
            
            private global::System.Data.DataColumn columnMaterialesOCId;
            
            private global::System.Data.DataColumn columnClienteID;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnPreparado;
            
            private global::System.Data.DataColumn columnEnviado;
            
            private global::System.Data.DataColumn columnNoGuia;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnPais;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnescaneado;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEnviarDataTable() {
                this.TableName = "MaterialesEnviar";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEnviarDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesEnviarDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesPaletasIdColumn {
                get {
                    return this.columnMaterialesPaletasId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesOCIdColumn {
                get {
                    return this.columnMaterialesOCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIDColumn {
                get {
                    return this.columnClienteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreparadoColumn {
                get {
                    return this.columnPreparado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnviadoColumn {
                get {
                    return this.columnEnviado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGuiaColumn {
                get {
                    return this.columnNoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisColumn {
                get {
                    return this.columnPais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn escaneadoColumn {
                get {
                    return this.columnescaneado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEnviarRow this[int index] {
                get {
                    return ((MaterialesEnviarRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesEnviarRowChangeEventHandler MaterialesEnviarRowChanging;
            
            public event MaterialesEnviarRowChangeEventHandler MaterialesEnviarRowChanged;
            
            public event MaterialesEnviarRowChangeEventHandler MaterialesEnviarRowDeleting;
            
            public event MaterialesEnviarRowChangeEventHandler MaterialesEnviarRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesEnviarRow(MaterialesEnviarRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEnviarRow AddMaterialesEnviarRow(int MaterialesPaletasId, int MaterialesOCId, int ClienteID, int RenglonId, decimal CantidadRecibida, System.DateTime Fecha, bool Preparado, bool Enviado, string NoGuia, string NumeroParte, string FacturaProveedor, string Pais, string Moneda, bool escaneado, string UnidadMedida) {
                MaterialesEnviarRow rowMaterialesEnviarRow = ((MaterialesEnviarRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MaterialesPaletasId,
                        MaterialesOCId,
                        ClienteID,
                        RenglonId,
                        CantidadRecibida,
                        Fecha,
                        Preparado,
                        Enviado,
                        NoGuia,
                        NumeroParte,
                        FacturaProveedor,
                        Pais,
                        Moneda,
                        escaneado,
                        UnidadMedida};
                rowMaterialesEnviarRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesEnviarRow);
                return rowMaterialesEnviarRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesEnviarDataTable cln = ((MaterialesEnviarDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesEnviarDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnMaterialesPaletasId = base.Columns["MaterialesPaletasId"];
                this.columnMaterialesOCId = base.Columns["MaterialesOCId"];
                this.columnClienteID = base.Columns["ClienteID"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnPreparado = base.Columns["Preparado"];
                this.columnEnviado = base.Columns["Enviado"];
                this.columnNoGuia = base.Columns["NoGuia"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnPais = base.Columns["Pais"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnescaneado = base.Columns["escaneado"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnMaterialesPaletasId = new global::System.Data.DataColumn("MaterialesPaletasId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesPaletasId);
                this.columnMaterialesOCId = new global::System.Data.DataColumn("MaterialesOCId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesOCId);
                this.columnClienteID = new global::System.Data.DataColumn("ClienteID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteID);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnPreparado = new global::System.Data.DataColumn("Preparado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreparado);
                this.columnEnviado = new global::System.Data.DataColumn("Enviado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnviado);
                this.columnNoGuia = new global::System.Data.DataColumn("NoGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGuia);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnPais = new global::System.Data.DataColumn("Pais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPais);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnescaneado = new global::System.Data.DataColumn("escaneado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnescaneado);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnMaterialesOCId.AllowDBNull = false;
                this.columnClienteID.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnCantidadRecibida.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnPreparado.AllowDBNull = false;
                this.columnEnviado.AllowDBNull = false;
                this.columnNoGuia.MaxLength = 75;
                this.columnNumeroParte.MaxLength = 50;
                this.columnFacturaProveedor.MaxLength = 50;
                this.columnPais.MaxLength = 10;
                this.columnMoneda.MaxLength = 10;
                this.columnescaneado.ReadOnly = true;
                this.columnUnidadMedida.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEnviarRow NewMaterialesEnviarRow() {
                return ((MaterialesEnviarRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesEnviarRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesEnviarRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesEnviarRowChanged != null)) {
                    this.MaterialesEnviarRowChanged(this, new MaterialesEnviarRowChangeEvent(((MaterialesEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesEnviarRowChanging != null)) {
                    this.MaterialesEnviarRowChanging(this, new MaterialesEnviarRowChangeEvent(((MaterialesEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesEnviarRowDeleted != null)) {
                    this.MaterialesEnviarRowDeleted(this, new MaterialesEnviarRowChangeEvent(((MaterialesEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesEnviarRowDeleting != null)) {
                    this.MaterialesEnviarRowDeleting(this, new MaterialesEnviarRowChangeEvent(((MaterialesEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesEnviarRow(MaterialesEnviarRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesEnviarDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GenerarTXTRehacerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFechaRecibo;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnNumero1;
            
            private global::System.Data.DataColumn columnPais;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnNumero2;
            
            private global::System.Data.DataColumn columnBu1;
            
            private global::System.Data.DataColumn columnBu2;
            
            private global::System.Data.DataColumn columnNoGuia;
            
            private global::System.Data.DataColumn columnTarima;
            
            private global::System.Data.DataColumn columnProveedorId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnEmbarquePlanta;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnbultos;
            
            private global::System.Data.DataColumn columnPeso;
            
            private global::System.Data.DataColumn columnNumeroPaleta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRehacerDataTable() {
                this.TableName = "GenerarTXTRehacer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GenerarTXTRehacerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GenerarTXTRehacerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaReciboColumn {
                get {
                    return this.columnFechaRecibo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Numero1Column {
                get {
                    return this.columnNumero1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisColumn {
                get {
                    return this.columnPais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Numero2Column {
                get {
                    return this.columnNumero2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bu1Column {
                get {
                    return this.columnBu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bu2Column {
                get {
                    return this.columnBu2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGuiaColumn {
                get {
                    return this.columnNoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TarimaColumn {
                get {
                    return this.columnTarima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmbarquePlantaColumn {
                get {
                    return this.columnEmbarquePlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bultosColumn {
                get {
                    return this.columnbultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoColumn {
                get {
                    return this.columnPeso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroPaletaColumn {
                get {
                    return this.columnNumeroPaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRehacerRow this[int index] {
                get {
                    return ((GenerarTXTRehacerRow)(this.Rows[index]));
                }
            }
            
            public event GenerarTXTRehacerRowChangeEventHandler GenerarTXTRehacerRowChanging;
            
            public event GenerarTXTRehacerRowChangeEventHandler GenerarTXTRehacerRowChanged;
            
            public event GenerarTXTRehacerRowChangeEventHandler GenerarTXTRehacerRowDeleting;
            
            public event GenerarTXTRehacerRowChangeEventHandler GenerarTXTRehacerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGenerarTXTRehacerRow(GenerarTXTRehacerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRehacerRow AddGenerarTXTRehacerRow(
                        System.DateTime FechaRecibo, 
                        string FacturaProveedor, 
                        string NumeroParte, 
                        decimal CantidadRecibida, 
                        string UnidadMedida, 
                        string Numero1, 
                        string Pais, 
                        string Moneda, 
                        string Numero2, 
                        string Bu1, 
                        string Bu2, 
                        string NoGuia, 
                        string Tarima, 
                        string ProveedorId, 
                        int RenglonId, 
                        string EmbarquePlanta, 
                        int id, 
                        decimal bultos, 
                        decimal Peso, 
                        string NumeroPaleta) {
                GenerarTXTRehacerRow rowGenerarTXTRehacerRow = ((GenerarTXTRehacerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FechaRecibo,
                        FacturaProveedor,
                        NumeroParte,
                        CantidadRecibida,
                        UnidadMedida,
                        Numero1,
                        Pais,
                        Moneda,
                        Numero2,
                        Bu1,
                        Bu2,
                        NoGuia,
                        Tarima,
                        ProveedorId,
                        RenglonId,
                        EmbarquePlanta,
                        id,
                        bultos,
                        Peso,
                        NumeroPaleta};
                rowGenerarTXTRehacerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGenerarTXTRehacerRow);
                return rowGenerarTXTRehacerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GenerarTXTRehacerDataTable cln = ((GenerarTXTRehacerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GenerarTXTRehacerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFechaRecibo = base.Columns["FechaRecibo"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnNumero1 = base.Columns["Numero1"];
                this.columnPais = base.Columns["Pais"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnNumero2 = base.Columns["Numero2"];
                this.columnBu1 = base.Columns["Bu1"];
                this.columnBu2 = base.Columns["Bu2"];
                this.columnNoGuia = base.Columns["NoGuia"];
                this.columnTarima = base.Columns["Tarima"];
                this.columnProveedorId = base.Columns["ProveedorId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnEmbarquePlanta = base.Columns["EmbarquePlanta"];
                this.columnid = base.Columns["id"];
                this.columnbultos = base.Columns["bultos"];
                this.columnPeso = base.Columns["Peso"];
                this.columnNumeroPaleta = base.Columns["NumeroPaleta"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFechaRecibo = new global::System.Data.DataColumn("FechaRecibo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRecibo);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnNumero1 = new global::System.Data.DataColumn("Numero1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero1);
                this.columnPais = new global::System.Data.DataColumn("Pais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPais);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnNumero2 = new global::System.Data.DataColumn("Numero2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero2);
                this.columnBu1 = new global::System.Data.DataColumn("Bu1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBu1);
                this.columnBu2 = new global::System.Data.DataColumn("Bu2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBu2);
                this.columnNoGuia = new global::System.Data.DataColumn("NoGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGuia);
                this.columnTarima = new global::System.Data.DataColumn("Tarima", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarima);
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnEmbarquePlanta = new global::System.Data.DataColumn("EmbarquePlanta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmbarquePlanta);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnbultos = new global::System.Data.DataColumn("bultos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbultos);
                this.columnPeso = new global::System.Data.DataColumn("Peso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeso);
                this.columnNumeroPaleta = new global::System.Data.DataColumn("NumeroPaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroPaleta);
                this.columnFacturaProveedor.MaxLength = 45;
                this.columnNumeroParte.MaxLength = 50;
                this.columnCantidadRecibida.AllowDBNull = false;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnNumero1.ReadOnly = true;
                this.columnNumero1.MaxLength = 17;
                this.columnPais.MaxLength = 10;
                this.columnMoneda.MaxLength = 10;
                this.columnNumero2.ReadOnly = true;
                this.columnNumero2.MaxLength = 10;
                this.columnBu1.ReadOnly = true;
                this.columnBu1.MaxLength = 2;
                this.columnBu2.ReadOnly = true;
                this.columnBu2.MaxLength = 2;
                this.columnNoGuia.MaxLength = 75;
                this.columnTarima.ReadOnly = true;
                this.columnTarima.MaxLength = 10;
                this.columnProveedorId.MaxLength = 150;
                this.columnRenglonId.AllowDBNull = false;
                this.columnEmbarquePlanta.ReadOnly = true;
                this.columnEmbarquePlanta.MaxLength = 161;
                this.columnid.AllowDBNull = false;
                this.columnbultos.ReadOnly = true;
                this.columnPeso.ReadOnly = true;
                this.columnNumeroPaleta.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRehacerRow NewGenerarTXTRehacerRow() {
                return ((GenerarTXTRehacerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GenerarTXTRehacerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GenerarTXTRehacerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GenerarTXTRehacerRowChanged != null)) {
                    this.GenerarTXTRehacerRowChanged(this, new GenerarTXTRehacerRowChangeEvent(((GenerarTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GenerarTXTRehacerRowChanging != null)) {
                    this.GenerarTXTRehacerRowChanging(this, new GenerarTXTRehacerRowChangeEvent(((GenerarTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GenerarTXTRehacerRowDeleted != null)) {
                    this.GenerarTXTRehacerRowDeleted(this, new GenerarTXTRehacerRowChangeEvent(((GenerarTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GenerarTXTRehacerRowDeleting != null)) {
                    this.GenerarTXTRehacerRowDeleting(this, new GenerarTXTRehacerRowChangeEvent(((GenerarTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGenerarTXTRehacerRow(GenerarTXTRehacerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GenerarTXTRehacerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProveedoresTXTRehacerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProveedorId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRehacerDataTable() {
                this.TableName = "ProveedoresTXTRehacer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresTXTRehacerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProveedoresTXTRehacerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRehacerRow this[int index] {
                get {
                    return ((ProveedoresTXTRehacerRow)(this.Rows[index]));
                }
            }
            
            public event ProveedoresTXTRehacerRowChangeEventHandler ProveedoresTXTRehacerRowChanging;
            
            public event ProveedoresTXTRehacerRowChangeEventHandler ProveedoresTXTRehacerRowChanged;
            
            public event ProveedoresTXTRehacerRowChangeEventHandler ProveedoresTXTRehacerRowDeleting;
            
            public event ProveedoresTXTRehacerRowChangeEventHandler ProveedoresTXTRehacerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProveedoresTXTRehacerRow(ProveedoresTXTRehacerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRehacerRow AddProveedoresTXTRehacerRow(string ProveedorId) {
                ProveedoresTXTRehacerRow rowProveedoresTXTRehacerRow = ((ProveedoresTXTRehacerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProveedorId};
                rowProveedoresTXTRehacerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProveedoresTXTRehacerRow);
                return rowProveedoresTXTRehacerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProveedoresTXTRehacerDataTable cln = ((ProveedoresTXTRehacerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProveedoresTXTRehacerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProveedorId = base.Columns["ProveedorId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnProveedorId.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRehacerRow NewProveedoresTXTRehacerRow() {
                return ((ProveedoresTXTRehacerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProveedoresTXTRehacerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProveedoresTXTRehacerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProveedoresTXTRehacerRowChanged != null)) {
                    this.ProveedoresTXTRehacerRowChanged(this, new ProveedoresTXTRehacerRowChangeEvent(((ProveedoresTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProveedoresTXTRehacerRowChanging != null)) {
                    this.ProveedoresTXTRehacerRowChanging(this, new ProveedoresTXTRehacerRowChangeEvent(((ProveedoresTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProveedoresTXTRehacerRowDeleted != null)) {
                    this.ProveedoresTXTRehacerRowDeleted(this, new ProveedoresTXTRehacerRowChangeEvent(((ProveedoresTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProveedoresTXTRehacerRowDeleting != null)) {
                    this.ProveedoresTXTRehacerRowDeleting(this, new ProveedoresTXTRehacerRowChangeEvent(((ProveedoresTXTRehacerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProveedoresTXTRehacerRow(ProveedoresTXTRehacerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProveedoresTXTRehacerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sku_escanearDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnnid_sku;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnescaneado;
            
            private global::System.Data.DataColumn columnnid_cliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearDataTable() {
                this.TableName = "sku_escanear";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sku_escanearDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sku_escanearDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn escaneadoColumn {
                get {
                    return this.columnescaneado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_clienteColumn {
                get {
                    return this.columnnid_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow this[int index] {
                get {
                    return ((sku_escanearRow)(this.Rows[index]));
                }
            }
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowChanging;
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowChanged;
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowDeleting;
            
            public event sku_escanearRowChangeEventHandler sku_escanearRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsku_escanearRow(sku_escanearRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow Addsku_escanearRow(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente) {
                sku_escanearRow rowsku_escanearRow = ((sku_escanearRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nid_sku,
                        fecha,
                        escaneado,
                        nid_cliente};
                rowsku_escanearRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsku_escanearRow);
                return rowsku_escanearRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow FindByid(int id) {
                return ((sku_escanearRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sku_escanearDataTable cln = ((sku_escanearDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sku_escanearDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnnid_sku = base.Columns["nid_sku"];
                this.columnfecha = base.Columns["fecha"];
                this.columnescaneado = base.Columns["escaneado"];
                this.columnnid_cliente = base.Columns["nid_cliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnescaneado = new global::System.Data.DataColumn("escaneado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnescaneado);
                this.columnnid_cliente = new global::System.Data.DataColumn("nid_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_cliente);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnnid_sku.AllowDBNull = false;
                this.columnnid_sku.MaxLength = 75;
                this.columnfecha.AllowDBNull = false;
                this.columnescaneado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow Newsku_escanearRow() {
                return ((sku_escanearRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sku_escanearRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sku_escanearRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sku_escanearRowChanged != null)) {
                    this.sku_escanearRowChanged(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sku_escanearRowChanging != null)) {
                    this.sku_escanearRowChanging(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sku_escanearRowDeleted != null)) {
                    this.sku_escanearRowDeleted(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sku_escanearRowDeleting != null)) {
                    this.sku_escanearRowDeleting(this, new sku_escanearRowChangeEvent(((sku_escanearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesku_escanearRow(sku_escanearRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sku_escanearDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesPaletasGuiasDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIdPaleta;
            
            private global::System.Data.DataColumn columnnid_sku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaletasGuiasDataTable() {
                this.TableName = "MaterialesPaletasGuias";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesPaletasGuiasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesPaletasGuiasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdPaletaColumn {
                get {
                    return this.columnIdPaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaletasGuiasRow this[int index] {
                get {
                    return ((MaterialesPaletasGuiasRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesPaletasGuiasRowChangeEventHandler MaterialesPaletasGuiasRowChanging;
            
            public event MaterialesPaletasGuiasRowChangeEventHandler MaterialesPaletasGuiasRowChanged;
            
            public event MaterialesPaletasGuiasRowChangeEventHandler MaterialesPaletasGuiasRowDeleting;
            
            public event MaterialesPaletasGuiasRowChangeEventHandler MaterialesPaletasGuiasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesPaletasGuiasRow(MaterialesPaletasGuiasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaletasGuiasRow AddMaterialesPaletasGuiasRow(int IdPaleta, string nid_sku) {
                MaterialesPaletasGuiasRow rowMaterialesPaletasGuiasRow = ((MaterialesPaletasGuiasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IdPaleta,
                        nid_sku};
                rowMaterialesPaletasGuiasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesPaletasGuiasRow);
                return rowMaterialesPaletasGuiasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesPaletasGuiasDataTable cln = ((MaterialesPaletasGuiasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesPaletasGuiasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdPaleta = base.Columns["IdPaleta"];
                this.columnnid_sku = base.Columns["nid_sku"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdPaleta = new global::System.Data.DataColumn("IdPaleta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdPaleta);
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columnIdPaleta.AllowDBNull = false;
                this.columnnid_sku.AllowDBNull = false;
                this.columnnid_sku.MaxLength = 75;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaletasGuiasRow NewMaterialesPaletasGuiasRow() {
                return ((MaterialesPaletasGuiasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesPaletasGuiasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesPaletasGuiasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesPaletasGuiasRowChanged != null)) {
                    this.MaterialesPaletasGuiasRowChanged(this, new MaterialesPaletasGuiasRowChangeEvent(((MaterialesPaletasGuiasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesPaletasGuiasRowChanging != null)) {
                    this.MaterialesPaletasGuiasRowChanging(this, new MaterialesPaletasGuiasRowChangeEvent(((MaterialesPaletasGuiasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesPaletasGuiasRowDeleted != null)) {
                    this.MaterialesPaletasGuiasRowDeleted(this, new MaterialesPaletasGuiasRowChangeEvent(((MaterialesPaletasGuiasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesPaletasGuiasRowDeleting != null)) {
                    this.MaterialesPaletasGuiasRowDeleting(this, new MaterialesPaletasGuiasRowChangeEvent(((MaterialesPaletasGuiasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesPaletasGuiasRow(MaterialesPaletasGuiasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesPaletasGuiasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DetenerPartidaConTarimaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMaterialesPaletasId;
            
            private global::System.Data.DataColumn columnNumeroPaleta;
            
            private global::System.Data.DataColumn columnNombrePaleta;
            
            private global::System.Data.DataColumn columnMaterialesOCId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaConTarimaDataTable() {
                this.TableName = "DetenerPartidaConTarima";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetenerPartidaConTarimaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DetenerPartidaConTarimaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesPaletasIdColumn {
                get {
                    return this.columnMaterialesPaletasId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroPaletaColumn {
                get {
                    return this.columnNumeroPaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombrePaletaColumn {
                get {
                    return this.columnNombrePaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesOCIdColumn {
                get {
                    return this.columnMaterialesOCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaConTarimaRow this[int index] {
                get {
                    return ((DetenerPartidaConTarimaRow)(this.Rows[index]));
                }
            }
            
            public event DetenerPartidaConTarimaRowChangeEventHandler DetenerPartidaConTarimaRowChanging;
            
            public event DetenerPartidaConTarimaRowChangeEventHandler DetenerPartidaConTarimaRowChanged;
            
            public event DetenerPartidaConTarimaRowChangeEventHandler DetenerPartidaConTarimaRowDeleting;
            
            public event DetenerPartidaConTarimaRowChangeEventHandler DetenerPartidaConTarimaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDetenerPartidaConTarimaRow(DetenerPartidaConTarimaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaConTarimaRow AddDetenerPartidaConTarimaRow(int MaterialesPaletasId, string NumeroPaleta, string NombrePaleta, int MaterialesOCId, int RenglonId, decimal CantidadRecibida, string Planta, string FacturaProveedor) {
                DetenerPartidaConTarimaRow rowDetenerPartidaConTarimaRow = ((DetenerPartidaConTarimaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialesPaletasId,
                        NumeroPaleta,
                        NombrePaleta,
                        MaterialesOCId,
                        RenglonId,
                        CantidadRecibida,
                        Planta,
                        null,
                        FacturaProveedor};
                rowDetenerPartidaConTarimaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDetenerPartidaConTarimaRow);
                return rowDetenerPartidaConTarimaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DetenerPartidaConTarimaDataTable cln = ((DetenerPartidaConTarimaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DetenerPartidaConTarimaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialesPaletasId = base.Columns["MaterialesPaletasId"];
                this.columnNumeroPaleta = base.Columns["NumeroPaleta"];
                this.columnNombrePaleta = base.Columns["NombrePaleta"];
                this.columnMaterialesOCId = base.Columns["MaterialesOCId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnId = base.Columns["Id"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialesPaletasId = new global::System.Data.DataColumn("MaterialesPaletasId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesPaletasId);
                this.columnNumeroPaleta = new global::System.Data.DataColumn("NumeroPaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroPaleta);
                this.columnNombrePaleta = new global::System.Data.DataColumn("NombrePaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombrePaleta);
                this.columnMaterialesOCId = new global::System.Data.DataColumn("MaterialesOCId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesOCId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnNumeroPaleta.MaxLength = 50;
                this.columnNombrePaleta.MaxLength = 50;
                this.columnMaterialesOCId.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnCantidadRecibida.AllowDBNull = false;
                this.columnPlanta.MaxLength = 10;
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnFacturaProveedor.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaConTarimaRow NewDetenerPartidaConTarimaRow() {
                return ((DetenerPartidaConTarimaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DetenerPartidaConTarimaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DetenerPartidaConTarimaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetenerPartidaConTarimaRowChanged != null)) {
                    this.DetenerPartidaConTarimaRowChanged(this, new DetenerPartidaConTarimaRowChangeEvent(((DetenerPartidaConTarimaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetenerPartidaConTarimaRowChanging != null)) {
                    this.DetenerPartidaConTarimaRowChanging(this, new DetenerPartidaConTarimaRowChangeEvent(((DetenerPartidaConTarimaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetenerPartidaConTarimaRowDeleted != null)) {
                    this.DetenerPartidaConTarimaRowDeleted(this, new DetenerPartidaConTarimaRowChangeEvent(((DetenerPartidaConTarimaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetenerPartidaConTarimaRowDeleting != null)) {
                    this.DetenerPartidaConTarimaRowDeleting(this, new DetenerPartidaConTarimaRowChangeEvent(((DetenerPartidaConTarimaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDetenerPartidaConTarimaRow(DetenerPartidaConTarimaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetenerPartidaConTarimaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DetenerPartidaSinEnviarDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnMaterialesOCId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaSinEnviarDataTable() {
                this.TableName = "DetenerPartidaSinEnviar";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetenerPartidaSinEnviarDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DetenerPartidaSinEnviarDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesOCIdColumn {
                get {
                    return this.columnMaterialesOCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaSinEnviarRow this[int index] {
                get {
                    return ((DetenerPartidaSinEnviarRow)(this.Rows[index]));
                }
            }
            
            public event DetenerPartidaSinEnviarRowChangeEventHandler DetenerPartidaSinEnviarRowChanging;
            
            public event DetenerPartidaSinEnviarRowChangeEventHandler DetenerPartidaSinEnviarRowChanged;
            
            public event DetenerPartidaSinEnviarRowChangeEventHandler DetenerPartidaSinEnviarRowDeleting;
            
            public event DetenerPartidaSinEnviarRowChangeEventHandler DetenerPartidaSinEnviarRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDetenerPartidaSinEnviarRow(DetenerPartidaSinEnviarRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaSinEnviarRow AddDetenerPartidaSinEnviarRow(int MaterialesOCId, int RenglonId, decimal CantidadRecibida, string Planta, string NumeroParte, string FacturaProveedor) {
                DetenerPartidaSinEnviarRow rowDetenerPartidaSinEnviarRow = ((DetenerPartidaSinEnviarRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MaterialesOCId,
                        RenglonId,
                        CantidadRecibida,
                        Planta,
                        NumeroParte,
                        FacturaProveedor};
                rowDetenerPartidaSinEnviarRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDetenerPartidaSinEnviarRow);
                return rowDetenerPartidaSinEnviarRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DetenerPartidaSinEnviarDataTable cln = ((DetenerPartidaSinEnviarDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DetenerPartidaSinEnviarDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnMaterialesOCId = base.Columns["MaterialesOCId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnMaterialesOCId = new global::System.Data.DataColumn("MaterialesOCId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesOCId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnMaterialesOCId.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnCantidadRecibida.AllowDBNull = false;
                this.columnPlanta.MaxLength = 10;
                this.columnNumeroParte.MaxLength = 50;
                this.columnFacturaProveedor.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaSinEnviarRow NewDetenerPartidaSinEnviarRow() {
                return ((DetenerPartidaSinEnviarRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DetenerPartidaSinEnviarRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DetenerPartidaSinEnviarRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetenerPartidaSinEnviarRowChanged != null)) {
                    this.DetenerPartidaSinEnviarRowChanged(this, new DetenerPartidaSinEnviarRowChangeEvent(((DetenerPartidaSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetenerPartidaSinEnviarRowChanging != null)) {
                    this.DetenerPartidaSinEnviarRowChanging(this, new DetenerPartidaSinEnviarRowChangeEvent(((DetenerPartidaSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetenerPartidaSinEnviarRowDeleted != null)) {
                    this.DetenerPartidaSinEnviarRowDeleted(this, new DetenerPartidaSinEnviarRowChangeEvent(((DetenerPartidaSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetenerPartidaSinEnviarRowDeleting != null)) {
                    this.DetenerPartidaSinEnviarRowDeleting(this, new DetenerPartidaSinEnviarRowChangeEvent(((DetenerPartidaSinEnviarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDetenerPartidaSinEnviarRow(DetenerPartidaSinEnviarRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetenerPartidaSinEnviarDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConsecutivoEmbarqueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmbarque;
            
            private global::System.Data.DataColumn columnConsecutivo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsecutivoEmbarqueDataTable() {
                this.TableName = "ConsecutivoEmbarque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ConsecutivoEmbarqueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ConsecutivoEmbarqueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmbarqueColumn {
                get {
                    return this.columnEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoColumn {
                get {
                    return this.columnConsecutivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsecutivoEmbarqueRow this[int index] {
                get {
                    return ((ConsecutivoEmbarqueRow)(this.Rows[index]));
                }
            }
            
            public event ConsecutivoEmbarqueRowChangeEventHandler ConsecutivoEmbarqueRowChanging;
            
            public event ConsecutivoEmbarqueRowChangeEventHandler ConsecutivoEmbarqueRowChanged;
            
            public event ConsecutivoEmbarqueRowChangeEventHandler ConsecutivoEmbarqueRowDeleting;
            
            public event ConsecutivoEmbarqueRowChangeEventHandler ConsecutivoEmbarqueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddConsecutivoEmbarqueRow(ConsecutivoEmbarqueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsecutivoEmbarqueRow AddConsecutivoEmbarqueRow(int Embarque, int Consecutivo) {
                ConsecutivoEmbarqueRow rowConsecutivoEmbarqueRow = ((ConsecutivoEmbarqueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Embarque,
                        Consecutivo};
                rowConsecutivoEmbarqueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConsecutivoEmbarqueRow);
                return rowConsecutivoEmbarqueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ConsecutivoEmbarqueDataTable cln = ((ConsecutivoEmbarqueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConsecutivoEmbarqueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmbarque = base.Columns["Embarque"];
                this.columnConsecutivo = base.Columns["Consecutivo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmbarque = new global::System.Data.DataColumn("Embarque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmbarque);
                this.columnConsecutivo = new global::System.Data.DataColumn("Consecutivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsecutivoEmbarqueRow NewConsecutivoEmbarqueRow() {
                return ((ConsecutivoEmbarqueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConsecutivoEmbarqueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ConsecutivoEmbarqueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConsecutivoEmbarqueRowChanged != null)) {
                    this.ConsecutivoEmbarqueRowChanged(this, new ConsecutivoEmbarqueRowChangeEvent(((ConsecutivoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConsecutivoEmbarqueRowChanging != null)) {
                    this.ConsecutivoEmbarqueRowChanging(this, new ConsecutivoEmbarqueRowChangeEvent(((ConsecutivoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConsecutivoEmbarqueRowDeleted != null)) {
                    this.ConsecutivoEmbarqueRowDeleted(this, new ConsecutivoEmbarqueRowChangeEvent(((ConsecutivoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConsecutivoEmbarqueRowDeleting != null)) {
                    this.ConsecutivoEmbarqueRowDeleting(this, new ConsecutivoEmbarqueRowChangeEvent(((ConsecutivoEmbarqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveConsecutivoEmbarqueRow(ConsecutivoEmbarqueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConsecutivoEmbarqueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProveedoresConsecutivoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProveedorId;
            
            private global::System.Data.DataColumn columnConsecutivo;
            
            private global::System.Data.DataColumn columnConsecutivoEmbarque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresConsecutivoDataTable() {
                this.TableName = "ProveedoresConsecutivo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresConsecutivoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProveedoresConsecutivoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoColumn {
                get {
                    return this.columnConsecutivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoEmbarqueColumn {
                get {
                    return this.columnConsecutivoEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresConsecutivoRow this[int index] {
                get {
                    return ((ProveedoresConsecutivoRow)(this.Rows[index]));
                }
            }
            
            public event ProveedoresConsecutivoRowChangeEventHandler ProveedoresConsecutivoRowChanging;
            
            public event ProveedoresConsecutivoRowChangeEventHandler ProveedoresConsecutivoRowChanged;
            
            public event ProveedoresConsecutivoRowChangeEventHandler ProveedoresConsecutivoRowDeleting;
            
            public event ProveedoresConsecutivoRowChangeEventHandler ProveedoresConsecutivoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProveedoresConsecutivoRow(ProveedoresConsecutivoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresConsecutivoRow AddProveedoresConsecutivoRow(string ProveedorId, int Consecutivo, int ConsecutivoEmbarque) {
                ProveedoresConsecutivoRow rowProveedoresConsecutivoRow = ((ProveedoresConsecutivoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProveedorId,
                        Consecutivo,
                        ConsecutivoEmbarque};
                rowProveedoresConsecutivoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProveedoresConsecutivoRow);
                return rowProveedoresConsecutivoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProveedoresConsecutivoDataTable cln = ((ProveedoresConsecutivoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProveedoresConsecutivoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProveedorId = base.Columns["ProveedorId"];
                this.columnConsecutivo = base.Columns["Consecutivo"];
                this.columnConsecutivoEmbarque = base.Columns["ConsecutivoEmbarque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnConsecutivo = new global::System.Data.DataColumn("Consecutivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivo);
                this.columnConsecutivoEmbarque = new global::System.Data.DataColumn("ConsecutivoEmbarque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivoEmbarque);
                this.columnProveedorId.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresConsecutivoRow NewProveedoresConsecutivoRow() {
                return ((ProveedoresConsecutivoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProveedoresConsecutivoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProveedoresConsecutivoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProveedoresConsecutivoRowChanged != null)) {
                    this.ProveedoresConsecutivoRowChanged(this, new ProveedoresConsecutivoRowChangeEvent(((ProveedoresConsecutivoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProveedoresConsecutivoRowChanging != null)) {
                    this.ProveedoresConsecutivoRowChanging(this, new ProveedoresConsecutivoRowChangeEvent(((ProveedoresConsecutivoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProveedoresConsecutivoRowDeleted != null)) {
                    this.ProveedoresConsecutivoRowDeleted(this, new ProveedoresConsecutivoRowChangeEvent(((ProveedoresConsecutivoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProveedoresConsecutivoRowDeleting != null)) {
                    this.ProveedoresConsecutivoRowDeleting(this, new ProveedoresConsecutivoRowChangeEvent(((ProveedoresConsecutivoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProveedoresConsecutivoRow(ProveedoresConsecutivoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProveedoresConsecutivoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DatosComplementariosDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columncbox_number;
            
            private global::System.Data.DataColumn columnbultos;
            
            private global::System.Data.DataColumn columnpesobruto;
            
            private global::System.Data.DataColumn columnnid_deploy;
            
            private global::System.Data.DataColumn columnTarimas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosDataTable() {
                this.TableName = "DatosComplementarios";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DatosComplementariosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DatosComplementariosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cbox_numberColumn {
                get {
                    return this.columncbox_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bultosColumn {
                get {
                    return this.columnbultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pesobrutoColumn {
                get {
                    return this.columnpesobruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_deployColumn {
                get {
                    return this.columnnid_deploy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TarimasColumn {
                get {
                    return this.columnTarimas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosRow this[int index] {
                get {
                    return ((DatosComplementariosRow)(this.Rows[index]));
                }
            }
            
            public event DatosComplementariosRowChangeEventHandler DatosComplementariosRowChanging;
            
            public event DatosComplementariosRowChangeEventHandler DatosComplementariosRowChanged;
            
            public event DatosComplementariosRowChangeEventHandler DatosComplementariosRowDeleting;
            
            public event DatosComplementariosRowChangeEventHandler DatosComplementariosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDatosComplementariosRow(DatosComplementariosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosRow AddDatosComplementariosRow(string nombre, string cbox_number, int bultos, decimal pesobruto, int nid_deploy, int Tarimas) {
                DatosComplementariosRow rowDatosComplementariosRow = ((DatosComplementariosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        cbox_number,
                        bultos,
                        pesobruto,
                        nid_deploy,
                        Tarimas};
                rowDatosComplementariosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDatosComplementariosRow);
                return rowDatosComplementariosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosRow FindBynid_deploy(int nid_deploy) {
                return ((DatosComplementariosRow)(this.Rows.Find(new object[] {
                            nid_deploy})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DatosComplementariosDataTable cln = ((DatosComplementariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DatosComplementariosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columncbox_number = base.Columns["cbox_number"];
                this.columnbultos = base.Columns["bultos"];
                this.columnpesobruto = base.Columns["pesobruto"];
                this.columnnid_deploy = base.Columns["nid_deploy"];
                this.columnTarimas = base.Columns["Tarimas"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columncbox_number = new global::System.Data.DataColumn("cbox_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncbox_number);
                this.columnbultos = new global::System.Data.DataColumn("bultos", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbultos);
                this.columnpesobruto = new global::System.Data.DataColumn("pesobruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpesobruto);
                this.columnnid_deploy = new global::System.Data.DataColumn("nid_deploy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_deploy);
                this.columnTarimas = new global::System.Data.DataColumn("Tarimas", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarimas);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnid_deploy}, true));
                this.columnnombre.MaxLength = 80;
                this.columncbox_number.AllowDBNull = false;
                this.columncbox_number.MaxLength = 50;
                this.columnbultos.ReadOnly = true;
                this.columnpesobruto.ReadOnly = true;
                this.columnnid_deploy.AllowDBNull = false;
                this.columnnid_deploy.Unique = true;
                this.columnTarimas.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosRow NewDatosComplementariosRow() {
                return ((DatosComplementariosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DatosComplementariosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DatosComplementariosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DatosComplementariosRowChanged != null)) {
                    this.DatosComplementariosRowChanged(this, new DatosComplementariosRowChangeEvent(((DatosComplementariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DatosComplementariosRowChanging != null)) {
                    this.DatosComplementariosRowChanging(this, new DatosComplementariosRowChangeEvent(((DatosComplementariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DatosComplementariosRowDeleted != null)) {
                    this.DatosComplementariosRowDeleted(this, new DatosComplementariosRowChangeEvent(((DatosComplementariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DatosComplementariosRowDeleting != null)) {
                    this.DatosComplementariosRowDeleting(this, new DatosComplementariosRowChangeEvent(((DatosComplementariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDatosComplementariosRow(DatosComplementariosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DatosComplementariosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PartidasDespachadasDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFechallegada;
            
            private global::System.Data.DataColumn columnConsecutivoEmbarque;
            
            private global::System.Data.DataColumn columnConsecutivo;
            
            private global::System.Data.DataColumn columnNombrePaleta;
            
            private global::System.Data.DataColumn columnNumeroPaleta;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnPesoBruto;
            
            private global::System.Data.DataColumn columnCantidadBultos;
            
            private global::System.Data.DataColumn columnnid_sku;
            
            private global::System.Data.DataColumn columndEndSelection;
            
            private global::System.Data.DataColumn columnMaterialesOCId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnProveedorId;
            
            private global::System.Data.DataColumn columnNombreProveedor;
            
            private global::System.Data.DataColumn columnComentario;
            
            private global::System.Data.DataColumn columncbox_number;
            
            private global::System.Data.DataColumn columncve_transp;
            
            private global::System.Data.DataColumn columnescaneado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartidasDespachadasDataTable() {
                this.TableName = "PartidasDespachadas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PartidasDespachadasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PartidasDespachadasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechallegadaColumn {
                get {
                    return this.columnFechallegada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoEmbarqueColumn {
                get {
                    return this.columnConsecutivoEmbarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoColumn {
                get {
                    return this.columnConsecutivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombrePaletaColumn {
                get {
                    return this.columnNombrePaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroPaletaColumn {
                get {
                    return this.columnNumeroPaleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoBrutoColumn {
                get {
                    return this.columnPesoBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadBultosColumn {
                get {
                    return this.columnCantidadBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nid_skuColumn {
                get {
                    return this.columnnid_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dEndSelectionColumn {
                get {
                    return this.columndEndSelection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesOCIdColumn {
                get {
                    return this.columnMaterialesOCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIdColumn {
                get {
                    return this.columnProveedorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreProveedorColumn {
                get {
                    return this.columnNombreProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentarioColumn {
                get {
                    return this.columnComentario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cbox_numberColumn {
                get {
                    return this.columncbox_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cve_transpColumn {
                get {
                    return this.columncve_transp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn escaneadoColumn {
                get {
                    return this.columnescaneado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartidasDespachadasRow this[int index] {
                get {
                    return ((PartidasDespachadasRow)(this.Rows[index]));
                }
            }
            
            public event PartidasDespachadasRowChangeEventHandler PartidasDespachadasRowChanging;
            
            public event PartidasDespachadasRowChangeEventHandler PartidasDespachadasRowChanged;
            
            public event PartidasDespachadasRowChangeEventHandler PartidasDespachadasRowDeleting;
            
            public event PartidasDespachadasRowChangeEventHandler PartidasDespachadasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPartidasDespachadasRow(PartidasDespachadasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartidasDespachadasRow AddPartidasDespachadasRow(
                        System.DateTime Fechallegada, 
                        int ConsecutivoEmbarque, 
                        int Consecutivo, 
                        string NombrePaleta, 
                        string NumeroPaleta, 
                        string Planta, 
                        decimal PesoBruto, 
                        decimal CantidadBultos, 
                        string nid_sku, 
                        System.DateTime dEndSelection, 
                        int MaterialesOCId, 
                        int RenglonId, 
                        string FacturaProveedor, 
                        string NumeroParte, 
                        string Descripcion, 
                        string ProveedorId, 
                        string NombreProveedor, 
                        string Comentario, 
                        string cbox_number, 
                        string cve_transp, 
                        bool escaneado) {
                PartidasDespachadasRow rowPartidasDespachadasRow = ((PartidasDespachadasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Fechallegada,
                        ConsecutivoEmbarque,
                        Consecutivo,
                        NombrePaleta,
                        NumeroPaleta,
                        Planta,
                        PesoBruto,
                        CantidadBultos,
                        nid_sku,
                        dEndSelection,
                        MaterialesOCId,
                        RenglonId,
                        FacturaProveedor,
                        NumeroParte,
                        Descripcion,
                        ProveedorId,
                        NombreProveedor,
                        Comentario,
                        cbox_number,
                        cve_transp,
                        escaneado};
                rowPartidasDespachadasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPartidasDespachadasRow);
                return rowPartidasDespachadasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PartidasDespachadasDataTable cln = ((PartidasDespachadasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PartidasDespachadasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFechallegada = base.Columns["Fechallegada"];
                this.columnConsecutivoEmbarque = base.Columns["ConsecutivoEmbarque"];
                this.columnConsecutivo = base.Columns["Consecutivo"];
                this.columnNombrePaleta = base.Columns["NombrePaleta"];
                this.columnNumeroPaleta = base.Columns["NumeroPaleta"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnPesoBruto = base.Columns["PesoBruto"];
                this.columnCantidadBultos = base.Columns["CantidadBultos"];
                this.columnnid_sku = base.Columns["nid_sku"];
                this.columndEndSelection = base.Columns["dEndSelection"];
                this.columnMaterialesOCId = base.Columns["MaterialesOCId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnProveedorId = base.Columns["ProveedorId"];
                this.columnNombreProveedor = base.Columns["NombreProveedor"];
                this.columnComentario = base.Columns["Comentario"];
                this.columncbox_number = base.Columns["cbox_number"];
                this.columncve_transp = base.Columns["cve_transp"];
                this.columnescaneado = base.Columns["escaneado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFechallegada = new global::System.Data.DataColumn("Fechallegada", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechallegada);
                this.columnConsecutivoEmbarque = new global::System.Data.DataColumn("ConsecutivoEmbarque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivoEmbarque);
                this.columnConsecutivo = new global::System.Data.DataColumn("Consecutivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivo);
                this.columnNombrePaleta = new global::System.Data.DataColumn("NombrePaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombrePaleta);
                this.columnNumeroPaleta = new global::System.Data.DataColumn("NumeroPaleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroPaleta);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnPesoBruto = new global::System.Data.DataColumn("PesoBruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoBruto);
                this.columnCantidadBultos = new global::System.Data.DataColumn("CantidadBultos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadBultos);
                this.columnnid_sku = new global::System.Data.DataColumn("nid_sku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnid_sku);
                this.columndEndSelection = new global::System.Data.DataColumn("dEndSelection", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndEndSelection);
                this.columnMaterialesOCId = new global::System.Data.DataColumn("MaterialesOCId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesOCId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnProveedorId = new global::System.Data.DataColumn("ProveedorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorId);
                this.columnNombreProveedor = new global::System.Data.DataColumn("NombreProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreProveedor);
                this.columnComentario = new global::System.Data.DataColumn("Comentario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentario);
                this.columncbox_number = new global::System.Data.DataColumn("cbox_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncbox_number);
                this.columncve_transp = new global::System.Data.DataColumn("cve_transp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncve_transp);
                this.columnescaneado = new global::System.Data.DataColumn("escaneado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnescaneado);
                this.columnFechallegada.AllowDBNull = false;
                this.columnNombrePaleta.MaxLength = 50;
                this.columnNumeroPaleta.MaxLength = 50;
                this.columnPlanta.MaxLength = 50;
                this.columnnid_sku.MaxLength = 72;
                this.columnMaterialesOCId.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnFacturaProveedor.MaxLength = 50;
                this.columnNumeroParte.MaxLength = 50;
                this.columnDescripcion.MaxLength = 200;
                this.columnProveedorId.MaxLength = 150;
                this.columnNombreProveedor.MaxLength = 250;
                this.columnComentario.MaxLength = 250;
                this.columncbox_number.AllowDBNull = false;
                this.columncbox_number.MaxLength = 50;
                this.columncve_transp.AllowDBNull = false;
                this.columncve_transp.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartidasDespachadasRow NewPartidasDespachadasRow() {
                return ((PartidasDespachadasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PartidasDespachadasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PartidasDespachadasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PartidasDespachadasRowChanged != null)) {
                    this.PartidasDespachadasRowChanged(this, new PartidasDespachadasRowChangeEvent(((PartidasDespachadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PartidasDespachadasRowChanging != null)) {
                    this.PartidasDespachadasRowChanging(this, new PartidasDespachadasRowChangeEvent(((PartidasDespachadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PartidasDespachadasRowDeleted != null)) {
                    this.PartidasDespachadasRowDeleted(this, new PartidasDespachadasRowChangeEvent(((PartidasDespachadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PartidasDespachadasRowDeleting != null)) {
                    this.PartidasDespachadasRowDeleting(this, new PartidasDespachadasRowChangeEvent(((PartidasDespachadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePartidasDespachadasRow(PartidasDespachadasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Embarques ds = new Embarques();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PartidasDespachadasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesSinEnviarPlantaRow : global::System.Data.DataRow {
            
            private MaterialesSinEnviarPlantaDataTable tableMaterialesSinEnviarPlanta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesSinEnviarPlantaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesSinEnviarPlanta = ((MaterialesSinEnviarPlantaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FechaEmbarque {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviarPlanta.FechaEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaEmbarque\' in table \'MaterialesSinEnviarPlanta\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviarPlanta.FechaEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviarPlanta.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'MaterialesSinEnviarPlanta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviarPlanta.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaEmbarqueNull() {
                return this.IsNull(this.tableMaterialesSinEnviarPlanta.FechaEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaEmbarqueNull() {
                this[this.tableMaterialesSinEnviarPlanta.FechaEmbarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableMaterialesSinEnviarPlanta.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableMaterialesSinEnviarPlanta.PlantaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesSinEnviarRow : global::System.Data.DataRow {
            
            private MaterialesSinEnviarDataTable tableMaterialesSinEnviar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesSinEnviarRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesSinEnviar = ((MaterialesSinEnviarDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesOCId {
                get {
                    return ((int)(this[this.tableMaterialesSinEnviar.MaterialesOCIdColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.MaterialesOCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteID {
                get {
                    return ((int)(this[this.tableMaterialesSinEnviar.ClienteIDColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.ClienteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableMaterialesSinEnviar.RenglonIdColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    return ((decimal)(this[this.tableMaterialesSinEnviar.CantidadRecibidaColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableMaterialesSinEnviar.FechaColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enviado {
                get {
                    return ((bool)(this[this.tableMaterialesSinEnviar.EnviadoColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.EnviadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableMaterialesSinEnviar.IdColumn]));
                }
                set {
                    this[this.tableMaterialesSinEnviar.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesSinEnviar.PrecioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precio\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'MaterialesSinEnviar\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pais {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.PaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pais\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.PaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentario {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.ComentarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentario\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.ComentarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bultos {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesSinEnviar.BultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bultos\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.BultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.NoGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGuia\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.NoGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProgramaId {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.ProgramaIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramaId\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.ProgramaIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.NombreProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreProveedor\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.NombreProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesSinEnviar.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool escaneado {
                get {
                    try {
                        return ((bool)(this[this.tableMaterialesSinEnviar.escaneadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'escaneado\' in table \'MaterialesSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesSinEnviar.escaneadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableMaterialesSinEnviar.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableMaterialesSinEnviar.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.PrecioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioNull() {
                this[this.tableMaterialesSinEnviar.PrecioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableMaterialesSinEnviar.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableMaterialesSinEnviar.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.PaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisNull() {
                this[this.tableMaterialesSinEnviar.PaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableMaterialesSinEnviar.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentarioNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.ComentarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentarioNull() {
                this[this.tableMaterialesSinEnviar.ComentarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBultosNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.BultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBultosNull() {
                this[this.tableMaterialesSinEnviar.BultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGuiaNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.NoGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGuiaNull() {
                this[this.tableMaterialesSinEnviar.NoGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableMaterialesSinEnviar.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramaIdNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.ProgramaIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramaIdNull() {
                this[this.tableMaterialesSinEnviar.ProgramaIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreProveedorNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.NombreProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreProveedorNull() {
                this[this.tableMaterialesSinEnviar.NombreProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tableMaterialesSinEnviar.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsescaneadoNull() {
                return this.IsNull(this.tableMaterialesSinEnviar.escaneadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetescaneadoNull() {
                this[this.tableMaterialesSinEnviar.escaneadoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GenerarTXTRow : global::System.Data.DataRow {
            
            private GenerarTXTDataTable tableGenerarTXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GenerarTXTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGenerarTXT = ((GenerarTXTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRecibo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGenerarTXT.FechaReciboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaRecibo\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.FechaReciboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    return ((decimal)(this[this.tableGenerarTXT.CantidadRecibidaColumn]));
                }
                set {
                    this[this.tableGenerarTXT.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero1 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.Numero1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numero1\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.Numero1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pais {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.PaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pais\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.PaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero2 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.Numero2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numero2\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.Numero2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bu1 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.Bu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bu1\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.Bu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bu2 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.Bu2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bu2\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.Bu2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero3 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.Numero3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numero3\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.Numero3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGuia {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.NoGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGuia\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.NoGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tarima {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.TarimaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarima\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.TarimaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableGenerarTXT.RenglonIdColumn]));
                }
                set {
                    this[this.tableGenerarTXT.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmbarquePlanta {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.EmbarquePlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmbarquePlanta\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.EmbarquePlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableGenerarTXT.idColumn]));
                }
                set {
                    this[this.tableGenerarTXT.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaReciboNull() {
                return this.IsNull(this.tableGenerarTXT.FechaReciboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaReciboNull() {
                this[this.tableGenerarTXT.FechaReciboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableGenerarTXT.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableGenerarTXT.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableGenerarTXT.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableGenerarTXT.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableGenerarTXT.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableGenerarTXT.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumero1Null() {
                return this.IsNull(this.tableGenerarTXT.Numero1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumero1Null() {
                this[this.tableGenerarTXT.Numero1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisNull() {
                return this.IsNull(this.tableGenerarTXT.PaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisNull() {
                this[this.tableGenerarTXT.PaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableGenerarTXT.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableGenerarTXT.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumero2Null() {
                return this.IsNull(this.tableGenerarTXT.Numero2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumero2Null() {
                this[this.tableGenerarTXT.Numero2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBu1Null() {
                return this.IsNull(this.tableGenerarTXT.Bu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBu1Null() {
                this[this.tableGenerarTXT.Bu1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBu2Null() {
                return this.IsNull(this.tableGenerarTXT.Bu2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBu2Null() {
                this[this.tableGenerarTXT.Bu2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumero3Null() {
                return this.IsNull(this.tableGenerarTXT.Numero3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumero3Null() {
                this[this.tableGenerarTXT.Numero3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGuiaNull() {
                return this.IsNull(this.tableGenerarTXT.NoGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGuiaNull() {
                this[this.tableGenerarTXT.NoGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarimaNull() {
                return this.IsNull(this.tableGenerarTXT.TarimaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarimaNull() {
                this[this.tableGenerarTXT.TarimaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tableGenerarTXT.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tableGenerarTXT.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmbarquePlantaNull() {
                return this.IsNull(this.tableGenerarTXT.EmbarquePlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmbarquePlantaNull() {
                this[this.tableGenerarTXT.EmbarquePlantaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProveedoresTXTRow : global::System.Data.DataRow {
            
            private ProveedoresTXTDataTable tableProveedoresTXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresTXTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProveedoresTXT = ((ProveedoresTXTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tableProveedoresTXT.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'ProveedoresTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProveedoresTXT.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tableProveedoresTXT.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tableProveedoresTXT.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SKUSinPackingRow : global::System.Data.DataRow {
            
            private SKUSinPackingDataTable tableSKUSinPacking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SKUSinPackingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSKUSinPacking = ((SKUSinPackingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    return ((string)(this[this.tableSKUSinPacking.nid_skuColumn]));
                }
                set {
                    this[this.tableSKUSinPacking.nid_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ddate {
                get {
                    return ((global::System.DateTime)(this[this.tableSKUSinPacking.ddateColumn]));
                }
                set {
                    this[this.tableSKUSinPacking.ddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_opl_in {
                get {
                    try {
                        return ((string)(this[this.tableSKUSinPacking.nid_opl_inColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nid_opl_in\' in table \'SKUSinPacking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSKUSinPacking.nid_opl_inColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bFile {
                get {
                    try {
                        return ((bool)(this[this.tableSKUSinPacking.bFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bFile\' in table \'SKUSinPacking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSKUSinPacking.bFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bexists {
                get {
                    return ((bool)(this[this.tableSKUSinPacking.bexistsColumn]));
                }
                set {
                    this[this.tableSKUSinPacking.bexistsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_opl {
                get {
                    return ((int)(this[this.tableSKUSinPacking.nid_oplColumn]));
                }
                set {
                    this[this.tableSKUSinPacking.nid_oplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnid_opl_inNull() {
                return this.IsNull(this.tableSKUSinPacking.nid_opl_inColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnid_opl_inNull() {
                this[this.tableSKUSinPacking.nid_opl_inColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbFileNull() {
                return this.IsNull(this.tableSKUSinPacking.bFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbFileNull() {
                this[this.tableSKUSinPacking.bFileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLSinEscanearRow : global::System.Data.DataRow {
            
            private PLSinEscanearDataTable tablePLSinEscanear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLSinEscanearRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLSinEscanear = ((PLSinEscanearDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ddate {
                get {
                    return ((global::System.DateTime)(this[this.tablePLSinEscanear.ddateColumn]));
                }
                set {
                    this[this.tablePLSinEscanear.ddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_opl_in {
                get {
                    try {
                        return ((string)(this[this.tablePLSinEscanear.nid_opl_inColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nid_opl_in\' in table \'PLSinEscanear\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLSinEscanear.nid_opl_inColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bFile {
                get {
                    try {
                        return ((bool)(this[this.tablePLSinEscanear.bFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bFile\' in table \'PLSinEscanear\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLSinEscanear.bFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_opl {
                get {
                    return ((int)(this[this.tablePLSinEscanear.nid_oplColumn]));
                }
                set {
                    this[this.tablePLSinEscanear.nid_oplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    return ((string)(this[this.tablePLSinEscanear.nid_skuColumn]));
                }
                set {
                    this[this.tablePLSinEscanear.nid_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnid_opl_inNull() {
                return this.IsNull(this.tablePLSinEscanear.nid_opl_inColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnid_opl_inNull() {
                this[this.tablePLSinEscanear.nid_opl_inColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbFileNull() {
                return this.IsNull(this.tablePLSinEscanear.bFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbFileNull() {
                this[this.tablePLSinEscanear.bFileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesPaltetasRow : global::System.Data.DataRow {
            
            private MaterialesPaltetasDataTable tableMaterialesPaltetas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesPaltetasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesPaltetas = ((MaterialesPaltetasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableMaterialesPaltetas.IdColumn]));
                }
                set {
                    this[this.tableMaterialesPaltetas.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRecibo {
                get {
                    return ((global::System.DateTime)(this[this.tableMaterialesPaltetas.FechaReciboColumn]));
                }
                set {
                    this[this.tableMaterialesPaltetas.FechaReciboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroPaleta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesPaltetas.NumeroPaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroPaleta\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.NumeroPaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesPaltetas.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PesoBruto {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesPaltetas.PesoBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoBruto\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.PesoBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadBultos {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesPaltetas.CantidadBultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadBultos\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.CantidadBultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoEmbarque {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesPaltetas.TipoEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoEmbarque\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.TipoEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContenidoTipoBulto {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesPaltetas.ContenidoTipoBultoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContenidoTipoBulto\' in table \'MaterialesPaltetas\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.ContenidoTipoBultoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEmbarque {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesPaltetas.FechaEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaEmbarque\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.FechaEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConsecutivoEmbarque {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesPaltetas.ConsecutivoEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsecutivoEmbarque\' in table \'MaterialesPaltetas\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.ConsecutivoEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombrePaleta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesPaltetas.NombrePaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombrePaleta\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.NombrePaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesPaltetas.nid_skuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nid_sku\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.nid_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Consecutivo {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesPaltetas.ConsecutivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consecutivo\' in table \'MaterialesPaltetas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesPaltetas.ConsecutivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroPaletaNull() {
                return this.IsNull(this.tableMaterialesPaltetas.NumeroPaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroPaletaNull() {
                this[this.tableMaterialesPaltetas.NumeroPaletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableMaterialesPaltetas.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableMaterialesPaltetas.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoBrutoNull() {
                return this.IsNull(this.tableMaterialesPaltetas.PesoBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoBrutoNull() {
                this[this.tableMaterialesPaltetas.PesoBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadBultosNull() {
                return this.IsNull(this.tableMaterialesPaltetas.CantidadBultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadBultosNull() {
                this[this.tableMaterialesPaltetas.CantidadBultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoEmbarqueNull() {
                return this.IsNull(this.tableMaterialesPaltetas.TipoEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoEmbarqueNull() {
                this[this.tableMaterialesPaltetas.TipoEmbarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContenidoTipoBultoNull() {
                return this.IsNull(this.tableMaterialesPaltetas.ContenidoTipoBultoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContenidoTipoBultoNull() {
                this[this.tableMaterialesPaltetas.ContenidoTipoBultoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaEmbarqueNull() {
                return this.IsNull(this.tableMaterialesPaltetas.FechaEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaEmbarqueNull() {
                this[this.tableMaterialesPaltetas.FechaEmbarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoEmbarqueNull() {
                return this.IsNull(this.tableMaterialesPaltetas.ConsecutivoEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoEmbarqueNull() {
                this[this.tableMaterialesPaltetas.ConsecutivoEmbarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombrePaletaNull() {
                return this.IsNull(this.tableMaterialesPaltetas.NombrePaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombrePaletaNull() {
                this[this.tableMaterialesPaltetas.NombrePaletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnid_skuNull() {
                return this.IsNull(this.tableMaterialesPaltetas.nid_skuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnid_skuNull() {
                this[this.tableMaterialesPaltetas.nid_skuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoNull() {
                return this.IsNull(this.tableMaterialesPaltetas.ConsecutivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoNull() {
                this[this.tableMaterialesPaltetas.ConsecutivoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesEnviarRow : global::System.Data.DataRow {
            
            private MaterialesEnviarDataTable tableMaterialesEnviar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesEnviarRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesEnviar = ((MaterialesEnviarDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableMaterialesEnviar.IdColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesPaletasId {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesEnviar.MaterialesPaletasIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialesPaletasId\' in table \'MaterialesEnviar\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.MaterialesPaletasIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesOCId {
                get {
                    return ((int)(this[this.tableMaterialesEnviar.MaterialesOCIdColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.MaterialesOCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteID {
                get {
                    return ((int)(this[this.tableMaterialesEnviar.ClienteIDColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.ClienteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableMaterialesEnviar.RenglonIdColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    return ((decimal)(this[this.tableMaterialesEnviar.CantidadRecibidaColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableMaterialesEnviar.FechaColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Preparado {
                get {
                    return ((bool)(this[this.tableMaterialesEnviar.PreparadoColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.PreparadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enviado {
                get {
                    return ((bool)(this[this.tableMaterialesEnviar.EnviadoColumn]));
                }
                set {
                    this[this.tableMaterialesEnviar.EnviadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEnviar.NoGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGuia\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.NoGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEnviar.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEnviar.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pais {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEnviar.PaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pais\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.PaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEnviar.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool escaneado {
                get {
                    try {
                        return ((bool)(this[this.tableMaterialesEnviar.escaneadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'escaneado\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.escaneadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesEnviar.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'MaterialesEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesEnviar.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialesPaletasIdNull() {
                return this.IsNull(this.tableMaterialesEnviar.MaterialesPaletasIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialesPaletasIdNull() {
                this[this.tableMaterialesEnviar.MaterialesPaletasIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGuiaNull() {
                return this.IsNull(this.tableMaterialesEnviar.NoGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGuiaNull() {
                this[this.tableMaterialesEnviar.NoGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableMaterialesEnviar.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableMaterialesEnviar.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableMaterialesEnviar.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableMaterialesEnviar.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisNull() {
                return this.IsNull(this.tableMaterialesEnviar.PaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisNull() {
                this[this.tableMaterialesEnviar.PaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableMaterialesEnviar.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableMaterialesEnviar.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsescaneadoNull() {
                return this.IsNull(this.tableMaterialesEnviar.escaneadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetescaneadoNull() {
                this[this.tableMaterialesEnviar.escaneadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableMaterialesEnviar.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableMaterialesEnviar.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GenerarTXTRehacerRow : global::System.Data.DataRow {
            
            private GenerarTXTRehacerDataTable tableGenerarTXTRehacer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GenerarTXTRehacerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGenerarTXTRehacer = ((GenerarTXTRehacerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRecibo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGenerarTXTRehacer.FechaReciboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaRecibo\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.FechaReciboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    return ((decimal)(this[this.tableGenerarTXTRehacer.CantidadRecibidaColumn]));
                }
                set {
                    this[this.tableGenerarTXTRehacer.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero1 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.Numero1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numero1\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.Numero1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pais {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.PaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pais\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.PaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero2 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.Numero2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numero2\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.Numero2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bu1 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.Bu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bu1\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.Bu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bu2 {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.Bu2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bu2\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.Bu2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGuia {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.NoGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGuia\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.NoGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tarima {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.TarimaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarima\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.TarimaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableGenerarTXTRehacer.RenglonIdColumn]));
                }
                set {
                    this[this.tableGenerarTXTRehacer.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmbarquePlanta {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.EmbarquePlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmbarquePlanta\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.EmbarquePlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableGenerarTXTRehacer.idColumn]));
                }
                set {
                    this[this.tableGenerarTXTRehacer.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bultos {
                get {
                    try {
                        return ((decimal)(this[this.tableGenerarTXTRehacer.bultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bultos\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.bultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Peso {
                get {
                    try {
                        return ((decimal)(this[this.tableGenerarTXTRehacer.PesoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Peso\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.PesoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroPaleta {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXTRehacer.NumeroPaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroPaleta\' in table \'GenerarTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXTRehacer.NumeroPaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaReciboNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.FechaReciboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaReciboNull() {
                this[this.tableGenerarTXTRehacer.FechaReciboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableGenerarTXTRehacer.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableGenerarTXTRehacer.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableGenerarTXTRehacer.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumero1Null() {
                return this.IsNull(this.tableGenerarTXTRehacer.Numero1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumero1Null() {
                this[this.tableGenerarTXTRehacer.Numero1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.PaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisNull() {
                this[this.tableGenerarTXTRehacer.PaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableGenerarTXTRehacer.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumero2Null() {
                return this.IsNull(this.tableGenerarTXTRehacer.Numero2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumero2Null() {
                this[this.tableGenerarTXTRehacer.Numero2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBu1Null() {
                return this.IsNull(this.tableGenerarTXTRehacer.Bu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBu1Null() {
                this[this.tableGenerarTXTRehacer.Bu1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBu2Null() {
                return this.IsNull(this.tableGenerarTXTRehacer.Bu2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBu2Null() {
                this[this.tableGenerarTXTRehacer.Bu2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGuiaNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.NoGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGuiaNull() {
                this[this.tableGenerarTXTRehacer.NoGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarimaNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.TarimaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarimaNull() {
                this[this.tableGenerarTXTRehacer.TarimaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tableGenerarTXTRehacer.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmbarquePlantaNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.EmbarquePlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmbarquePlantaNull() {
                this[this.tableGenerarTXTRehacer.EmbarquePlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbultosNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.bultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbultosNull() {
                this[this.tableGenerarTXTRehacer.bultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.PesoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoNull() {
                this[this.tableGenerarTXTRehacer.PesoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroPaletaNull() {
                return this.IsNull(this.tableGenerarTXTRehacer.NumeroPaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroPaletaNull() {
                this[this.tableGenerarTXTRehacer.NumeroPaletaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProveedoresTXTRehacerRow : global::System.Data.DataRow {
            
            private ProveedoresTXTRehacerDataTable tableProveedoresTXTRehacer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresTXTRehacerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProveedoresTXTRehacer = ((ProveedoresTXTRehacerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tableProveedoresTXTRehacer.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'ProveedoresTXTRehacer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProveedoresTXTRehacer.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tableProveedoresTXTRehacer.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tableProveedoresTXTRehacer.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sku_escanearRow : global::System.Data.DataRow {
            
            private sku_escanearDataTable tablesku_escanear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sku_escanearRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesku_escanear = ((sku_escanearDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablesku_escanear.idColumn]));
                }
                set {
                    this[this.tablesku_escanear.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    return ((string)(this[this.tablesku_escanear.nid_skuColumn]));
                }
                set {
                    this[this.tablesku_escanear.nid_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    return ((global::System.DateTime)(this[this.tablesku_escanear.fechaColumn]));
                }
                set {
                    this[this.tablesku_escanear.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool escaneado {
                get {
                    return ((bool)(this[this.tablesku_escanear.escaneadoColumn]));
                }
                set {
                    this[this.tablesku_escanear.escaneadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_cliente {
                get {
                    try {
                        return ((int)(this[this.tablesku_escanear.nid_clienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nid_cliente\' in table \'sku_escanear\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesku_escanear.nid_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnid_clienteNull() {
                return this.IsNull(this.tablesku_escanear.nid_clienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnid_clienteNull() {
                this[this.tablesku_escanear.nid_clienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesPaletasGuiasRow : global::System.Data.DataRow {
            
            private MaterialesPaletasGuiasDataTable tableMaterialesPaletasGuias;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesPaletasGuiasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesPaletasGuias = ((MaterialesPaletasGuiasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdPaleta {
                get {
                    return ((int)(this[this.tableMaterialesPaletasGuias.IdPaletaColumn]));
                }
                set {
                    this[this.tableMaterialesPaletasGuias.IdPaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    return ((string)(this[this.tableMaterialesPaletasGuias.nid_skuColumn]));
                }
                set {
                    this[this.tableMaterialesPaletasGuias.nid_skuColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DetenerPartidaConTarimaRow : global::System.Data.DataRow {
            
            private DetenerPartidaConTarimaDataTable tableDetenerPartidaConTarima;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetenerPartidaConTarimaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetenerPartidaConTarima = ((DetenerPartidaConTarimaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesPaletasId {
                get {
                    try {
                        return ((int)(this[this.tableDetenerPartidaConTarima.MaterialesPaletasIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialesPaletasId\' in table \'DetenerPartidaConTarima\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaConTarima.MaterialesPaletasIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroPaleta {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaConTarima.NumeroPaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroPaleta\' in table \'DetenerPartidaConTarima\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaConTarima.NumeroPaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombrePaleta {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaConTarima.NombrePaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombrePaleta\' in table \'DetenerPartidaConTarima\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaConTarima.NombrePaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesOCId {
                get {
                    return ((int)(this[this.tableDetenerPartidaConTarima.MaterialesOCIdColumn]));
                }
                set {
                    this[this.tableDetenerPartidaConTarima.MaterialesOCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableDetenerPartidaConTarima.RenglonIdColumn]));
                }
                set {
                    this[this.tableDetenerPartidaConTarima.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    return ((decimal)(this[this.tableDetenerPartidaConTarima.CantidadRecibidaColumn]));
                }
                set {
                    this[this.tableDetenerPartidaConTarima.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaConTarima.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'DetenerPartidaConTarima\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaConTarima.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableDetenerPartidaConTarima.IdColumn]));
                }
                set {
                    this[this.tableDetenerPartidaConTarima.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaConTarima.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'DetenerPartidaConTarima\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaConTarima.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialesPaletasIdNull() {
                return this.IsNull(this.tableDetenerPartidaConTarima.MaterialesPaletasIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialesPaletasIdNull() {
                this[this.tableDetenerPartidaConTarima.MaterialesPaletasIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroPaletaNull() {
                return this.IsNull(this.tableDetenerPartidaConTarima.NumeroPaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroPaletaNull() {
                this[this.tableDetenerPartidaConTarima.NumeroPaletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombrePaletaNull() {
                return this.IsNull(this.tableDetenerPartidaConTarima.NombrePaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombrePaletaNull() {
                this[this.tableDetenerPartidaConTarima.NombrePaletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableDetenerPartidaConTarima.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableDetenerPartidaConTarima.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableDetenerPartidaConTarima.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableDetenerPartidaConTarima.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DetenerPartidaSinEnviarRow : global::System.Data.DataRow {
            
            private DetenerPartidaSinEnviarDataTable tableDetenerPartidaSinEnviar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetenerPartidaSinEnviarRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetenerPartidaSinEnviar = ((DetenerPartidaSinEnviarDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableDetenerPartidaSinEnviar.IdColumn]));
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesOCId {
                get {
                    return ((int)(this[this.tableDetenerPartidaSinEnviar.MaterialesOCIdColumn]));
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.MaterialesOCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableDetenerPartidaSinEnviar.RenglonIdColumn]));
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    return ((decimal)(this[this.tableDetenerPartidaSinEnviar.CantidadRecibidaColumn]));
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaSinEnviar.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'DetenerPartidaSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaSinEnviar.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'DetenerPartidaSinEnviar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableDetenerPartidaSinEnviar.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'DetenerPartidaSinEnviar\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDetenerPartidaSinEnviar.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableDetenerPartidaSinEnviar.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableDetenerPartidaSinEnviar.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableDetenerPartidaSinEnviar.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableDetenerPartidaSinEnviar.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableDetenerPartidaSinEnviar.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableDetenerPartidaSinEnviar.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ConsecutivoEmbarqueRow : global::System.Data.DataRow {
            
            private ConsecutivoEmbarqueDataTable tableConsecutivoEmbarque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ConsecutivoEmbarqueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConsecutivoEmbarque = ((ConsecutivoEmbarqueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Embarque {
                get {
                    try {
                        return ((int)(this[this.tableConsecutivoEmbarque.EmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Embarque\' in table \'ConsecutivoEmbarque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsecutivoEmbarque.EmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Consecutivo {
                get {
                    try {
                        return ((int)(this[this.tableConsecutivoEmbarque.ConsecutivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consecutivo\' in table \'ConsecutivoEmbarque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsecutivoEmbarque.ConsecutivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmbarqueNull() {
                return this.IsNull(this.tableConsecutivoEmbarque.EmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmbarqueNull() {
                this[this.tableConsecutivoEmbarque.EmbarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoNull() {
                return this.IsNull(this.tableConsecutivoEmbarque.ConsecutivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoNull() {
                this[this.tableConsecutivoEmbarque.ConsecutivoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProveedoresConsecutivoRow : global::System.Data.DataRow {
            
            private ProveedoresConsecutivoDataTable tableProveedoresConsecutivo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresConsecutivoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProveedoresConsecutivo = ((ProveedoresConsecutivoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tableProveedoresConsecutivo.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'ProveedoresConsecutivo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProveedoresConsecutivo.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Consecutivo {
                get {
                    try {
                        return ((int)(this[this.tableProveedoresConsecutivo.ConsecutivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consecutivo\' in table \'ProveedoresConsecutivo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProveedoresConsecutivo.ConsecutivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConsecutivoEmbarque {
                get {
                    try {
                        return ((int)(this[this.tableProveedoresConsecutivo.ConsecutivoEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsecutivoEmbarque\' in table \'ProveedoresConsecutivo\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableProveedoresConsecutivo.ConsecutivoEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tableProveedoresConsecutivo.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tableProveedoresConsecutivo.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoNull() {
                return this.IsNull(this.tableProveedoresConsecutivo.ConsecutivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoNull() {
                this[this.tableProveedoresConsecutivo.ConsecutivoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoEmbarqueNull() {
                return this.IsNull(this.tableProveedoresConsecutivo.ConsecutivoEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoEmbarqueNull() {
                this[this.tableProveedoresConsecutivo.ConsecutivoEmbarqueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DatosComplementariosRow : global::System.Data.DataRow {
            
            private DatosComplementariosDataTable tableDatosComplementarios;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DatosComplementariosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDatosComplementarios = ((DatosComplementariosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tableDatosComplementarios.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'DatosComplementarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosComplementarios.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cbox_number {
                get {
                    return ((string)(this[this.tableDatosComplementarios.cbox_numberColumn]));
                }
                set {
                    this[this.tableDatosComplementarios.cbox_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int bultos {
                get {
                    try {
                        return ((int)(this[this.tableDatosComplementarios.bultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bultos\' in table \'DatosComplementarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosComplementarios.bultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pesobruto {
                get {
                    try {
                        return ((decimal)(this[this.tableDatosComplementarios.pesobrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pesobruto\' in table \'DatosComplementarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosComplementarios.pesobrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nid_deploy {
                get {
                    return ((int)(this[this.tableDatosComplementarios.nid_deployColumn]));
                }
                set {
                    this[this.tableDatosComplementarios.nid_deployColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tarimas {
                get {
                    try {
                        return ((int)(this[this.tableDatosComplementarios.TarimasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarimas\' in table \'DatosComplementarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosComplementarios.TarimasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tableDatosComplementarios.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tableDatosComplementarios.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbultosNull() {
                return this.IsNull(this.tableDatosComplementarios.bultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbultosNull() {
                this[this.tableDatosComplementarios.bultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspesobrutoNull() {
                return this.IsNull(this.tableDatosComplementarios.pesobrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpesobrutoNull() {
                this[this.tableDatosComplementarios.pesobrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarimasNull() {
                return this.IsNull(this.tableDatosComplementarios.TarimasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarimasNull() {
                this[this.tableDatosComplementarios.TarimasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PartidasDespachadasRow : global::System.Data.DataRow {
            
            private PartidasDespachadasDataTable tablePartidasDespachadas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PartidasDespachadasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePartidasDespachadas = ((PartidasDespachadasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fechallegada {
                get {
                    return ((global::System.DateTime)(this[this.tablePartidasDespachadas.FechallegadaColumn]));
                }
                set {
                    this[this.tablePartidasDespachadas.FechallegadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConsecutivoEmbarque {
                get {
                    try {
                        return ((int)(this[this.tablePartidasDespachadas.ConsecutivoEmbarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsecutivoEmbarque\' in table \'PartidasDespachadas\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.ConsecutivoEmbarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Consecutivo {
                get {
                    try {
                        return ((int)(this[this.tablePartidasDespachadas.ConsecutivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consecutivo\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.ConsecutivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombrePaleta {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.NombrePaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombrePaleta\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.NombrePaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroPaleta {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.NumeroPaletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroPaleta\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.NumeroPaletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PesoBruto {
                get {
                    try {
                        return ((decimal)(this[this.tablePartidasDespachadas.PesoBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoBruto\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.PesoBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadBultos {
                get {
                    try {
                        return ((decimal)(this[this.tablePartidasDespachadas.CantidadBultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadBultos\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.CantidadBultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nid_sku {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.nid_skuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nid_sku\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.nid_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dEndSelection {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePartidasDespachadas.dEndSelectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dEndSelection\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.dEndSelectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesOCId {
                get {
                    return ((int)(this[this.tablePartidasDespachadas.MaterialesOCIdColumn]));
                }
                set {
                    this[this.tablePartidasDespachadas.MaterialesOCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tablePartidasDespachadas.RenglonIdColumn]));
                }
                set {
                    this[this.tablePartidasDespachadas.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'PartidasDespachadas\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorId {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.ProveedorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorId\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.ProveedorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreProveedor {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.NombreProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreProveedor\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.NombreProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentario {
                get {
                    try {
                        return ((string)(this[this.tablePartidasDespachadas.ComentarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentario\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.ComentarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cbox_number {
                get {
                    return ((string)(this[this.tablePartidasDespachadas.cbox_numberColumn]));
                }
                set {
                    this[this.tablePartidasDespachadas.cbox_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cve_transp {
                get {
                    return ((string)(this[this.tablePartidasDespachadas.cve_transpColumn]));
                }
                set {
                    this[this.tablePartidasDespachadas.cve_transpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool escaneado {
                get {
                    try {
                        return ((bool)(this[this.tablePartidasDespachadas.escaneadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'escaneado\' in table \'PartidasDespachadas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartidasDespachadas.escaneadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoEmbarqueNull() {
                return this.IsNull(this.tablePartidasDespachadas.ConsecutivoEmbarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoEmbarqueNull() {
                this[this.tablePartidasDespachadas.ConsecutivoEmbarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoNull() {
                return this.IsNull(this.tablePartidasDespachadas.ConsecutivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoNull() {
                this[this.tablePartidasDespachadas.ConsecutivoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombrePaletaNull() {
                return this.IsNull(this.tablePartidasDespachadas.NombrePaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombrePaletaNull() {
                this[this.tablePartidasDespachadas.NombrePaletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroPaletaNull() {
                return this.IsNull(this.tablePartidasDespachadas.NumeroPaletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroPaletaNull() {
                this[this.tablePartidasDespachadas.NumeroPaletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tablePartidasDespachadas.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tablePartidasDespachadas.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoBrutoNull() {
                return this.IsNull(this.tablePartidasDespachadas.PesoBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoBrutoNull() {
                this[this.tablePartidasDespachadas.PesoBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadBultosNull() {
                return this.IsNull(this.tablePartidasDespachadas.CantidadBultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadBultosNull() {
                this[this.tablePartidasDespachadas.CantidadBultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnid_skuNull() {
                return this.IsNull(this.tablePartidasDespachadas.nid_skuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnid_skuNull() {
                this[this.tablePartidasDespachadas.nid_skuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdEndSelectionNull() {
                return this.IsNull(this.tablePartidasDespachadas.dEndSelectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdEndSelectionNull() {
                this[this.tablePartidasDespachadas.dEndSelectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tablePartidasDespachadas.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tablePartidasDespachadas.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tablePartidasDespachadas.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tablePartidasDespachadas.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablePartidasDespachadas.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablePartidasDespachadas.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIdNull() {
                return this.IsNull(this.tablePartidasDespachadas.ProveedorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIdNull() {
                this[this.tablePartidasDespachadas.ProveedorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreProveedorNull() {
                return this.IsNull(this.tablePartidasDespachadas.NombreProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreProveedorNull() {
                this[this.tablePartidasDespachadas.NombreProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentarioNull() {
                return this.IsNull(this.tablePartidasDespachadas.ComentarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentarioNull() {
                this[this.tablePartidasDespachadas.ComentarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsescaneadoNull() {
                return this.IsNull(this.tablePartidasDespachadas.escaneadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetescaneadoNull() {
                this[this.tablePartidasDespachadas.escaneadoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesSinEnviarPlantaRowChangeEvent : global::System.EventArgs {
            
            private MaterialesSinEnviarPlantaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarPlantaRowChangeEvent(MaterialesSinEnviarPlantaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarPlantaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesSinEnviarRowChangeEvent : global::System.EventArgs {
            
            private MaterialesSinEnviarRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarRowChangeEvent(MaterialesSinEnviarRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesSinEnviarRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GenerarTXTRowChangeEvent : global::System.EventArgs {
            
            private GenerarTXTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRowChangeEvent(GenerarTXTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProveedoresTXTRowChangeEvent : global::System.EventArgs {
            
            private ProveedoresTXTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRowChangeEvent(ProveedoresTXTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SKUSinPackingRowChangeEvent : global::System.EventArgs {
            
            private SKUSinPackingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingRowChangeEvent(SKUSinPackingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SKUSinPackingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLSinEscanearRowChangeEvent : global::System.EventArgs {
            
            private PLSinEscanearRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLSinEscanearRowChangeEvent(PLSinEscanearRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLSinEscanearRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesPaltetasRowChangeEvent : global::System.EventArgs {
            
            private MaterialesPaltetasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaltetasRowChangeEvent(MaterialesPaltetasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaltetasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesEnviarRowChangeEvent : global::System.EventArgs {
            
            private MaterialesEnviarRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEnviarRowChangeEvent(MaterialesEnviarRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesEnviarRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GenerarTXTRehacerRowChangeEvent : global::System.EventArgs {
            
            private GenerarTXTRehacerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRehacerRowChangeEvent(GenerarTXTRehacerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRehacerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProveedoresTXTRehacerRowChangeEvent : global::System.EventArgs {
            
            private ProveedoresTXTRehacerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRehacerRowChangeEvent(ProveedoresTXTRehacerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRehacerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sku_escanearRowChangeEvent : global::System.EventArgs {
            
            private sku_escanearRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRowChangeEvent(sku_escanearRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sku_escanearRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesPaletasGuiasRowChangeEvent : global::System.EventArgs {
            
            private MaterialesPaletasGuiasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaletasGuiasRowChangeEvent(MaterialesPaletasGuiasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesPaletasGuiasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DetenerPartidaConTarimaRowChangeEvent : global::System.EventArgs {
            
            private DetenerPartidaConTarimaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaConTarimaRowChangeEvent(DetenerPartidaConTarimaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaConTarimaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DetenerPartidaSinEnviarRowChangeEvent : global::System.EventArgs {
            
            private DetenerPartidaSinEnviarRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaSinEnviarRowChangeEvent(DetenerPartidaSinEnviarRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetenerPartidaSinEnviarRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ConsecutivoEmbarqueRowChangeEvent : global::System.EventArgs {
            
            private ConsecutivoEmbarqueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsecutivoEmbarqueRowChangeEvent(ConsecutivoEmbarqueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsecutivoEmbarqueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProveedoresConsecutivoRowChangeEvent : global::System.EventArgs {
            
            private ProveedoresConsecutivoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresConsecutivoRowChangeEvent(ProveedoresConsecutivoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresConsecutivoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DatosComplementariosRowChangeEvent : global::System.EventArgs {
            
            private DatosComplementariosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosRowChangeEvent(DatosComplementariosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatosComplementariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PartidasDespachadasRowChangeEvent : global::System.EventArgs {
            
            private PartidasDespachadasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartidasDespachadasRowChangeEvent(PartidasDespachadasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartidasDespachadasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MaterialCore.DataSets.EmbarquesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesSinEnviarPlantaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesSinEnviarPlantaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesSinEnviarPlanta";
            tableMapping.ColumnMappings.Add("FechaEmbarque", "FechaEmbarque");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     \'(Sin Enviar)\' AS FechaEmbarque, Planta\r\nFROM         MaterialesEnviar" +
                " AS ME\r\nWHERE     (Enviado = 0) AND (Preparado = 0)\r\nGROUP BY Planta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.MaterialesSinEnviarPlantaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.MaterialesSinEnviarPlantaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.MaterialesSinEnviarPlantaDataTable dataTable = new Embarques.MaterialesSinEnviarPlantaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesSinEnviarTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesSinEnviarTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesSinEnviar";
            tableMapping.ColumnMappings.Add("MaterialesOCId", "MaterialesOCId");
            tableMapping.ColumnMappings.Add("ClienteID", "ClienteID");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Enviado", "Enviado");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("Pais", "Pais");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("Comentario", "Comentario");
            tableMapping.ColumnMappings.Add("Bultos", "Bultos");
            tableMapping.ColumnMappings.Add("NoGuia", "NoGuia");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("ProgramaId", "ProgramaId");
            tableMapping.ColumnMappings.Add("NombreProveedor", "NombreProveedor");
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            tableMapping.ColumnMappings.Add("escaneado", "escaneado");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ME.Id, ME.MaterialesOCId, ME.ClienteID, ME.RenglonId, ME.CantidadRecibida, ME.Fecha, ME.Enviado, ME.FacturaProveedor, ME.NombreProveedor, 
                      ME.Moneda, ME.NoGuia, ME.Planta, ME.UnidadMedida, ME.NumeroParte, ME.Descripcion, ME.Pais, ME.ProveedorId, ME.Precio, ME.Comentario, 
                      ME.Bultos, ME.ProgramaId, ISNULL(sku_escanear.escaneado, 0) AS escaneado
FROM         MaterialesEnviar AS ME LEFT OUTER JOIN
                      sku_escanear ON ME.NoGuia = sku_escanear.nid_sku
WHERE     (ME.Enviado = 0) AND (ME.Preparado = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     ME.Id, ME.MaterialesOCId, ME.ClienteID, ME.RenglonId, ME.CantidadRecibida, ME.Fecha, ME.Enviado, ME.Planta, ME.NoGuia, ME.FacturaProveedor, 
                      ME.NombreProveedor, ME.Moneda, ME.Pais, ME.UnidadMedida, ME.ProveedorId, ME.NumeroParte, ME.Descripcion, ME.Bultos, ME.Comentario, 
                      ME.ProgramaId, ME.Precio, ISNULL(sku_escanear.escaneado, 0) AS escaneado
FROM         MaterialesEnviar AS ME LEFT OUTER JOIN
                      sku_escanear ON ME.NoGuia = sku_escanear.nid_sku
WHERE     (ME.Enviado = 0) AND (ME.Preparado = 0) AND (ME.Planta = @Planta)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     ME.Id, ME.MaterialesOCId, ME.ClienteID, ME.RenglonId, ME.CantidadRecibida, ME.Fecha, ME.Enviado, ME.Planta, ME.NoGuia, ME.FacturaProveedor, 
                      ME.NombreProveedor, ME.Pais, ME.Moneda, ME.UnidadMedida, ME.ProveedorId, ME.NumeroParte, ME.Descripcion, ME.ProgramaId, ME.Bultos, 
                      ME.Comentario, ME.Precio, ISNULL(sku_escanear.escaneado, 0) AS escaneado
FROM         MaterialesEnviar AS ME LEFT OUTER JOIN
                      sku_escanear ON ME.NoGuia = sku_escanear.nid_sku
WHERE     (ME.Enviado = 0) AND (ME.Preparado = 0) AND (ME.Planta = @Planta) AND (ME.MaterialesOCId LIKE @PO)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.MaterialesSinEnviarDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.MaterialesSinEnviarDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.MaterialesSinEnviarDataTable dataTable = new Embarques.MaterialesSinEnviarDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPlanta(Embarques.MaterialesSinEnviarDataTable dataTable, string Planta) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Planta));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.MaterialesSinEnviarDataTable GetDataByPlanta(string Planta) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Planta));
            }
            Embarques.MaterialesSinEnviarDataTable dataTable = new Embarques.MaterialesSinEnviarDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPlantaFiltro(Embarques.MaterialesSinEnviarDataTable dataTable, string Planta, string PO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Planta));
            }
            if ((PO == null)) {
                throw new global::System.ArgumentNullException("PO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PO));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.MaterialesSinEnviarDataTable GetDataByPlantaFiltro(string Planta, string PO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Planta));
            }
            if ((PO == null)) {
                throw new global::System.ArgumentNullException("PO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PO));
            }
            Embarques.MaterialesSinEnviarDataTable dataTable = new Embarques.MaterialesSinEnviarDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GenerarTXTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GenerarTXTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GenerarTXT";
            tableMapping.ColumnMappings.Add("FechaRecibo", "FechaRecibo");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("Numero1", "Numero1");
            tableMapping.ColumnMappings.Add("Pais", "Pais");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("Numero2", "Numero2");
            tableMapping.ColumnMappings.Add("Bu1", "Bu1");
            tableMapping.ColumnMappings.Add("Bu2", "Bu2");
            tableMapping.ColumnMappings.Add("Numero3", "Numero3");
            tableMapping.ColumnMappings.Add("NoGuia", "NoGuia");
            tableMapping.ColumnMappings.Add("Tarima", "Tarima");
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("EmbarquePlanta", "EmbarquePlanta");
            tableMapping.ColumnMappings.Add("id", "id");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ISNULL(sku_arrivals.dfecha_sku, ME.Fecha) AS FechaRecibo, ME.CantidadRecibida, '00000000.00000000' AS Numero1, '000000001' AS Numero2, 
                      'BU' AS Bu1, 'BU' AS Bu2, @NumeroPaleta AS Numero3, 'PL01' AS Tarima, ME.NoGuia, ME.FacturaProveedor, ME.Moneda, ME.Pais, 
                      ME.UnidadMedida, ME.ProveedorId, ME.NumeroParte, ME.RenglonId, ME.ProveedorId + '-' + ME.Planta AS EmbarquePlanta, 
                      ME.MaterialesOCId AS id
FROM         MaterialesEnviar AS ME LEFT OUTER JOIN
                      sku_arrivals ON ME.NoGuia = sku_arrivals.nid_sku
WHERE     (ME.Enviado = 0) AND (ME.Preparado = 0) AND (ME.Planta = @Planta)
ORDER BY ME.Id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroPaleta", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     ISNULL(sku_arrivals.dfecha_sku, ME.Fecha) AS FechaRecibo, ME.CantidadRecibida, '00000000.00000000' AS Numero1, '000000001' AS Numero2, 
                      'BU' AS Bu1, 'BU' AS Bu2, @NumeroPaleta AS Numero3, 'PL01' AS Tarima, ME.NoGuia, ME.FacturaProveedor, ME.Moneda, ME.Pais, 
                      ME.UnidadMedida, ME.ProveedorId, ME.NumeroParte, ME.ProveedorId + '-' + ME.Planta AS EmbarquePlanta, ME.RenglonId, 
                      ME.MaterialesOCId AS ID
FROM         MaterialesEnviar AS ME LEFT OUTER JOIN
                      sku_arrivals ON ME.NoGuia = sku_arrivals.nid_sku
WHERE     (ME.Enviado = 0) AND (ME.Preparado = 0) AND (ME.Planta = @Planta) AND (ME.ProveedorId = @ProveedorId)
ORDER BY ME.Id";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroPaleta", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProveedorId", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.GenerarTXTDataTable dataTable, string NumeroPaleta, string Planta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((NumeroPaleta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NumeroPaleta));
            }
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Planta));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.GenerarTXTDataTable GetData(string NumeroPaleta, string Planta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((NumeroPaleta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NumeroPaleta));
            }
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Planta));
            }
            Embarques.GenerarTXTDataTable dataTable = new Embarques.GenerarTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProveedor(Embarques.GenerarTXTDataTable dataTable, string NumeroPaleta, string Planta, string ProveedorId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((NumeroPaleta == null)) {
                throw new global::System.ArgumentNullException("NumeroPaleta");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NumeroPaleta));
            }
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Planta));
            }
            if ((ProveedorId == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ProveedorId));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.GenerarTXTDataTable GetDataByProveedor(string NumeroPaleta, string Planta, string ProveedorId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((NumeroPaleta == null)) {
                throw new global::System.ArgumentNullException("NumeroPaleta");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NumeroPaleta));
            }
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Planta));
            }
            if ((ProveedorId == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ProveedorId));
            }
            Embarques.GenerarTXTDataTable dataTable = new Embarques.GenerarTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProveedoresTXTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProveedoresTXTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProveedoresTXT";
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ProveedorId\r\nFROM         MaterialesEnviar AS ME\r\nWHERE     (Enviado =" +
                " 0) AND (Preparado = 0) AND (Planta = @planta)\r\nGROUP BY ProveedorId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.ProveedoresTXTDataTable dataTable, string planta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((planta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(planta));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.ProveedoresTXTDataTable GetData(string planta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((planta == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(planta));
            }
            Embarques.ProveedoresTXTDataTable dataTable = new Embarques.ProveedoresTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SKUSinPackingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SKUSinPackingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SKUSinPacking";
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            tableMapping.ColumnMappings.Add("ddate", "ddate");
            tableMapping.ColumnMappings.Add("nid_opl_in", "nid_opl_in");
            tableMapping.ColumnMappings.Add("bFile", "bFile");
            tableMapping.ColumnMappings.Add("bexists", "bexists");
            tableMapping.ColumnMappings.Add("nid_opl", "nid_opl");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     sku_arrivals.nid_sku, origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile, 
                      sku_arrivals.bexists
FROM         sku_arrivals INNER JOIN
                      packing_list_breakdown ON sku_arrivals.nid_sku = packing_list_breakdown.nid_sku INNER JOIN
                      origin_packing_list ON packing_list_breakdown.nid_opl = origin_packing_list.nid_opl
WHERE     (sku_arrivals.IdCliente = 70) AND (origin_packing_list.bFile = 0) AND (sku_arrivals.bexists = 1)
ORDER BY sku_arrivals.dfecha_sku DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     sku_arrivals.nid_sku, origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile, 
                      sku_arrivals.bexists
FROM         sku_arrivals INNER JOIN
                      packing_list_breakdown ON sku_arrivals.nid_sku = packing_list_breakdown.nid_sku INNER JOIN
                      origin_packing_list ON packing_list_breakdown.nid_opl = origin_packing_list.nid_opl
WHERE     (sku_arrivals.IdCliente = 70) AND (origin_packing_list.bFile = 0) AND (sku_arrivals.bexists = 1) AND origin_packing_list.nid_opl = @nid_opl
ORDER BY sku_arrivals.dfecha_sku DESC";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_opl", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.SKUSinPackingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.SKUSinPackingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.SKUSinPackingDataTable dataTable = new Embarques.SKUSinPackingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPL(Embarques.SKUSinPackingDataTable dataTable, int nid_opl) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nid_opl));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.SKUSinPackingDataTable GetDataByPL(int nid_opl) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nid_opl));
            Embarques.SKUSinPackingDataTable dataTable = new Embarques.SKUSinPackingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLSinEscanearTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PLSinEscanearTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLSinEscanear";
            tableMapping.ColumnMappings.Add("ddate", "ddate");
            tableMapping.ColumnMappings.Add("nid_opl_in", "nid_opl_in");
            tableMapping.ColumnMappings.Add("bFile", "bFile");
            tableMapping.ColumnMappings.Add("nid_opl", "nid_opl");
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [origin_packing_list] WHERE (([nid_opl] = @Original_nid_opl) AND ([ddate] = @Original_ddate) AND ((@IsNull_nid_opl_in = 1 AND [nid_opl_in] IS NULL) OR ([nid_opl_in] = @Original_nid_opl_in)) AND ((@IsNull_bFile = 1 AND [bFile] IS NULL) OR ([bFile] = @Original_bFile)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_opl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ddate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nid_opl_in", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl_in", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_opl_in", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl_in", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bFile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bFile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bFile", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bFile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [origin_packing_list] ([ddate], [nid_opl_in], [bFile]) VALUES (@ddate, @nid_opl_in, @bFile);
SELECT origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile FROM sku_arrivals INNER JOIN packing_list_breakdown ON sku_arrivals.nid_sku = packing_list_breakdown.nid_sku INNER JOIN origin_packing_list ON packing_list_breakdown.nid_opl = origin_packing_list.nid_opl WHERE (packing_list_breakdown.nid_opl = SCOPE_IDENTITY()) AND (sku_arrivals.nid_sku = @nid_sku) GROUP BY origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_opl_in", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl_in", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bFile", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bFile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [origin_packing_list] SET [ddate] = @ddate, [nid_opl_in] = @nid_opl_in, [bFile] = @bFile WHERE (([nid_opl] = @Original_nid_opl) AND ([ddate] = @Original_ddate) AND ((@IsNull_nid_opl_in = 1 AND [nid_opl_in] IS NULL) OR ([nid_opl_in] = @Original_nid_opl_in)) AND ((@IsNull_bFile = 1 AND [bFile] IS NULL) OR ([bFile] = @Original_bFile)));
SELECT origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile FROM sku_arrivals INNER JOIN packing_list_breakdown ON sku_arrivals.nid_sku = packing_list_breakdown.nid_sku INNER JOIN origin_packing_list ON packing_list_breakdown.nid_opl = origin_packing_list.nid_opl WHERE (packing_list_breakdown.nid_opl = @nid_opl) AND (sku_arrivals.nid_sku = @nid_sku) GROUP BY origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_opl_in", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl_in", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bFile", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bFile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_opl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ddate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nid_opl_in", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl_in", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_opl_in", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl_in", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bFile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bFile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bFile", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bFile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_opl", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_opl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile, packing_list_breakdown.nid_sku
FROM         sku_arrivals INNER JOIN
                      packing_list_breakdown ON sku_arrivals.nid_sku = packing_list_breakdown.nid_sku INNER JOIN
                      origin_packing_list ON packing_list_breakdown.nid_opl = origin_packing_list.nid_opl
WHERE     (sku_arrivals.IdCliente = 70) AND (origin_packing_list.bFile = 0) AND (sku_arrivals.bexists = 1)
GROUP BY origin_packing_list.nid_opl, origin_packing_list.ddate, origin_packing_list.nid_opl_in, origin_packing_list.bFile, packing_list_breakdown.nid_sku";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.PLSinEscanearDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.PLSinEscanearDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.PLSinEscanearDataTable dataTable = new Embarques.PLSinEscanearDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques.PLSinEscanearDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques dataSet) {
            return this.Adapter.Update(dataSet, "PLSinEscanear");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_nid_opl, System.DateTime Original_ddate, string Original_nid_opl_in, global::System.Nullable<bool> Original_bFile) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_nid_opl));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_ddate));
            if ((Original_nid_opl_in == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_nid_opl_in));
            }
            if ((Original_bFile.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_bFile.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime ddate, string nid_opl_in, global::System.Nullable<bool> bFile, string nid_sku) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(ddate));
            if ((nid_opl_in == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nid_opl_in));
            }
            if ((bFile.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(bFile.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(nid_sku));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime ddate, string nid_opl_in, global::System.Nullable<bool> bFile, int Original_nid_opl, System.DateTime Original_ddate, string Original_nid_opl_in, global::System.Nullable<bool> Original_bFile, int nid_opl, string nid_sku) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(ddate));
            if ((nid_opl_in == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nid_opl_in));
            }
            if ((bFile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(bFile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_nid_opl));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_ddate));
            if ((Original_nid_opl_in == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_nid_opl_in));
            }
            if ((Original_bFile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_bFile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(nid_opl));
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(nid_sku));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesPaltetasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesPaltetasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesPaltetas";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("FechaRecibo", "FechaRecibo");
            tableMapping.ColumnMappings.Add("NumeroPaleta", "NumeroPaleta");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("PesoBruto", "PesoBruto");
            tableMapping.ColumnMappings.Add("CantidadBultos", "CantidadBultos");
            tableMapping.ColumnMappings.Add("TipoEmbarque", "TipoEmbarque");
            tableMapping.ColumnMappings.Add("ContenidoTipoBulto", "ContenidoTipoBulto");
            tableMapping.ColumnMappings.Add("FechaEmbarque", "FechaEmbarque");
            tableMapping.ColumnMappings.Add("ConsecutivoEmbarque", "ConsecutivoEmbarque");
            tableMapping.ColumnMappings.Add("NombrePaleta", "NombrePaleta");
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            tableMapping.ColumnMappings.Add("Consecutivo", "Consecutivo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [MaterialesPaltetas] ([FechaRecibo], [NumeroPaleta], [Planta], [PesoBruto], [CantidadBultos], [TipoEmbarque], [ContenidoTipoBulto], [FechaEmbarque], [ConsecutivoEmbarque], [NombrePaleta], [nid_sku]) VALUES (@FechaRecibo, @NumeroPaleta, @Planta, @PesoBruto, @CantidadBultos, @TipoEmbarque, @ContenidoTipoBulto, @FechaEmbarque, @ConsecutivoEmbarque, @NombrePaleta, @nid_sku)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroPaleta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroPaleta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "PesoBruto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "CantidadBultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoEmbarque", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaEmbarque", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsecutivoEmbarque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsecutivoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombrePaleta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombrePaleta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Id, FechaRecibo, NumeroPaleta, Planta, PesoBruto, CantidadBultos, Tipo" +
                "Embarque, ContenidoTipoBulto, FechaEmbarque, ConsecutivoEmbarque, \r\n            " +
                "          NombrePaleta, nid_sku, Consecutivo\r\nFROM         MaterialesPaltetas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT DISTINCT 
                      MaterialesPaltetas.Id, MaterialesPaltetas.FechaRecibo, MaterialesPaltetas.NumeroPaleta, MaterialesPaltetas.Planta, MaterialesPaltetas.PesoBruto, 
                      MaterialesPaltetas.CantidadBultos, MaterialesPaltetas.TipoEmbarque, MaterialesPaltetas.ContenidoTipoBulto, MaterialesPaltetas.FechaEmbarque, 
                      MaterialesPaltetas.ConsecutivoEmbarque, MaterialesPaltetas.NombrePaleta, MaterialesPaltetas.nid_sku, deploys.bclosed, 
                      MaterialesPaltetas.Consecutivo
FROM         MaterialesEnviar INNER JOIN
                      MaterialesPaltetas ON MaterialesEnviar.MaterialesPaletasId = MaterialesPaltetas.Id INNER JOIN
                      deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy
WHERE     (MaterialesEnviar.Enviado = 0) AND (MaterialesEnviar.Preparado = 1) AND (deploys.bclosed = 1)
ORDER BY MaterialesPaltetas.Id DESC";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT DISTINCT 
                      MaterialesPaltetas.Id, MaterialesPaltetas.FechaRecibo, MaterialesPaltetas.NumeroPaleta, MaterialesPaltetas.Planta, MaterialesPaltetas.PesoBruto, 
                      MaterialesPaltetas.CantidadBultos, MaterialesPaltetas.TipoEmbarque, MaterialesPaltetas.ContenidoTipoBulto, MaterialesPaltetas.FechaEmbarque, 
                      MaterialesPaltetas.ConsecutivoEmbarque, MaterialesPaltetas.NombrePaleta, MaterialesPaltetas.nid_sku, deploys.bclosed, 
                      MaterialesPaltetas.Consecutivo
FROM         MaterialesEnviar INNER JOIN
                      MaterialesPaltetas ON MaterialesEnviar.MaterialesPaletasId = MaterialesPaltetas.Id INNER JOIN
                      deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy
WHERE     (MaterialesEnviar.Enviado = 0) AND (MaterialesEnviar.Preparado = 1) AND (deploys.bclosed = 0)
ORDER BY MaterialesPaltetas.Id DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.MaterialesPaltetasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.MaterialesPaltetasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.MaterialesPaltetasDataTable dataTable = new Embarques.MaterialesPaltetasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDespachados(Embarques.MaterialesPaltetasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.MaterialesPaltetasDataTable GetDataByDespachados() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            Embarques.MaterialesPaltetasDataTable dataTable = new Embarques.MaterialesPaltetasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNoEnviadas(Embarques.MaterialesPaltetasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.MaterialesPaltetasDataTable GetDataByNoenviadas() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            Embarques.MaterialesPaltetasDataTable dataTable = new Embarques.MaterialesPaltetasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques.MaterialesPaltetasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesPaltetas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime FechaRecibo, string NumeroPaleta, string Planta, global::System.Nullable<decimal> PesoBruto, global::System.Nullable<decimal> CantidadBultos, string TipoEmbarque, string ContenidoTipoBulto, global::System.Nullable<global::System.DateTime> FechaEmbarque, global::System.Nullable<int> ConsecutivoEmbarque, string NombrePaleta, string nid_sku) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(FechaRecibo));
            if ((NumeroPaleta == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NumeroPaleta));
            }
            if ((Planta == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Planta));
            }
            if ((PesoBruto.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PesoBruto.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CantidadBultos.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(CantidadBultos.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TipoEmbarque == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TipoEmbarque));
            }
            if ((ContenidoTipoBulto == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ContenidoTipoBulto));
            }
            if ((FechaEmbarque.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(FechaEmbarque.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ConsecutivoEmbarque.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ConsecutivoEmbarque.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NombrePaleta == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(NombrePaleta));
            }
            if ((nid_sku == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(nid_sku));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesEnviarTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesEnviarTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesEnviar";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("MaterialesPaletasId", "MaterialesPaletasId");
            tableMapping.ColumnMappings.Add("MaterialesOCId", "MaterialesOCId");
            tableMapping.ColumnMappings.Add("ClienteID", "ClienteID");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Preparado", "Preparado");
            tableMapping.ColumnMappings.Add("Enviado", "Enviado");
            tableMapping.ColumnMappings.Add("NoGuia", "NoGuia");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("Pais", "Pais");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("escaneado", "escaneado");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [materialesenviar] ([MaterialesPaletasId], [MaterialesOCId], [ClienteID], [RenglonId], [CantidadRecibida], [Fecha], [Preparado], [Enviado]) VALUES (@MaterialesPaletasId, @MaterialesOCId, @ClienteID, @RenglonId, @CantidadRecibida, @Fecha, @Preparado, @Enviado)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesPaletasId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesPaletasId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadRecibida", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "CantidadRecibida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Preparado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preparado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enviado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enviado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     MaterialesEnviar.Id, MaterialesEnviar.MaterialesPaletasId, MaterialesEnviar.MaterialesOCId, MaterialesEnviar.ClienteID, MaterialesEnviar.RenglonId, 
                      MaterialesEnviar.CantidadRecibida, MaterialesEnviar.Fecha, MaterialesEnviar.Preparado, MaterialesEnviar.Enviado, MaterialesEnviar.NoGuia, 
                      MaterialesEnviar.FacturaProveedor, MaterialesEnviar.NumeroParte, MaterialesEnviar.Pais, MaterialesEnviar.Moneda, 
                      ISNULL(sku_escanear.escaneado, 0) AS escaneado, MaterialesEnviar.UnidadMedida
FROM         MaterialesEnviar LEFT OUTER JOIN
                      sku_escanear ON MaterialesEnviar.NoGuia = sku_escanear.nid_sku
WHERE     (MaterialesEnviar.MaterialesPaletasId = @MaterialesPaletasId)
ORDER BY MaterialesEnviar.MaterialesOCId, MaterialesEnviar.RenglonId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesPaletasId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesPaletasId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.MaterialesEnviarDataTable dataTable, global::System.Nullable<int> MaterialesPaletasId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.MaterialesEnviarDataTable GetData(global::System.Nullable<int> MaterialesPaletasId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            Embarques.MaterialesEnviarDataTable dataTable = new Embarques.MaterialesEnviarDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques.MaterialesEnviarDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesEnviar");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> MaterialesPaletasId, int MaterialesOCId, int ClienteID, int RenglonId, decimal CantidadRecibida, System.DateTime Fecha, bool Preparado, bool Enviado) {
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MaterialesOCId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ClienteID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(RenglonId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(CantidadRecibida));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Fecha));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(Preparado));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(Enviado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GenerarTXTRehacerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GenerarTXTRehacerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GenerarTXTRehacer";
            tableMapping.ColumnMappings.Add("FechaRecibo", "FechaRecibo");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("Numero1", "Numero1");
            tableMapping.ColumnMappings.Add("Pais", "Pais");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("Numero2", "Numero2");
            tableMapping.ColumnMappings.Add("Bu1", "Bu1");
            tableMapping.ColumnMappings.Add("Bu2", "Bu2");
            tableMapping.ColumnMappings.Add("NoGuia", "NoGuia");
            tableMapping.ColumnMappings.Add("Tarima", "Tarima");
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("EmbarquePlanta", "EmbarquePlanta");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("Peso", "Peso");
            tableMapping.ColumnMappings.Add("NumeroPaleta", "NumeroPaleta");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ISNULL(sku_arrivals.dfecha_sku, ME.Fecha) AS FechaRecibo, ME.CantidadRecibida, '00000000.00000000' AS Numero1, '000000001' AS Numero2, 
                      'BU' AS Bu1, 'BU' AS Bu2, 'PL01' AS Tarima, ME.NoGuia, ME.FacturaProveedor, ME.Moneda, ME.Pais, ME.UnidadMedida, ME.ProveedorId, 
                      ME.NumeroParte, ME.RenglonId, ME.ProveedorId + '-' + ME.Planta AS EmbarquePlanta, ME.MaterialesOCId AS id, ISNULL(ME.Bultos, 0) AS bultos, 
                      0000000.0000000 AS Peso, MaterialesPaltetas.NumeroPaleta
FROM         MaterialesEnviar AS ME INNER JOIN
                      MaterialesPaltetas ON ME.MaterialesPaletasId = MaterialesPaltetas.Id LEFT OUTER JOIN
                      sku_arrivals ON ME.NoGuia = sku_arrivals.nid_sku
WHERE     (ME.Enviado = 0) AND (ME.MaterialesPaletasId = @MaterialesPaletasId) AND (ME.Planta = @Planta)
ORDER BY ME.Id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesPaletasId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesPaletasId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ISNULL(sku_arrivals.dfecha_sku, ME.Fecha) AS FechaRecibo, ME.CantidadR" +
                "ecibida, \'00000000.00000000\' AS Numero1, \'000000001\' AS Numero2, \r\n             " +
                "         \'BU\' AS Bu1, \'BU\' AS Bu2, MaterialesPaltetas.NumeroPaleta, \'PL01\' AS Ta" +
                "rima, ME.NoGuia, ME.FacturaProveedor, ME.Moneda, ME.Pais, \r\n                    " +
                "  ME.UnidadMedida, ME.ProveedorId, ME.NumeroParte, ME.RenglonId, CAST(Materiales" +
                "Paltetas.Consecutivo AS VARCHAR(10)) \r\n                      + \'-\' + MaterialesP" +
                "altetas.NombrePaleta AS EmbarquePlanta, ME.MaterialesOCId AS id, ISNULL(ME.Bulto" +
                "s, 0) AS bultos, \r\n                      MaterialesPaltetas.PesoBruto /\r\n       " +
                "                   (SELECT     COUNT(MaterialesEnviar.ProveedorId) AS Expr1\r\n   " +
                "                         FROM          MaterialesEnviar INNER JOIN\r\n            " +
                "                                       MaterialesPaltetas AS MP ON MaterialesEnv" +
                "iar.MaterialesPaletasId = MP.Id\r\n                            WHERE      (MP.Id =" +
                " MaterialesPaltetas.Id)) AS Peso\r\nFROM         MaterialesEnviar AS ME INNER JOIN" +
                "\r\n                      MaterialesPaltetas ON ME.MaterialesPaletasId = Materiale" +
                "sPaltetas.Id INNER JOIN\r\n                      deploys ON MaterialesPaltetas.Con" +
                "secutivoEmbarque = deploys.nid_deploy LEFT OUTER JOIN\r\n                      sku" +
                "_arrivals ON ME.NoGuia = sku_arrivals.nid_sku\r\nWHERE     (ME.ProveedorId = @Prov" +
                "eedorId) AND (MaterialesPaltetas.Consecutivo = @Consecutivo) AND \r\n             " +
                "         (MaterialesPaltetas.ConsecutivoEmbarque = @Embarque) AND (deploys.bclos" +
                "ed = 0)\r\nORDER BY ME.Id";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProveedorId", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Embarque", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ConsecutivoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.GenerarTXTRehacerDataTable dataTable, global::System.Nullable<int> MaterialesPaletasId, string Planta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Planta));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.GenerarTXTRehacerDataTable GetData(global::System.Nullable<int> MaterialesPaletasId, string Planta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Planta == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Planta));
            }
            Embarques.GenerarTXTRehacerDataTable dataTable = new Embarques.GenerarTXTRehacerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProveedor(Embarques.GenerarTXTRehacerDataTable dataTable, string ProveedorId, global::System.Nullable<int> Consecutivo, global::System.Nullable<int> Embarque) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ProveedorId == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ProveedorId));
            }
            if ((Consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Embarque.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Embarque.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.GenerarTXTRehacerDataTable GetDataByProveedor(string ProveedorId, global::System.Nullable<int> Consecutivo, global::System.Nullable<int> Embarque) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ProveedorId == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ProveedorId));
            }
            if ((Consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Embarque.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Embarque.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            Embarques.GenerarTXTRehacerDataTable dataTable = new Embarques.GenerarTXTRehacerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProveedoresTXTRehacerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProveedoresTXTRehacerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProveedoresTXTRehacer";
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ProveedorId\r\nFROM         MaterialesEnviar AS ME\r\nWHERE     (Enviado =" +
                " 0) AND (MaterialesPaletasId = @MaterialesPaletasId)\r\nGROUP BY ProveedorId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesPaletasId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesPaletasId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.ProveedoresTXTRehacerDataTable dataTable, global::System.Nullable<int> MaterialesPaletasId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.ProveedoresTXTRehacerDataTable GetData(global::System.Nullable<int> MaterialesPaletasId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MaterialesPaletasId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(MaterialesPaletasId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            Embarques.ProveedoresTXTRehacerDataTable dataTable = new Embarques.ProveedoresTXTRehacerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sku_escanearTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sku_escanearTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sku_escanear";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            tableMapping.ColumnMappings.Add("fecha", "fecha");
            tableMapping.ColumnMappings.Add("escaneado", "escaneado");
            tableMapping.ColumnMappings.Add("nid_cliente", "nid_cliente");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [sku_escanear] WHERE (([id] = @Original_id) AND ([nid_sku] = @Origina" +
                "l_nid_sku) AND ([fecha] = @Original_fecha) AND ([escaneado] = @Original_escanead" +
                "o) AND ([nid_cliente] = @Original_nid_cliente))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [sku_escanear] ([nid_sku], [fecha], [escaneado], [nid_cliente]) VALUE" +
                "S (@nid_sku, @fecha, @escaneado, @nid_cliente);\r\nSELECT id, nid_sku, fecha, esca" +
                "neado, nid_cliente FROM sku_escanear WHERE (id = SCOPE_IDENTITY()) ORDER BY fech" +
                "a DESC";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [sku_escanear] SET [nid_sku] = @nid_sku, [fecha] = @fecha, [escaneado] = @escaneado, [nid_cliente] = @nid_cliente WHERE (([id] = @Original_id) AND ([nid_sku] = @Original_nid_sku) AND ([fecha] = @Original_fecha) AND ([escaneado] = @Original_escaneado) AND ([nid_cliente] = @Original_nid_cliente));
SELECT id, nid_sku, fecha, escaneado, nid_cliente FROM sku_escanear WHERE (id = @id) ORDER BY fecha DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_escaneado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nid_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     id, nid_sku, fecha, escaneado, nid_cliente
FROM         sku_escanear
WHERE     (nid_cliente = @nid_cliente) AND (escaneado = @escaneado) AND (fecha BETWEEN DATEADD(MONTH, - 1, GETDATE()) AND DATEADD(day, 1, 
                      GETDATE()))
ORDER BY fecha DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_cliente", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "nid_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@escaneado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "escaneado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     id, nid_sku, fecha, escaneado, nid_cliente\r\nFROM         sku_escanear\r" +
                "\nWHERE     (nid_cliente = 70) AND (escaneado = 0) AND nid_sku = \'1Z2012092418213" +
                "425\'";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.sku_escanearDataTable dataTable, global::System.Nullable<int> nid_cliente, bool escaneado) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((nid_cliente.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nid_cliente.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(escaneado));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.sku_escanearDataTable GetData(global::System.Nullable<int> nid_cliente, bool escaneado) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((nid_cliente.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nid_cliente.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(escaneado));
            Embarques.sku_escanearDataTable dataTable = new Embarques.sku_escanearDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNid_sku(Embarques.sku_escanearDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Embarques.sku_escanearDataTable GetDataByNid_sku() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            Embarques.sku_escanearDataTable dataTable = new Embarques.sku_escanearDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques.sku_escanearDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques dataSet) {
            return this.Adapter.Update(dataSet, "sku_escanear");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_nid_sku, System.DateTime Original_fecha, bool Original_escaneado, int Original_nid_cliente) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_nid_sku == null)) {
                throw new global::System.ArgumentNullException("Original_nid_sku");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nid_sku));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_fecha));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_escaneado));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_nid_cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente) {
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nid_sku));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(fecha));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(escaneado));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(nid_cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente, int Original_id, string Original_nid_sku, System.DateTime Original_fecha, bool Original_escaneado, int Original_nid_cliente, int id) {
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nid_sku));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(fecha));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(escaneado));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(nid_cliente));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_nid_sku == null)) {
                throw new global::System.ArgumentNullException("Original_nid_sku");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_nid_sku));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_fecha));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Original_escaneado));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_nid_cliente));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nid_sku, System.DateTime fecha, bool escaneado, int nid_cliente, int Original_id, string Original_nid_sku, System.DateTime Original_fecha, bool Original_escaneado, int Original_nid_cliente) {
            return this.Update(nid_sku, fecha, escaneado, nid_cliente, Original_id, Original_nid_sku, Original_fecha, Original_escaneado, Original_nid_cliente, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesPaletasGuiasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesPaletasGuiasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesPaletasGuias";
            tableMapping.ColumnMappings.Add("IdPaleta", "IdPaleta");
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MaterialesPaletasGuias] ([IdPaleta], [nid_sku]) VALUES (@IdPaleta, @" +
                "nid_sku)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdPaleta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdPaleta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nid_sku", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nid_sku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM MaterialesPaletasGuias WHERE IdPaleta = @IdPaleta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdPaleta", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IdPaleta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByIdPaleta(Embarques.MaterialesPaletasGuiasDataTable dataTable, int IdPaleta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IdPaleta));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.MaterialesPaletasGuiasDataTable GetDataByIdPaleta(int IdPaleta) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IdPaleta));
            Embarques.MaterialesPaletasGuiasDataTable dataTable = new Embarques.MaterialesPaletasGuiasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques.MaterialesPaletasGuiasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Embarques dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesPaletasGuias");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IdPaleta, string nid_sku) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IdPaleta));
            if ((nid_sku == null)) {
                throw new global::System.ArgumentNullException("nid_sku");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nid_sku));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DetenerPartidaConTarimaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetenerPartidaConTarimaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DetenerPartidaConTarima";
            tableMapping.ColumnMappings.Add("MaterialesPaletasId", "MaterialesPaletasId");
            tableMapping.ColumnMappings.Add("NumeroPaleta", "NumeroPaleta");
            tableMapping.ColumnMappings.Add("NombrePaleta", "NombrePaleta");
            tableMapping.ColumnMappings.Add("MaterialesOCId", "MaterialesOCId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     MaterialesEnviar.MaterialesPaletasId, MaterialesPaltetas.NumeroPaleta, MaterialesPaltetas.NombrePaleta, MaterialesEnviar.MaterialesOCId, 
                      MaterialesEnviar.RenglonId, MaterialesEnviar.CantidadRecibida, MaterialesEnviar.Planta, MaterialesEnviar.Id, 
                      MaterialesEnviar.FacturaProveedor
FROM         MaterialesPaltetas INNER JOIN
                      deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy INNER JOIN
                      MaterialesEnviar ON MaterialesPaltetas.Id = MaterialesEnviar.MaterialesPaletasId
WHERE     (deploys.bclosed = 0) AND (MaterialesEnviar.NoGuia = @Guia)
ORDER BY MaterialesEnviar.MaterialesPaletasId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"UPDATE    MaterialesEnviar
SET              MaterialesPaletasId = NULL, Planta = @planta, Preparado = 0
WHERE     (Id IN
                          (SELECT     MaterialesEnviar_1.Id
                            FROM          MaterialesPaltetas INNER JOIN
                                                   deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy INNER JOIN
                                                   MaterialesEnviar AS MaterialesEnviar_1 ON MaterialesPaltetas.Id = MaterialesEnviar_1.MaterialesPaletasId
                            WHERE      (deploys.bclosed = 0) AND (MaterialesEnviar_1.NoGuia = @Guia)))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByGuia(Embarques.DetenerPartidaConTarimaDataTable dataTable, string Guia) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Guia == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Guia));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.DetenerPartidaConTarimaDataTable GetDataByGuia(string Guia) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Guia == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Guia));
            }
            Embarques.DetenerPartidaConTarimaDataTable dataTable = new Embarques.DetenerPartidaConTarimaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateConTarima(string planta, string Guia) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((planta == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(planta));
            }
            if ((Guia == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Guia));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DetenerPartidaSinEnviarTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetenerPartidaSinEnviarTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DetenerPartidaSinEnviar";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("MaterialesOCId", "MaterialesOCId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Id, MaterialesOCId, RenglonId, CantidadRecibida, Planta, FacturaProvee" +
                "dor, NumeroParte\r\nFROM         MaterialesEnviar\r\nWHERE     (NoGuia = @Guia) AND " +
                "(MaterialesPaletasId IS NULL) AND (Preparado = 0) AND (Planta NOT LIKE \'DD%\')";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"UPDATE    MaterialesEnviar
SET              MaterialesPaletasId = NULL, Planta = @planta
WHERE     (Id IN
                          (SELECT     Id
                            FROM          MaterialesEnviar AS MaterialesEnviar_1
                            WHERE      (NoGuia = @Guia) AND (MaterialesPaletasId IS NULL) AND (Preparado = 0) AND (MaterialesEnviar.Planta NOT LIKE 'DD%')))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByGuia(Embarques.DetenerPartidaSinEnviarDataTable dataTable, string Guia) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Guia == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Guia));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.DetenerPartidaSinEnviarDataTable GetDataByGuia(string Guia) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Guia == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Guia));
            }
            Embarques.DetenerPartidaSinEnviarDataTable dataTable = new Embarques.DetenerPartidaSinEnviarDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateSinEnviar(string planta, string Guia) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((planta == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(planta));
            }
            if ((Guia == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Guia));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ConsecutivoEmbarqueTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConsecutivoEmbarqueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ConsecutivoEmbarque";
            tableMapping.ColumnMappings.Add("Embarque", "Embarque");
            tableMapping.ColumnMappings.Add("Consecutivo", "Consecutivo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     MaterialesPaltetas.ConsecutivoEmbarque AS Embarque, MaterialesPaltetas.Consecutivo
FROM         MaterialesEnviar INNER JOIN
                      MaterialesPaltetas ON MaterialesEnviar.MaterialesPaletasId = MaterialesPaltetas.Id INNER JOIN
                      deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy
WHERE     (deploys.bclosed = 0) AND (MaterialesPaltetas.Planta NOT LIKE 'IB%')
GROUP BY MaterialesPaltetas.ConsecutivoEmbarque, MaterialesPaltetas.Consecutivo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.ConsecutivoEmbarqueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.ConsecutivoEmbarqueDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.ConsecutivoEmbarqueDataTable dataTable = new Embarques.ConsecutivoEmbarqueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProveedoresConsecutivoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProveedoresConsecutivoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProveedoresConsecutivo";
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            tableMapping.ColumnMappings.Add("Consecutivo", "Consecutivo");
            tableMapping.ColumnMappings.Add("ConsecutivoEmbarque", "ConsecutivoEmbarque");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     MaterialesEnviar.ProveedorId, MaterialesPaltetas.Consecutivo, MaterialesPaltetas.ConsecutivoEmbarque
FROM         MaterialesEnviar INNER JOIN
                      MaterialesPaltetas ON MaterialesEnviar.MaterialesPaletasId = MaterialesPaltetas.Id INNER JOIN
                      deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy
WHERE     (deploys.bclosed = 0) AND (MaterialesPaltetas.ConsecutivoEmbarque = @Embarque) AND (MaterialesPaltetas.Consecutivo = @Consecutivo) AND 
                      (MaterialesPaltetas.Planta NOT LIKE 'IB%')
GROUP BY MaterialesEnviar.ProveedorId, MaterialesPaltetas.Consecutivo, MaterialesPaltetas.ConsecutivoEmbarque";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Embarque", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ConsecutivoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillbyConsecutivo(Embarques.ProveedoresConsecutivoDataTable dataTable, global::System.Nullable<int> Embarque, global::System.Nullable<int> Consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Embarque.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Embarque.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.ProveedoresConsecutivoDataTable GetDatabyConsecutivo(global::System.Nullable<int> Embarque, global::System.Nullable<int> Consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Embarque.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Embarque.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            Embarques.ProveedoresConsecutivoDataTable dataTable = new Embarques.ProveedoresConsecutivoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DatosComplementariosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DatosComplementariosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DatosComplementarios";
            tableMapping.ColumnMappings.Add("nombre", "nombre");
            tableMapping.ColumnMappings.Add("cbox_number", "cbox_number");
            tableMapping.ColumnMappings.Add("bultos", "bultos");
            tableMapping.ColumnMappings.Add("pesobruto", "pesobruto");
            tableMapping.ColumnMappings.Add("nid_deploy", "nid_deploy");
            tableMapping.ColumnMappings.Add("Tarimas", "Tarimas");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     carriers.nombre, carriers_deploys.cbox_number, SUM(ISNULL(MaterialesEnviar.Bultos, 0)) AS bultos, SUM(MaterialesPaltetas.PesoBruto) 
                      AS pesobruto, carriers_deploys.nid_deploy, COUNT(MaterialesPaltetas.Id) AS Tarimas
FROM         MaterialesPaltetas INNER JOIN
                      deploys ON MaterialesPaltetas.ConsecutivoEmbarque = deploys.nid_deploy INNER JOIN
                      carriers_deploys ON deploys.nid_deploy = carriers_deploys.nid_deploy INNER JOIN
                      carriers ON carriers_deploys.cve_transp = carriers.cve_transp INNER JOIN
                      MaterialesEnviar ON MaterialesPaltetas.Id = MaterialesEnviar.MaterialesPaletasId
WHERE     (deploys.bclosed = 0)
GROUP BY carriers.nombre, carriers_deploys.cbox_number, carriers_deploys.nid_deploy";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.DatosComplementariosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.DatosComplementariosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Embarques.DatosComplementariosDataTable dataTable = new Embarques.DatosComplementariosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PartidasDespachadasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PartidasDespachadasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PartidasDespachadas";
            tableMapping.ColumnMappings.Add("Fechallegada", "Fechallegada");
            tableMapping.ColumnMappings.Add("ConsecutivoEmbarque", "ConsecutivoEmbarque");
            tableMapping.ColumnMappings.Add("Consecutivo", "Consecutivo");
            tableMapping.ColumnMappings.Add("NombrePaleta", "NombrePaleta");
            tableMapping.ColumnMappings.Add("NumeroPaleta", "NumeroPaleta");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("PesoBruto", "PesoBruto");
            tableMapping.ColumnMappings.Add("CantidadBultos", "CantidadBultos");
            tableMapping.ColumnMappings.Add("nid_sku", "nid_sku");
            tableMapping.ColumnMappings.Add("dEndSelection", "dEndSelection");
            tableMapping.ColumnMappings.Add("MaterialesOCId", "MaterialesOCId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("ProveedorId", "ProveedorId");
            tableMapping.ColumnMappings.Add("NombreProveedor", "NombreProveedor");
            tableMapping.ColumnMappings.Add("Comentario", "Comentario");
            tableMapping.ColumnMappings.Add("cbox_number", "cbox_number");
            tableMapping.ColumnMappings.Add("cve_transp", "cve_transp");
            tableMapping.ColumnMappings.Add("escaneado", "escaneado");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     MaterialesEnviar.Fecha AS Fechallegada, MaterialesPaltetas.Consecutivo" +
                "Embarque, MaterialesPaltetas.Consecutivo, \r\n                      MaterialesPalt" +
                "etas.NombrePaleta, MaterialesPaltetas.NumeroPaleta, MaterialesPaltetas.Planta, M" +
                "aterialesPaltetas.PesoBruto, \r\n                      MaterialesPaltetas.Cantidad" +
                "Bultos, MaterialesPaltetas.nid_sku, deploys.dEndSelection, MaterialesEnviar.Mate" +
                "rialesOCId, \r\n                      MaterialesEnviar.RenglonId, MaterialesEnviar" +
                ".FacturaProveedor, MaterialesEnviar.NumeroParte, MaterialesEnviar.Descripcion, \r" +
                "\n                      MaterialesEnviar.ProveedorId, MaterialesEnviar.NombreProv" +
                "eedor, MaterialesEnviar.Comentario, carriers_deploys.cbox_number, \r\n            " +
                "          carriers_deploys.cve_transp, sku_escanear.escaneado\r\nFROM         Mate" +
                "rialesPaltetas INNER JOIN\r\n                      deploys ON MaterialesPaltetas.C" +
                "onsecutivoEmbarque = deploys.nid_deploy INNER JOIN\r\n                      Materi" +
                "alesEnviar ON MaterialesPaltetas.Id = MaterialesEnviar.MaterialesPaletasId INNER" +
                " JOIN\r\n                      carriers_deploys ON deploys.nid_deploy = carriers_d" +
                "eploys.nid_deploy LEFT OUTER JOIN\r\n                      sku_escanear ON Materia" +
                "lesEnviar.NoGuia = sku_escanear.nid_sku\r\nWHERE     (MaterialesEnviar.NoGuia LIKE" +
                " @noGuia) AND (MaterialesEnviar.MaterialesOCId LIKE @PO) AND (MaterialesEnviar.R" +
                "englonId LIKE @Linea) AND \r\n                      (carriers_deploys.cbox_number " +
                "LIKE @Caja) AND (MaterialesEnviar.NumeroParte LIKE @NumParte) AND (MaterialesEnv" +
                "iar.Fecha BETWEEN \r\n                      DATEADD(MONTH, - 1, GETDATE()) AND DAT" +
                "EADD(day, 1, GETDATE())) AND (MaterialesPaltetas.ConsecutivoEmbarque LIKE @Embar" +
                "que) AND \r\n                      (MaterialesPaltetas.Consecutivo LIKE @Consecuti" +
                "vo)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Linea", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Caja", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "cbox_number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Embarque", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "ConsecutivoEmbarque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consecutivo", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Embarques.PartidasDespachadasDataTable dataTable, string noGuia, string PO, string Linea, string Caja, string NumParte, string Embarque, string Consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((noGuia == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(noGuia));
            }
            if ((PO == null)) {
                throw new global::System.ArgumentNullException("PO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PO));
            }
            if ((Linea == null)) {
                throw new global::System.ArgumentNullException("Linea");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Linea));
            }
            if ((Caja == null)) {
                throw new global::System.ArgumentNullException("Caja");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Caja));
            }
            if ((NumParte == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(NumParte));
            }
            if ((Embarque == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Embarque));
            }
            if ((Consecutivo == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Consecutivo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Embarques.PartidasDespachadasDataTable GetData(string noGuia, string PO, string Linea, string Caja, string NumParte, string Embarque, string Consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((noGuia == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(noGuia));
            }
            if ((PO == null)) {
                throw new global::System.ArgumentNullException("PO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PO));
            }
            if ((Linea == null)) {
                throw new global::System.ArgumentNullException("Linea");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Linea));
            }
            if ((Caja == null)) {
                throw new global::System.ArgumentNullException("Caja");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Caja));
            }
            if ((NumParte == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(NumParte));
            }
            if ((Embarque == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Embarque));
            }
            if ((Consecutivo == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Consecutivo));
            }
            Embarques.PartidasDespachadasDataTable dataTable = new Embarques.PartidasDespachadasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591