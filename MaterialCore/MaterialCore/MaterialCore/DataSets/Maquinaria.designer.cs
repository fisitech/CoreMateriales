//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MaterialCore.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Maquinaria")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Maquinaria : global::System.Data.DataSet {
        
        private MaterialesMaquinariaDataTable tableMaterialesMaquinaria;
        
        private GenerarTXTDataTable tableGenerarTXT;
        
        private MaterialesOCMeQDataTable tableMaterialesOCMeQ;
        
        private ProveedoresTXTDataTable tableProveedoresTXT;
        
        private MaterialesShippingDataTable tableMaterialesShipping;
        
        private MaterialesDanadoDataTable tableMaterialesDanado;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Maquinaria() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Maquinaria(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MaterialesMaquinaria"] != null)) {
                    base.Tables.Add(new MaterialesMaquinariaDataTable(ds.Tables["MaterialesMaquinaria"]));
                }
                if ((ds.Tables["GenerarTXT"] != null)) {
                    base.Tables.Add(new GenerarTXTDataTable(ds.Tables["GenerarTXT"]));
                }
                if ((ds.Tables["MaterialesOCMeQ"] != null)) {
                    base.Tables.Add(new MaterialesOCMeQDataTable(ds.Tables["MaterialesOCMeQ"]));
                }
                if ((ds.Tables["ProveedoresTXT"] != null)) {
                    base.Tables.Add(new ProveedoresTXTDataTable(ds.Tables["ProveedoresTXT"]));
                }
                if ((ds.Tables["MaterialesShipping"] != null)) {
                    base.Tables.Add(new MaterialesShippingDataTable(ds.Tables["MaterialesShipping"]));
                }
                if ((ds.Tables["MaterialesDanado"] != null)) {
                    base.Tables.Add(new MaterialesDanadoDataTable(ds.Tables["MaterialesDanado"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesMaquinariaDataTable MaterialesMaquinaria {
            get {
                return this.tableMaterialesMaquinaria;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GenerarTXTDataTable GenerarTXT {
            get {
                return this.tableGenerarTXT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesOCMeQDataTable MaterialesOCMeQ {
            get {
                return this.tableMaterialesOCMeQ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProveedoresTXTDataTable ProveedoresTXT {
            get {
                return this.tableProveedoresTXT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesShippingDataTable MaterialesShipping {
            get {
                return this.tableMaterialesShipping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesDanadoDataTable MaterialesDanado {
            get {
                return this.tableMaterialesDanado;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Maquinaria cln = ((Maquinaria)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MaterialesMaquinaria"] != null)) {
                    base.Tables.Add(new MaterialesMaquinariaDataTable(ds.Tables["MaterialesMaquinaria"]));
                }
                if ((ds.Tables["GenerarTXT"] != null)) {
                    base.Tables.Add(new GenerarTXTDataTable(ds.Tables["GenerarTXT"]));
                }
                if ((ds.Tables["MaterialesOCMeQ"] != null)) {
                    base.Tables.Add(new MaterialesOCMeQDataTable(ds.Tables["MaterialesOCMeQ"]));
                }
                if ((ds.Tables["ProveedoresTXT"] != null)) {
                    base.Tables.Add(new ProveedoresTXTDataTable(ds.Tables["ProveedoresTXT"]));
                }
                if ((ds.Tables["MaterialesShipping"] != null)) {
                    base.Tables.Add(new MaterialesShippingDataTable(ds.Tables["MaterialesShipping"]));
                }
                if ((ds.Tables["MaterialesDanado"] != null)) {
                    base.Tables.Add(new MaterialesDanadoDataTable(ds.Tables["MaterialesDanado"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMaterialesMaquinaria = ((MaterialesMaquinariaDataTable)(base.Tables["MaterialesMaquinaria"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesMaquinaria != null)) {
                    this.tableMaterialesMaquinaria.InitVars();
                }
            }
            this.tableGenerarTXT = ((GenerarTXTDataTable)(base.Tables["GenerarTXT"]));
            if ((initTable == true)) {
                if ((this.tableGenerarTXT != null)) {
                    this.tableGenerarTXT.InitVars();
                }
            }
            this.tableMaterialesOCMeQ = ((MaterialesOCMeQDataTable)(base.Tables["MaterialesOCMeQ"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesOCMeQ != null)) {
                    this.tableMaterialesOCMeQ.InitVars();
                }
            }
            this.tableProveedoresTXT = ((ProveedoresTXTDataTable)(base.Tables["ProveedoresTXT"]));
            if ((initTable == true)) {
                if ((this.tableProveedoresTXT != null)) {
                    this.tableProveedoresTXT.InitVars();
                }
            }
            this.tableMaterialesShipping = ((MaterialesShippingDataTable)(base.Tables["MaterialesShipping"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesShipping != null)) {
                    this.tableMaterialesShipping.InitVars();
                }
            }
            this.tableMaterialesDanado = ((MaterialesDanadoDataTable)(base.Tables["MaterialesDanado"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesDanado != null)) {
                    this.tableMaterialesDanado.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Maquinaria";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Maquinaria.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMaterialesMaquinaria = new MaterialesMaquinariaDataTable();
            base.Tables.Add(this.tableMaterialesMaquinaria);
            this.tableGenerarTXT = new GenerarTXTDataTable();
            base.Tables.Add(this.tableGenerarTXT);
            this.tableMaterialesOCMeQ = new MaterialesOCMeQDataTable();
            base.Tables.Add(this.tableMaterialesOCMeQ);
            this.tableProveedoresTXT = new ProveedoresTXTDataTable();
            base.Tables.Add(this.tableProveedoresTXT);
            this.tableMaterialesShipping = new MaterialesShippingDataTable();
            base.Tables.Add(this.tableMaterialesShipping);
            this.tableMaterialesDanado = new MaterialesDanadoDataTable();
            base.Tables.Add(this.tableMaterialesDanado);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesMaquinaria() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGenerarTXT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesOCMeQ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProveedoresTXT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesShipping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesDanado() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Maquinaria ds = new Maquinaria();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MaterialesMaquinariaRowChangeEventHandler(object sender, MaterialesMaquinariaRowChangeEvent e);
        
        public delegate void GenerarTXTRowChangeEventHandler(object sender, GenerarTXTRowChangeEvent e);
        
        public delegate void MaterialesOCMeQRowChangeEventHandler(object sender, MaterialesOCMeQRowChangeEvent e);
        
        public delegate void ProveedoresTXTRowChangeEventHandler(object sender, ProveedoresTXTRowChangeEvent e);
        
        public delegate void MaterialesShippingRowChangeEventHandler(object sender, MaterialesShippingRowChangeEvent e);
        
        public delegate void MaterialesDanadoRowChangeEventHandler(object sender, MaterialesDanadoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesMaquinariaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMaterialesOCId;
            
            private global::System.Data.DataColumn columnClienteId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnCantidadPiezas;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnPesoNeto;
            
            private global::System.Data.DataColumn columnPesoBruto;
            
            private global::System.Data.DataColumn columnPaisOrigen;
            
            private global::System.Data.DataColumn columnCantidadBultos;
            
            private global::System.Data.DataColumn columnTipoBulto;
            
            private global::System.Data.DataColumn columnContenidoTipoBulto;
            
            private global::System.Data.DataColumn columnNumeroGuia;
            
            private global::System.Data.DataColumn columnMarca;
            
            private global::System.Data.DataColumn columnModelo;
            
            private global::System.Data.DataColumn columnSerie;
            
            private global::System.Data.DataColumn columnenviado;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnProveedor;
            
            private global::System.Data.DataColumn columnTransportista;
            
            private global::System.Data.DataColumn columnFechaRecibo;
            
            private global::System.Data.DataColumn columnComentarios;
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnIdentificador;
            
            private global::System.Data.DataColumn columnPreparado;
            
            private global::System.Data.DataColumn columnConsecutivo;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnFechaCaptura;
            
            private global::System.Data.DataColumn columnPqOrd;
            
            private global::System.Data.DataColumn columnPqRec;
            
            private global::System.Data.DataColumn columnNombreProveedor;
            
            private global::System.Data.DataColumn columnidPadre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaDataTable() {
                this.TableName = "MaterialesMaquinaria";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesMaquinariaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesMaquinariaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesOCIdColumn {
                get {
                    return this.columnMaterialesOCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIdColumn {
                get {
                    return this.columnClienteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadPiezasColumn {
                get {
                    return this.columnCantidadPiezas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoNetoColumn {
                get {
                    return this.columnPesoNeto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoBrutoColumn {
                get {
                    return this.columnPesoBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisOrigenColumn {
                get {
                    return this.columnPaisOrigen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadBultosColumn {
                get {
                    return this.columnCantidadBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoBultoColumn {
                get {
                    return this.columnTipoBulto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContenidoTipoBultoColumn {
                get {
                    return this.columnContenidoTipoBulto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroGuiaColumn {
                get {
                    return this.columnNumeroGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarcaColumn {
                get {
                    return this.columnMarca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModeloColumn {
                get {
                    return this.columnModelo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerieColumn {
                get {
                    return this.columnSerie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enviadoColumn {
                get {
                    return this.columnenviado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorColumn {
                get {
                    return this.columnProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportistaColumn {
                get {
                    return this.columnTransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaReciboColumn {
                get {
                    return this.columnFechaRecibo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentariosColumn {
                get {
                    return this.columnComentarios;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdentificadorColumn {
                get {
                    return this.columnIdentificador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreparadoColumn {
                get {
                    return this.columnPreparado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoColumn {
                get {
                    return this.columnConsecutivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaCapturaColumn {
                get {
                    return this.columnFechaCaptura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PqOrdColumn {
                get {
                    return this.columnPqOrd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PqRecColumn {
                get {
                    return this.columnPqRec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreProveedorColumn {
                get {
                    return this.columnNombreProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idPadreColumn {
                get {
                    return this.columnidPadre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaRow this[int index] {
                get {
                    return ((MaterialesMaquinariaRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesMaquinariaRowChangeEventHandler MaterialesMaquinariaRowChanging;
            
            public event MaterialesMaquinariaRowChangeEventHandler MaterialesMaquinariaRowChanged;
            
            public event MaterialesMaquinariaRowChangeEventHandler MaterialesMaquinariaRowDeleting;
            
            public event MaterialesMaquinariaRowChangeEventHandler MaterialesMaquinariaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesMaquinariaRow(MaterialesMaquinariaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaRow AddMaterialesMaquinariaRow(
                        int MaterialesOCId, 
                        int ClienteId, 
                        int RenglonId, 
                        string NumeroParte, 
                        decimal CantidadPiezas, 
                        string UnidadMedida, 
                        decimal PesoNeto, 
                        decimal PesoBruto, 
                        string PaisOrigen, 
                        decimal CantidadBultos, 
                        string TipoBulto, 
                        string ContenidoTipoBulto, 
                        string NumeroGuia, 
                        string Marca, 
                        string Modelo, 
                        string Serie, 
                        bool enviado, 
                        string Descripcion, 
                        string Proveedor, 
                        string Transportista, 
                        System.DateTime FechaRecibo, 
                        string Comentarios, 
                        decimal CantidadRecibida, 
                        string Moneda, 
                        int Identificador, 
                        bool Preparado, 
                        int Consecutivo, 
                        string FacturaProveedor, 
                        System.DateTime FechaCaptura, 
                        decimal PqOrd, 
                        decimal PqRec, 
                        string NombreProveedor, 
                        int idPadre) {
                MaterialesMaquinariaRow rowMaterialesMaquinariaRow = ((MaterialesMaquinariaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialesOCId,
                        ClienteId,
                        RenglonId,
                        NumeroParte,
                        CantidadPiezas,
                        UnidadMedida,
                        PesoNeto,
                        PesoBruto,
                        PaisOrigen,
                        CantidadBultos,
                        TipoBulto,
                        ContenidoTipoBulto,
                        NumeroGuia,
                        Marca,
                        Modelo,
                        Serie,
                        enviado,
                        Descripcion,
                        Proveedor,
                        Transportista,
                        FechaRecibo,
                        Comentarios,
                        null,
                        CantidadRecibida,
                        Moneda,
                        Identificador,
                        Preparado,
                        Consecutivo,
                        FacturaProveedor,
                        FechaCaptura,
                        PqOrd,
                        PqRec,
                        NombreProveedor,
                        idPadre};
                rowMaterialesMaquinariaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesMaquinariaRow);
                return rowMaterialesMaquinariaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaRow FindById(int Id) {
                return ((MaterialesMaquinariaRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesMaquinariaDataTable cln = ((MaterialesMaquinariaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesMaquinariaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialesOCId = base.Columns["MaterialesOCId"];
                this.columnClienteId = base.Columns["ClienteId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnCantidadPiezas = base.Columns["CantidadPiezas"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnPesoNeto = base.Columns["PesoNeto"];
                this.columnPesoBruto = base.Columns["PesoBruto"];
                this.columnPaisOrigen = base.Columns["PaisOrigen"];
                this.columnCantidadBultos = base.Columns["CantidadBultos"];
                this.columnTipoBulto = base.Columns["TipoBulto"];
                this.columnContenidoTipoBulto = base.Columns["ContenidoTipoBulto"];
                this.columnNumeroGuia = base.Columns["NumeroGuia"];
                this.columnMarca = base.Columns["Marca"];
                this.columnModelo = base.Columns["Modelo"];
                this.columnSerie = base.Columns["Serie"];
                this.columnenviado = base.Columns["enviado"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnProveedor = base.Columns["Proveedor"];
                this.columnTransportista = base.Columns["Transportista"];
                this.columnFechaRecibo = base.Columns["FechaRecibo"];
                this.columnComentarios = base.Columns["Comentarios"];
                this.columnId = base.Columns["Id"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnIdentificador = base.Columns["Identificador"];
                this.columnPreparado = base.Columns["Preparado"];
                this.columnConsecutivo = base.Columns["Consecutivo"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnFechaCaptura = base.Columns["FechaCaptura"];
                this.columnPqOrd = base.Columns["PqOrd"];
                this.columnPqRec = base.Columns["PqRec"];
                this.columnNombreProveedor = base.Columns["NombreProveedor"];
                this.columnidPadre = base.Columns["idPadre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialesOCId = new global::System.Data.DataColumn("MaterialesOCId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesOCId);
                this.columnClienteId = new global::System.Data.DataColumn("ClienteId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnCantidadPiezas = new global::System.Data.DataColumn("CantidadPiezas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadPiezas);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnPesoNeto = new global::System.Data.DataColumn("PesoNeto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoNeto);
                this.columnPesoBruto = new global::System.Data.DataColumn("PesoBruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoBruto);
                this.columnPaisOrigen = new global::System.Data.DataColumn("PaisOrigen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaisOrigen);
                this.columnCantidadBultos = new global::System.Data.DataColumn("CantidadBultos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadBultos);
                this.columnTipoBulto = new global::System.Data.DataColumn("TipoBulto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoBulto);
                this.columnContenidoTipoBulto = new global::System.Data.DataColumn("ContenidoTipoBulto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContenidoTipoBulto);
                this.columnNumeroGuia = new global::System.Data.DataColumn("NumeroGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroGuia);
                this.columnMarca = new global::System.Data.DataColumn("Marca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarca);
                this.columnModelo = new global::System.Data.DataColumn("Modelo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelo);
                this.columnSerie = new global::System.Data.DataColumn("Serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerie);
                this.columnenviado = new global::System.Data.DataColumn("enviado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviado);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnProveedor = new global::System.Data.DataColumn("Proveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedor);
                this.columnTransportista = new global::System.Data.DataColumn("Transportista", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportista);
                this.columnFechaRecibo = new global::System.Data.DataColumn("FechaRecibo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRecibo);
                this.columnComentarios = new global::System.Data.DataColumn("Comentarios", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentarios);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnIdentificador = new global::System.Data.DataColumn("Identificador", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentificador);
                this.columnPreparado = new global::System.Data.DataColumn("Preparado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreparado);
                this.columnConsecutivo = new global::System.Data.DataColumn("Consecutivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivo);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnFechaCaptura = new global::System.Data.DataColumn("FechaCaptura", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaCaptura);
                this.columnPqOrd = new global::System.Data.DataColumn("PqOrd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPqOrd);
                this.columnPqRec = new global::System.Data.DataColumn("PqRec", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPqRec);
                this.columnNombreProveedor = new global::System.Data.DataColumn("NombreProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreProveedor);
                this.columnidPadre = new global::System.Data.DataColumn("idPadre", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidPadre);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnClienteId.AllowDBNull = false;
                this.columnNumeroParte.MaxLength = 50;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnPaisOrigen.MaxLength = 10;
                this.columnTipoBulto.MaxLength = 10;
                this.columnContenidoTipoBulto.MaxLength = 10;
                this.columnNumeroGuia.MaxLength = 75;
                this.columnMarca.MaxLength = 95;
                this.columnModelo.MaxLength = 65;
                this.columnSerie.MaxLength = 50;
                this.columnenviado.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 200;
                this.columnProveedor.MaxLength = 50;
                this.columnTransportista.MaxLength = 50;
                this.columnComentarios.MaxLength = 200;
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnMoneda.MaxLength = 10;
                this.columnFacturaProveedor.MaxLength = 50;
                this.columnNombreProveedor.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaRow NewMaterialesMaquinariaRow() {
                return ((MaterialesMaquinariaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesMaquinariaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesMaquinariaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesMaquinariaRowChanged != null)) {
                    this.MaterialesMaquinariaRowChanged(this, new MaterialesMaquinariaRowChangeEvent(((MaterialesMaquinariaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesMaquinariaRowChanging != null)) {
                    this.MaterialesMaquinariaRowChanging(this, new MaterialesMaquinariaRowChangeEvent(((MaterialesMaquinariaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesMaquinariaRowDeleted != null)) {
                    this.MaterialesMaquinariaRowDeleted(this, new MaterialesMaquinariaRowChangeEvent(((MaterialesMaquinariaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesMaquinariaRowDeleting != null)) {
                    this.MaterialesMaquinariaRowDeleting(this, new MaterialesMaquinariaRowChangeEvent(((MaterialesMaquinariaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesMaquinariaRow(MaterialesMaquinariaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Maquinaria ds = new Maquinaria();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesMaquinariaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GenerarTXTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnProveedor;
            
            private global::System.Data.DataColumn columnLineaPO;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnPesoBruto;
            
            private global::System.Data.DataColumn columnPesoNeto;
            
            private global::System.Data.DataColumn columnPaisOrigen;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnCantidadBultos;
            
            private global::System.Data.DataColumn columnTipoBulto;
            
            private global::System.Data.DataColumn columnContenidoTipoBulto;
            
            private global::System.Data.DataColumn columnTransportista;
            
            private global::System.Data.DataColumn columnMarca;
            
            private global::System.Data.DataColumn columnModelo;
            
            private global::System.Data.DataColumn columnSerie;
            
            private global::System.Data.DataColumn columnFacturaImportacion;
            
            private global::System.Data.DataColumn columnhijo;
            
            private global::System.Data.DataColumn columnNumeroGuia;
            
            private global::System.Data.DataColumn columnnumPO;
            
            private global::System.Data.DataColumn columnsalvacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTDataTable() {
                this.TableName = "GenerarTXT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GenerarTXTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GenerarTXTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorColumn {
                get {
                    return this.columnProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineaPOColumn {
                get {
                    return this.columnLineaPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoBrutoColumn {
                get {
                    return this.columnPesoBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoNetoColumn {
                get {
                    return this.columnPesoNeto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisOrigenColumn {
                get {
                    return this.columnPaisOrigen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadBultosColumn {
                get {
                    return this.columnCantidadBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoBultoColumn {
                get {
                    return this.columnTipoBulto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContenidoTipoBultoColumn {
                get {
                    return this.columnContenidoTipoBulto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportistaColumn {
                get {
                    return this.columnTransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarcaColumn {
                get {
                    return this.columnMarca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModeloColumn {
                get {
                    return this.columnModelo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerieColumn {
                get {
                    return this.columnSerie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaImportacionColumn {
                get {
                    return this.columnFacturaImportacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hijoColumn {
                get {
                    return this.columnhijo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroGuiaColumn {
                get {
                    return this.columnNumeroGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numPOColumn {
                get {
                    return this.columnnumPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salvacionColumn {
                get {
                    return this.columnsalvacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow this[int index] {
                get {
                    return ((GenerarTXTRow)(this.Rows[index]));
                }
            }
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowChanging;
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowChanged;
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowDeleting;
            
            public event GenerarTXTRowChangeEventHandler GenerarTXTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGenerarTXTRow(GenerarTXTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow AddGenerarTXTRow(
                        System.DateTime Fecha, 
                        string Proveedor, 
                        int LineaPO, 
                        string NumeroParte, 
                        decimal CantidadRecibida, 
                        string UnidadMedida, 
                        decimal PesoBruto, 
                        decimal PesoNeto, 
                        string PaisOrigen, 
                        string Moneda, 
                        decimal CantidadBultos, 
                        string TipoBulto, 
                        string ContenidoTipoBulto, 
                        string Transportista, 
                        string Marca, 
                        string Modelo, 
                        string Serie, 
                        string FacturaImportacion, 
                        int hijo, 
                        string NumeroGuia, 
                        int numPO, 
                        string salvacion) {
                GenerarTXTRow rowGenerarTXTRow = ((GenerarTXTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fecha,
                        Proveedor,
                        LineaPO,
                        NumeroParte,
                        CantidadRecibida,
                        UnidadMedida,
                        PesoBruto,
                        PesoNeto,
                        PaisOrigen,
                        Moneda,
                        CantidadBultos,
                        TipoBulto,
                        ContenidoTipoBulto,
                        Transportista,
                        Marca,
                        Modelo,
                        Serie,
                        FacturaImportacion,
                        hijo,
                        NumeroGuia,
                        numPO,
                        salvacion};
                rowGenerarTXTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGenerarTXTRow);
                return rowGenerarTXTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow FindById(int Id) {
                return ((GenerarTXTRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GenerarTXTDataTable cln = ((GenerarTXTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GenerarTXTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnProveedor = base.Columns["Proveedor"];
                this.columnLineaPO = base.Columns["LineaPO"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnPesoBruto = base.Columns["PesoBruto"];
                this.columnPesoNeto = base.Columns["PesoNeto"];
                this.columnPaisOrigen = base.Columns["PaisOrigen"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnCantidadBultos = base.Columns["CantidadBultos"];
                this.columnTipoBulto = base.Columns["TipoBulto"];
                this.columnContenidoTipoBulto = base.Columns["ContenidoTipoBulto"];
                this.columnTransportista = base.Columns["Transportista"];
                this.columnMarca = base.Columns["Marca"];
                this.columnModelo = base.Columns["Modelo"];
                this.columnSerie = base.Columns["Serie"];
                this.columnFacturaImportacion = base.Columns["FacturaImportacion"];
                this.columnhijo = base.Columns["hijo"];
                this.columnNumeroGuia = base.Columns["NumeroGuia"];
                this.columnnumPO = base.Columns["numPO"];
                this.columnsalvacion = base.Columns["salvacion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnProveedor = new global::System.Data.DataColumn("Proveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedor);
                this.columnLineaPO = new global::System.Data.DataColumn("LineaPO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineaPO);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnPesoBruto = new global::System.Data.DataColumn("PesoBruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoBruto);
                this.columnPesoNeto = new global::System.Data.DataColumn("PesoNeto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoNeto);
                this.columnPaisOrigen = new global::System.Data.DataColumn("PaisOrigen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaisOrigen);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnCantidadBultos = new global::System.Data.DataColumn("CantidadBultos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadBultos);
                this.columnTipoBulto = new global::System.Data.DataColumn("TipoBulto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoBulto);
                this.columnContenidoTipoBulto = new global::System.Data.DataColumn("ContenidoTipoBulto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContenidoTipoBulto);
                this.columnTransportista = new global::System.Data.DataColumn("Transportista", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportista);
                this.columnMarca = new global::System.Data.DataColumn("Marca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarca);
                this.columnModelo = new global::System.Data.DataColumn("Modelo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelo);
                this.columnSerie = new global::System.Data.DataColumn("Serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerie);
                this.columnFacturaImportacion = new global::System.Data.DataColumn("FacturaImportacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaImportacion);
                this.columnhijo = new global::System.Data.DataColumn("hijo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhijo);
                this.columnNumeroGuia = new global::System.Data.DataColumn("NumeroGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroGuia);
                this.columnnumPO = new global::System.Data.DataColumn("numPO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumPO);
                this.columnsalvacion = new global::System.Data.DataColumn("salvacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalvacion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnFecha.ReadOnly = true;
                this.columnProveedor.MaxLength = 50;
                this.columnNumeroParte.MaxLength = 50;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnPaisOrigen.MaxLength = 10;
                this.columnMoneda.MaxLength = 10;
                this.columnTipoBulto.MaxLength = 10;
                this.columnContenidoTipoBulto.MaxLength = 10;
                this.columnTransportista.MaxLength = 50;
                this.columnMarca.MaxLength = 95;
                this.columnModelo.MaxLength = 65;
                this.columnSerie.MaxLength = 50;
                this.columnFacturaImportacion.MaxLength = 50;
                this.columnNumeroGuia.ReadOnly = true;
                this.columnNumeroGuia.MaxLength = 75;
                this.columnnumPO.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow NewGenerarTXTRow() {
                return ((GenerarTXTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GenerarTXTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GenerarTXTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GenerarTXTRowChanged != null)) {
                    this.GenerarTXTRowChanged(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GenerarTXTRowChanging != null)) {
                    this.GenerarTXTRowChanging(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GenerarTXTRowDeleted != null)) {
                    this.GenerarTXTRowDeleted(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GenerarTXTRowDeleting != null)) {
                    this.GenerarTXTRowDeleting(this, new GenerarTXTRowChangeEvent(((GenerarTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGenerarTXTRow(GenerarTXTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Maquinaria ds = new Maquinaria();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GenerarTXTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesOCMeQDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnClienteId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnCantidadAbierta;
            
            private global::System.Data.DataColumn columnPqOrd;
            
            private global::System.Data.DataColumn columnPqRec;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnProveedorID;
            
            private global::System.Data.DataColumn columnNombreProveedor;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnBultos;
            
            private global::System.Data.DataColumn columnNoGuia;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnMaterialesMaquinariaID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCMeQDataTable() {
                this.TableName = "MaterialesOCMeQ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesOCMeQDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesOCMeQDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIdColumn {
                get {
                    return this.columnClienteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadAbiertaColumn {
                get {
                    return this.columnCantidadAbierta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PqOrdColumn {
                get {
                    return this.columnPqOrd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PqRecColumn {
                get {
                    return this.columnPqRec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIDColumn {
                get {
                    return this.columnProveedorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreProveedorColumn {
                get {
                    return this.columnNombreProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BultosColumn {
                get {
                    return this.columnBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGuiaColumn {
                get {
                    return this.columnNoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialesMaquinariaIDColumn {
                get {
                    return this.columnMaterialesMaquinariaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCMeQRow this[int index] {
                get {
                    return ((MaterialesOCMeQRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesOCMeQRowChangeEventHandler MaterialesOCMeQRowChanging;
            
            public event MaterialesOCMeQRowChangeEventHandler MaterialesOCMeQRowChanged;
            
            public event MaterialesOCMeQRowChangeEventHandler MaterialesOCMeQRowDeleting;
            
            public event MaterialesOCMeQRowChangeEventHandler MaterialesOCMeQRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesOCMeQRow(MaterialesOCMeQRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCMeQRow AddMaterialesOCMeQRow(
                        int Id, 
                        int ClienteId, 
                        int RenglonId, 
                        string NumeroParte, 
                        string Descripcion, 
                        decimal CantidadAbierta, 
                        decimal PqOrd, 
                        decimal PqRec, 
                        decimal Precio, 
                        string ProveedorID, 
                        string NombreProveedor, 
                        decimal CantidadRecibida, 
                        string UnidadMedida, 
                        string FacturaProveedor, 
                        int Bultos, 
                        string NoGuia, 
                        string Moneda, 
                        string Planta) {
                MaterialesOCMeQRow rowMaterialesOCMeQRow = ((MaterialesOCMeQRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        ClienteId,
                        RenglonId,
                        NumeroParte,
                        Descripcion,
                        CantidadAbierta,
                        PqOrd,
                        PqRec,
                        Precio,
                        ProveedorID,
                        NombreProveedor,
                        CantidadRecibida,
                        UnidadMedida,
                        FacturaProveedor,
                        Bultos,
                        NoGuia,
                        Moneda,
                        Planta,
                        null};
                rowMaterialesOCMeQRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesOCMeQRow);
                return rowMaterialesOCMeQRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesOCMeQDataTable cln = ((MaterialesOCMeQDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesOCMeQDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnClienteId = base.Columns["ClienteId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnCantidadAbierta = base.Columns["CantidadAbierta"];
                this.columnPqOrd = base.Columns["PqOrd"];
                this.columnPqRec = base.Columns["PqRec"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnProveedorID = base.Columns["ProveedorID"];
                this.columnNombreProveedor = base.Columns["NombreProveedor"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnBultos = base.Columns["Bultos"];
                this.columnNoGuia = base.Columns["NoGuia"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnMaterialesMaquinariaID = base.Columns["MaterialesMaquinariaID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnClienteId = new global::System.Data.DataColumn("ClienteId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnCantidadAbierta = new global::System.Data.DataColumn("CantidadAbierta", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadAbierta);
                this.columnPqOrd = new global::System.Data.DataColumn("PqOrd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPqOrd);
                this.columnPqRec = new global::System.Data.DataColumn("PqRec", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPqRec);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnProveedorID = new global::System.Data.DataColumn("ProveedorID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorID);
                this.columnNombreProveedor = new global::System.Data.DataColumn("NombreProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreProveedor);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnBultos = new global::System.Data.DataColumn("Bultos", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBultos);
                this.columnNoGuia = new global::System.Data.DataColumn("NoGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGuia);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnMaterialesMaquinariaID = new global::System.Data.DataColumn("MaterialesMaquinariaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialesMaquinariaID);
                this.columnId.AllowDBNull = false;
                this.columnClienteId.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnNumeroParte.MaxLength = 50;
                this.columnDescripcion.MaxLength = 200;
                this.columnCantidadAbierta.ReadOnly = true;
                this.columnProveedorID.MaxLength = 150;
                this.columnNombreProveedor.MaxLength = 250;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnFacturaProveedor.MaxLength = 45;
                this.columnNoGuia.MaxLength = 75;
                this.columnMoneda.MaxLength = 10;
                this.columnPlanta.MaxLength = 10;
                this.columnMaterialesMaquinariaID.AutoIncrement = true;
                this.columnMaterialesMaquinariaID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCMeQRow NewMaterialesOCMeQRow() {
                return ((MaterialesOCMeQRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesOCMeQRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesOCMeQRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesOCMeQRowChanged != null)) {
                    this.MaterialesOCMeQRowChanged(this, new MaterialesOCMeQRowChangeEvent(((MaterialesOCMeQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesOCMeQRowChanging != null)) {
                    this.MaterialesOCMeQRowChanging(this, new MaterialesOCMeQRowChangeEvent(((MaterialesOCMeQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesOCMeQRowDeleted != null)) {
                    this.MaterialesOCMeQRowDeleted(this, new MaterialesOCMeQRowChangeEvent(((MaterialesOCMeQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesOCMeQRowDeleting != null)) {
                    this.MaterialesOCMeQRowDeleting(this, new MaterialesOCMeQRowChangeEvent(((MaterialesOCMeQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesOCMeQRow(MaterialesOCMeQRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Maquinaria ds = new Maquinaria();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesOCMeQDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProveedoresTXTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProveedor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTDataTable() {
                this.TableName = "ProveedoresTXT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresTXTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProveedoresTXTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorColumn {
                get {
                    return this.columnProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow this[int index] {
                get {
                    return ((ProveedoresTXTRow)(this.Rows[index]));
                }
            }
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowChanging;
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowChanged;
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowDeleting;
            
            public event ProveedoresTXTRowChangeEventHandler ProveedoresTXTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProveedoresTXTRow(ProveedoresTXTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow AddProveedoresTXTRow(string Proveedor) {
                ProveedoresTXTRow rowProveedoresTXTRow = ((ProveedoresTXTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Proveedor};
                rowProveedoresTXTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProveedoresTXTRow);
                return rowProveedoresTXTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProveedoresTXTDataTable cln = ((ProveedoresTXTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProveedoresTXTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProveedor = base.Columns["Proveedor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProveedor = new global::System.Data.DataColumn("Proveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedor);
                this.columnProveedor.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow NewProveedoresTXTRow() {
                return ((ProveedoresTXTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProveedoresTXTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProveedoresTXTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProveedoresTXTRowChanged != null)) {
                    this.ProveedoresTXTRowChanged(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProveedoresTXTRowChanging != null)) {
                    this.ProveedoresTXTRowChanging(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProveedoresTXTRowDeleted != null)) {
                    this.ProveedoresTXTRowDeleted(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProveedoresTXTRowDeleting != null)) {
                    this.ProveedoresTXTRowDeleting(this, new ProveedoresTXTRowChangeEvent(((ProveedoresTXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProveedoresTXTRow(ProveedoresTXTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Maquinaria ds = new Maquinaria();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProveedoresTXTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesShippingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnPackSum;
            
            private global::System.Data.DataColumn columnfechaRBI;
            
            private global::System.Data.DataColumn columnTransportista;
            
            private global::System.Data.DataColumn columnDomestic;
            
            private global::System.Data.DataColumn columnfechaLlegada;
            
            private global::System.Data.DataColumn columnfechaDespacho;
            
            private global::System.Data.DataColumn columnnoGuia;
            
            private global::System.Data.DataColumn columnComentarios;
            
            private global::System.Data.DataColumn columnfechaCapura;
            
            private global::System.Data.DataColumn columnConsignee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesShippingDataTable() {
                this.TableName = "MaterialesShipping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesShippingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesShippingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackSumColumn {
                get {
                    return this.columnPackSum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaRBIColumn {
                get {
                    return this.columnfechaRBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportistaColumn {
                get {
                    return this.columnTransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomesticColumn {
                get {
                    return this.columnDomestic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaLlegadaColumn {
                get {
                    return this.columnfechaLlegada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaDespachoColumn {
                get {
                    return this.columnfechaDespacho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noGuiaColumn {
                get {
                    return this.columnnoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentariosColumn {
                get {
                    return this.columnComentarios;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaCapuraColumn {
                get {
                    return this.columnfechaCapura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeColumn {
                get {
                    return this.columnConsignee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesShippingRow this[int index] {
                get {
                    return ((MaterialesShippingRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesShippingRowChangeEventHandler MaterialesShippingRowChanging;
            
            public event MaterialesShippingRowChangeEventHandler MaterialesShippingRowChanged;
            
            public event MaterialesShippingRowChangeEventHandler MaterialesShippingRowDeleting;
            
            public event MaterialesShippingRowChangeEventHandler MaterialesShippingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesShippingRow(MaterialesShippingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesShippingRow AddMaterialesShippingRow(string PackSum, System.DateTime fechaRBI, string Transportista, string Domestic, System.DateTime fechaLlegada, System.DateTime fechaDespacho, string noGuia, string Comentarios, System.DateTime fechaCapura, string Consignee) {
                MaterialesShippingRow rowMaterialesShippingRow = ((MaterialesShippingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PackSum,
                        fechaRBI,
                        Transportista,
                        Domestic,
                        fechaLlegada,
                        fechaDespacho,
                        noGuia,
                        Comentarios,
                        fechaCapura,
                        Consignee};
                rowMaterialesShippingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesShippingRow);
                return rowMaterialesShippingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesShippingDataTable cln = ((MaterialesShippingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesShippingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnPackSum = base.Columns["PackSum"];
                this.columnfechaRBI = base.Columns["fechaRBI"];
                this.columnTransportista = base.Columns["Transportista"];
                this.columnDomestic = base.Columns["Domestic"];
                this.columnfechaLlegada = base.Columns["fechaLlegada"];
                this.columnfechaDespacho = base.Columns["fechaDespacho"];
                this.columnnoGuia = base.Columns["noGuia"];
                this.columnComentarios = base.Columns["Comentarios"];
                this.columnfechaCapura = base.Columns["fechaCapura"];
                this.columnConsignee = base.Columns["Consignee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnPackSum = new global::System.Data.DataColumn("PackSum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackSum);
                this.columnfechaRBI = new global::System.Data.DataColumn("fechaRBI", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaRBI);
                this.columnTransportista = new global::System.Data.DataColumn("Transportista", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportista);
                this.columnDomestic = new global::System.Data.DataColumn("Domestic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomestic);
                this.columnfechaLlegada = new global::System.Data.DataColumn("fechaLlegada", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaLlegada);
                this.columnfechaDespacho = new global::System.Data.DataColumn("fechaDespacho", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaDespacho);
                this.columnnoGuia = new global::System.Data.DataColumn("noGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoGuia);
                this.columnComentarios = new global::System.Data.DataColumn("Comentarios", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentarios);
                this.columnfechaCapura = new global::System.Data.DataColumn("fechaCapura", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaCapura);
                this.columnConsignee = new global::System.Data.DataColumn("Consignee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsignee);
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnPackSum.MaxLength = 50;
                this.columnTransportista.MaxLength = 50;
                this.columnDomestic.MaxLength = 50;
                this.columnnoGuia.MaxLength = 75;
                this.columnComentarios.MaxLength = 250;
                this.columnConsignee.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesShippingRow NewMaterialesShippingRow() {
                return ((MaterialesShippingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesShippingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesShippingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesShippingRowChanged != null)) {
                    this.MaterialesShippingRowChanged(this, new MaterialesShippingRowChangeEvent(((MaterialesShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesShippingRowChanging != null)) {
                    this.MaterialesShippingRowChanging(this, new MaterialesShippingRowChangeEvent(((MaterialesShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesShippingRowDeleted != null)) {
                    this.MaterialesShippingRowDeleted(this, new MaterialesShippingRowChangeEvent(((MaterialesShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesShippingRowDeleting != null)) {
                    this.MaterialesShippingRowDeleting(this, new MaterialesShippingRowChangeEvent(((MaterialesShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesShippingRow(MaterialesShippingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Maquinaria ds = new Maquinaria();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesShippingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesDanadoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnnoGuia;
            
            private global::System.Data.DataColumn columnComentario;
            
            private global::System.Data.DataColumn columndirPDF;
            
            private global::System.Data.DataColumn columnfechaCaptura;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoDataTable() {
                this.TableName = "MaterialesDanado";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesDanadoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesDanadoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noGuiaColumn {
                get {
                    return this.columnnoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentarioColumn {
                get {
                    return this.columnComentario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dirPDFColumn {
                get {
                    return this.columndirPDF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaCapturaColumn {
                get {
                    return this.columnfechaCaptura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoRow this[int index] {
                get {
                    return ((MaterialesDanadoRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesDanadoRowChangeEventHandler MaterialesDanadoRowChanging;
            
            public event MaterialesDanadoRowChangeEventHandler MaterialesDanadoRowChanged;
            
            public event MaterialesDanadoRowChangeEventHandler MaterialesDanadoRowDeleting;
            
            public event MaterialesDanadoRowChangeEventHandler MaterialesDanadoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesDanadoRow(MaterialesDanadoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoRow AddMaterialesDanadoRow(string noGuia, string Comentario, string dirPDF, System.DateTime fechaCaptura) {
                MaterialesDanadoRow rowMaterialesDanadoRow = ((MaterialesDanadoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        noGuia,
                        Comentario,
                        dirPDF,
                        fechaCaptura};
                rowMaterialesDanadoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesDanadoRow);
                return rowMaterialesDanadoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoRow FindByid(int id) {
                return ((MaterialesDanadoRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesDanadoDataTable cln = ((MaterialesDanadoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesDanadoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnnoGuia = base.Columns["noGuia"];
                this.columnComentario = base.Columns["Comentario"];
                this.columndirPDF = base.Columns["dirPDF"];
                this.columnfechaCaptura = base.Columns["fechaCaptura"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnoGuia = new global::System.Data.DataColumn("noGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoGuia);
                this.columnComentario = new global::System.Data.DataColumn("Comentario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentario);
                this.columndirPDF = new global::System.Data.DataColumn("dirPDF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndirPDF);
                this.columnfechaCaptura = new global::System.Data.DataColumn("fechaCaptura", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaCaptura);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnnoGuia.MaxLength = 75;
                this.columnComentario.MaxLength = 250;
                this.columndirPDF.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoRow NewMaterialesDanadoRow() {
                return ((MaterialesDanadoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesDanadoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesDanadoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesDanadoRowChanged != null)) {
                    this.MaterialesDanadoRowChanged(this, new MaterialesDanadoRowChangeEvent(((MaterialesDanadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesDanadoRowChanging != null)) {
                    this.MaterialesDanadoRowChanging(this, new MaterialesDanadoRowChangeEvent(((MaterialesDanadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesDanadoRowDeleted != null)) {
                    this.MaterialesDanadoRowDeleted(this, new MaterialesDanadoRowChangeEvent(((MaterialesDanadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesDanadoRowDeleting != null)) {
                    this.MaterialesDanadoRowDeleting(this, new MaterialesDanadoRowChangeEvent(((MaterialesDanadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesDanadoRow(MaterialesDanadoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Maquinaria ds = new Maquinaria();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesDanadoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesMaquinariaRow : global::System.Data.DataRow {
            
            private MaterialesMaquinariaDataTable tableMaterialesMaquinaria;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesMaquinariaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesMaquinaria = ((MaterialesMaquinariaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesOCId {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesMaquinaria.MaterialesOCIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialesOCId\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.MaterialesOCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteId {
                get {
                    return ((int)(this[this.tableMaterialesMaquinaria.ClienteIdColumn]));
                }
                set {
                    this[this.tableMaterialesMaquinaria.ClienteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesMaquinaria.RenglonIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenglonId\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadPiezas {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.CantidadPiezasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadPiezas\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.CantidadPiezasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PesoNeto {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.PesoNetoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoNeto\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.PesoNetoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PesoBruto {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.PesoBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoBruto\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.PesoBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaisOrigen {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.PaisOrigenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaisOrigen\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.PaisOrigenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadBultos {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.CantidadBultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadBultos\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.CantidadBultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoBulto {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.TipoBultoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoBulto\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.TipoBultoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContenidoTipoBulto {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.ContenidoTipoBultoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContenidoTipoBulto\' in table \'MaterialesMaquinaria\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.ContenidoTipoBultoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.NumeroGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroGuia\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.NumeroGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Marca {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.MarcaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marca\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.MarcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modelo {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.ModeloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modelo\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.ModeloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Serie {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.SerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serie\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.SerieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool enviado {
                get {
                    return ((bool)(this[this.tableMaterialesMaquinaria.enviadoColumn]));
                }
                set {
                    this[this.tableMaterialesMaquinaria.enviadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Proveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.ProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Proveedor\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.ProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transportista {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.TransportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transportista\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.TransportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRecibo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesMaquinaria.FechaReciboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaRecibo\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.FechaReciboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentarios {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.ComentariosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentarios\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.ComentariosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableMaterialesMaquinaria.IdColumn]));
                }
                set {
                    this[this.tableMaterialesMaquinaria.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.CantidadRecibidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadRecibida\' in table \'MaterialesMaquinaria\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Identificador {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesMaquinaria.IdentificadorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Identificador\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.IdentificadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Preparado {
                get {
                    try {
                        return ((bool)(this[this.tableMaterialesMaquinaria.PreparadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Preparado\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.PreparadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Consecutivo {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesMaquinaria.ConsecutivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consecutivo\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.ConsecutivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'MaterialesMaquinaria\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaCaptura {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesMaquinaria.FechaCapturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaCaptura\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.FechaCapturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PqOrd {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.PqOrdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PqOrd\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.PqOrdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PqRec {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesMaquinaria.PqRecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PqRec\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.PqRecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesMaquinaria.NombreProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreProveedor\' in table \'MaterialesMaquinaria\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.NombreProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idPadre {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesMaquinaria.idPadreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idPadre\' in table \'MaterialesMaquinaria\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesMaquinaria.idPadreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialesOCIdNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.MaterialesOCIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialesOCIdNull() {
                this[this.tableMaterialesMaquinaria.MaterialesOCIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRenglonIdNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.RenglonIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRenglonIdNull() {
                this[this.tableMaterialesMaquinaria.RenglonIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableMaterialesMaquinaria.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadPiezasNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.CantidadPiezasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadPiezasNull() {
                this[this.tableMaterialesMaquinaria.CantidadPiezasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableMaterialesMaquinaria.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoNetoNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.PesoNetoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoNetoNull() {
                this[this.tableMaterialesMaquinaria.PesoNetoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoBrutoNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.PesoBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoBrutoNull() {
                this[this.tableMaterialesMaquinaria.PesoBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisOrigenNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.PaisOrigenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisOrigenNull() {
                this[this.tableMaterialesMaquinaria.PaisOrigenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadBultosNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.CantidadBultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadBultosNull() {
                this[this.tableMaterialesMaquinaria.CantidadBultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoBultoNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.TipoBultoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoBultoNull() {
                this[this.tableMaterialesMaquinaria.TipoBultoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContenidoTipoBultoNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.ContenidoTipoBultoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContenidoTipoBultoNull() {
                this[this.tableMaterialesMaquinaria.ContenidoTipoBultoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroGuiaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.NumeroGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroGuiaNull() {
                this[this.tableMaterialesMaquinaria.NumeroGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarcaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.MarcaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarcaNull() {
                this[this.tableMaterialesMaquinaria.MarcaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModeloNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.ModeloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModeloNull() {
                this[this.tableMaterialesMaquinaria.ModeloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerieNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.SerieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerieNull() {
                this[this.tableMaterialesMaquinaria.SerieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableMaterialesMaquinaria.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.ProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorNull() {
                this[this.tableMaterialesMaquinaria.ProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransportistaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.TransportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransportistaNull() {
                this[this.tableMaterialesMaquinaria.TransportistaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaReciboNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.FechaReciboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaReciboNull() {
                this[this.tableMaterialesMaquinaria.FechaReciboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentariosNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.ComentariosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentariosNull() {
                this[this.tableMaterialesMaquinaria.ComentariosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadRecibidaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.CantidadRecibidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadRecibidaNull() {
                this[this.tableMaterialesMaquinaria.CantidadRecibidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableMaterialesMaquinaria.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdentificadorNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.IdentificadorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdentificadorNull() {
                this[this.tableMaterialesMaquinaria.IdentificadorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreparadoNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.PreparadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreparadoNull() {
                this[this.tableMaterialesMaquinaria.PreparadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.ConsecutivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoNull() {
                this[this.tableMaterialesMaquinaria.ConsecutivoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableMaterialesMaquinaria.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaCapturaNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.FechaCapturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaCapturaNull() {
                this[this.tableMaterialesMaquinaria.FechaCapturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPqOrdNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.PqOrdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPqOrdNull() {
                this[this.tableMaterialesMaquinaria.PqOrdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPqRecNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.PqRecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPqRecNull() {
                this[this.tableMaterialesMaquinaria.PqRecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreProveedorNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.NombreProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreProveedorNull() {
                this[this.tableMaterialesMaquinaria.NombreProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidPadreNull() {
                return this.IsNull(this.tableMaterialesMaquinaria.idPadreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidPadreNull() {
                this[this.tableMaterialesMaquinaria.idPadreColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GenerarTXTRow : global::System.Data.DataRow {
            
            private GenerarTXTDataTable tableGenerarTXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GenerarTXTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGenerarTXT = ((GenerarTXTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableGenerarTXT.IdColumn]));
                }
                set {
                    this[this.tableGenerarTXT.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGenerarTXT.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Proveedor {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.ProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Proveedor\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.ProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LineaPO {
                get {
                    try {
                        return ((int)(this[this.tableGenerarTXT.LineaPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineaPO\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.LineaPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    try {
                        return ((decimal)(this[this.tableGenerarTXT.CantidadRecibidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadRecibida\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PesoBruto {
                get {
                    try {
                        return ((decimal)(this[this.tableGenerarTXT.PesoBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoBruto\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.PesoBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PesoNeto {
                get {
                    try {
                        return ((decimal)(this[this.tableGenerarTXT.PesoNetoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoNeto\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.PesoNetoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaisOrigen {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.PaisOrigenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaisOrigen\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.PaisOrigenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadBultos {
                get {
                    try {
                        return ((decimal)(this[this.tableGenerarTXT.CantidadBultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadBultos\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.CantidadBultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoBulto {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.TipoBultoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoBulto\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.TipoBultoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContenidoTipoBulto {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.ContenidoTipoBultoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContenidoTipoBulto\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.ContenidoTipoBultoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transportista {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.TransportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transportista\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.TransportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Marca {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.MarcaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marca\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.MarcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modelo {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.ModeloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modelo\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.ModeloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Serie {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.SerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serie\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.SerieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaImportacion {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.FacturaImportacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaImportacion\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.FacturaImportacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int hijo {
                get {
                    try {
                        return ((int)(this[this.tableGenerarTXT.hijoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hijo\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.hijoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroGuia {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.NumeroGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroGuia\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.NumeroGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numPO {
                get {
                    try {
                        return ((int)(this[this.tableGenerarTXT.numPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numPO\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.numPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salvacion {
                get {
                    try {
                        return ((string)(this[this.tableGenerarTXT.salvacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salvacion\' in table \'GenerarTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGenerarTXT.salvacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tableGenerarTXT.FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tableGenerarTXT.FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorNull() {
                return this.IsNull(this.tableGenerarTXT.ProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorNull() {
                this[this.tableGenerarTXT.ProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineaPONull() {
                return this.IsNull(this.tableGenerarTXT.LineaPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineaPONull() {
                this[this.tableGenerarTXT.LineaPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableGenerarTXT.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableGenerarTXT.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadRecibidaNull() {
                return this.IsNull(this.tableGenerarTXT.CantidadRecibidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadRecibidaNull() {
                this[this.tableGenerarTXT.CantidadRecibidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableGenerarTXT.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableGenerarTXT.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoBrutoNull() {
                return this.IsNull(this.tableGenerarTXT.PesoBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoBrutoNull() {
                this[this.tableGenerarTXT.PesoBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoNetoNull() {
                return this.IsNull(this.tableGenerarTXT.PesoNetoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoNetoNull() {
                this[this.tableGenerarTXT.PesoNetoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisOrigenNull() {
                return this.IsNull(this.tableGenerarTXT.PaisOrigenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisOrigenNull() {
                this[this.tableGenerarTXT.PaisOrigenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableGenerarTXT.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableGenerarTXT.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadBultosNull() {
                return this.IsNull(this.tableGenerarTXT.CantidadBultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadBultosNull() {
                this[this.tableGenerarTXT.CantidadBultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoBultoNull() {
                return this.IsNull(this.tableGenerarTXT.TipoBultoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoBultoNull() {
                this[this.tableGenerarTXT.TipoBultoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContenidoTipoBultoNull() {
                return this.IsNull(this.tableGenerarTXT.ContenidoTipoBultoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContenidoTipoBultoNull() {
                this[this.tableGenerarTXT.ContenidoTipoBultoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransportistaNull() {
                return this.IsNull(this.tableGenerarTXT.TransportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransportistaNull() {
                this[this.tableGenerarTXT.TransportistaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarcaNull() {
                return this.IsNull(this.tableGenerarTXT.MarcaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarcaNull() {
                this[this.tableGenerarTXT.MarcaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModeloNull() {
                return this.IsNull(this.tableGenerarTXT.ModeloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModeloNull() {
                this[this.tableGenerarTXT.ModeloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerieNull() {
                return this.IsNull(this.tableGenerarTXT.SerieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerieNull() {
                this[this.tableGenerarTXT.SerieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaImportacionNull() {
                return this.IsNull(this.tableGenerarTXT.FacturaImportacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaImportacionNull() {
                this[this.tableGenerarTXT.FacturaImportacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshijoNull() {
                return this.IsNull(this.tableGenerarTXT.hijoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethijoNull() {
                this[this.tableGenerarTXT.hijoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroGuiaNull() {
                return this.IsNull(this.tableGenerarTXT.NumeroGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroGuiaNull() {
                this[this.tableGenerarTXT.NumeroGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumPONull() {
                return this.IsNull(this.tableGenerarTXT.numPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumPONull() {
                this[this.tableGenerarTXT.numPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalvacionNull() {
                return this.IsNull(this.tableGenerarTXT.salvacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalvacionNull() {
                this[this.tableGenerarTXT.salvacionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesOCMeQRow : global::System.Data.DataRow {
            
            private MaterialesOCMeQDataTable tableMaterialesOCMeQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesOCMeQRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesOCMeQ = ((MaterialesOCMeQDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableMaterialesOCMeQ.IdColumn]));
                }
                set {
                    this[this.tableMaterialesOCMeQ.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteId {
                get {
                    return ((int)(this[this.tableMaterialesOCMeQ.ClienteIdColumn]));
                }
                set {
                    this[this.tableMaterialesOCMeQ.ClienteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableMaterialesOCMeQ.RenglonIdColumn]));
                }
                set {
                    this[this.tableMaterialesOCMeQ.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadAbierta {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOCMeQ.CantidadAbiertaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadAbierta\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.CantidadAbiertaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PqOrd {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOCMeQ.PqOrdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PqOrd\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.PqOrdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PqRec {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOCMeQ.PqRecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PqRec\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.PqRecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOCMeQ.PrecioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precio\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorID {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.ProveedorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorID\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.ProveedorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.NombreProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreProveedor\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.NombreProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOCMeQ.CantidadRecibidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadRecibida\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bultos {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesOCMeQ.BultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bultos\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.BultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.NoGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGuia\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.NoGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOCMeQ.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'MaterialesOCMeQ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialesMaquinariaID {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesOCMeQ.MaterialesMaquinariaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialesMaquinariaID\' in table \'MaterialesOCMeQ\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOCMeQ.MaterialesMaquinariaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableMaterialesOCMeQ.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableMaterialesOCMeQ.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadAbiertaNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.CantidadAbiertaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadAbiertaNull() {
                this[this.tableMaterialesOCMeQ.CantidadAbiertaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPqOrdNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.PqOrdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPqOrdNull() {
                this[this.tableMaterialesOCMeQ.PqOrdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPqRecNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.PqRecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPqRecNull() {
                this[this.tableMaterialesOCMeQ.PqRecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.PrecioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioNull() {
                this[this.tableMaterialesOCMeQ.PrecioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIDNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.ProveedorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIDNull() {
                this[this.tableMaterialesOCMeQ.ProveedorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreProveedorNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.NombreProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreProveedorNull() {
                this[this.tableMaterialesOCMeQ.NombreProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadRecibidaNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.CantidadRecibidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadRecibidaNull() {
                this[this.tableMaterialesOCMeQ.CantidadRecibidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableMaterialesOCMeQ.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableMaterialesOCMeQ.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBultosNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.BultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBultosNull() {
                this[this.tableMaterialesOCMeQ.BultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGuiaNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.NoGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGuiaNull() {
                this[this.tableMaterialesOCMeQ.NoGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableMaterialesOCMeQ.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableMaterialesOCMeQ.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialesMaquinariaIDNull() {
                return this.IsNull(this.tableMaterialesOCMeQ.MaterialesMaquinariaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialesMaquinariaIDNull() {
                this[this.tableMaterialesOCMeQ.MaterialesMaquinariaIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProveedoresTXTRow : global::System.Data.DataRow {
            
            private ProveedoresTXTDataTable tableProveedoresTXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProveedoresTXTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProveedoresTXT = ((ProveedoresTXTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Proveedor {
                get {
                    try {
                        return ((string)(this[this.tableProveedoresTXT.ProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Proveedor\' in table \'ProveedoresTXT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProveedoresTXT.ProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorNull() {
                return this.IsNull(this.tableProveedoresTXT.ProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorNull() {
                this[this.tableProveedoresTXT.ProveedorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesShippingRow : global::System.Data.DataRow {
            
            private MaterialesShippingDataTable tableMaterialesShipping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesShippingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesShipping = ((MaterialesShippingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableMaterialesShipping.idColumn]));
                }
                set {
                    this[this.tableMaterialesShipping.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackSum {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesShipping.PackSumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackSum\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.PackSumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaRBI {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesShipping.fechaRBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaRBI\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.fechaRBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transportista {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesShipping.TransportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transportista\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.TransportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Domestic {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesShipping.DomesticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Domestic\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.DomesticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaLlegada {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesShipping.fechaLlegadaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaLlegada\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.fechaLlegadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaDespacho {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesShipping.fechaDespachoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaDespacho\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.fechaDespachoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesShipping.noGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noGuia\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.noGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentarios {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesShipping.ComentariosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentarios\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.ComentariosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaCapura {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesShipping.fechaCapuraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaCapura\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.fechaCapuraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Consignee {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesShipping.ConsigneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consignee\' in table \'MaterialesShipping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesShipping.ConsigneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackSumNull() {
                return this.IsNull(this.tableMaterialesShipping.PackSumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackSumNull() {
                this[this.tableMaterialesShipping.PackSumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaRBINull() {
                return this.IsNull(this.tableMaterialesShipping.fechaRBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaRBINull() {
                this[this.tableMaterialesShipping.fechaRBIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransportistaNull() {
                return this.IsNull(this.tableMaterialesShipping.TransportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransportistaNull() {
                this[this.tableMaterialesShipping.TransportistaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDomesticNull() {
                return this.IsNull(this.tableMaterialesShipping.DomesticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDomesticNull() {
                this[this.tableMaterialesShipping.DomesticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaLlegadaNull() {
                return this.IsNull(this.tableMaterialesShipping.fechaLlegadaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaLlegadaNull() {
                this[this.tableMaterialesShipping.fechaLlegadaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaDespachoNull() {
                return this.IsNull(this.tableMaterialesShipping.fechaDespachoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaDespachoNull() {
                this[this.tableMaterialesShipping.fechaDespachoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoGuiaNull() {
                return this.IsNull(this.tableMaterialesShipping.noGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoGuiaNull() {
                this[this.tableMaterialesShipping.noGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentariosNull() {
                return this.IsNull(this.tableMaterialesShipping.ComentariosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentariosNull() {
                this[this.tableMaterialesShipping.ComentariosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaCapuraNull() {
                return this.IsNull(this.tableMaterialesShipping.fechaCapuraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaCapuraNull() {
                this[this.tableMaterialesShipping.fechaCapuraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeNull() {
                return this.IsNull(this.tableMaterialesShipping.ConsigneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeNull() {
                this[this.tableMaterialesShipping.ConsigneeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesDanadoRow : global::System.Data.DataRow {
            
            private MaterialesDanadoDataTable tableMaterialesDanado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesDanadoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesDanado = ((MaterialesDanadoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableMaterialesDanado.idColumn]));
                }
                set {
                    this[this.tableMaterialesDanado.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesDanado.noGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noGuia\' in table \'MaterialesDanado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesDanado.noGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentario {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesDanado.ComentarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentario\' in table \'MaterialesDanado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesDanado.ComentarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dirPDF {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesDanado.dirPDFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dirPDF\' in table \'MaterialesDanado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesDanado.dirPDFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaCaptura {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesDanado.fechaCapturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaCaptura\' in table \'MaterialesDanado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesDanado.fechaCapturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoGuiaNull() {
                return this.IsNull(this.tableMaterialesDanado.noGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoGuiaNull() {
                this[this.tableMaterialesDanado.noGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentarioNull() {
                return this.IsNull(this.tableMaterialesDanado.ComentarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentarioNull() {
                this[this.tableMaterialesDanado.ComentarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdirPDFNull() {
                return this.IsNull(this.tableMaterialesDanado.dirPDFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdirPDFNull() {
                this[this.tableMaterialesDanado.dirPDFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaCapturaNull() {
                return this.IsNull(this.tableMaterialesDanado.fechaCapturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaCapturaNull() {
                this[this.tableMaterialesDanado.fechaCapturaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesMaquinariaRowChangeEvent : global::System.EventArgs {
            
            private MaterialesMaquinariaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaRowChangeEvent(MaterialesMaquinariaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesMaquinariaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GenerarTXTRowChangeEvent : global::System.EventArgs {
            
            private GenerarTXTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRowChangeEvent(GenerarTXTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GenerarTXTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesOCMeQRowChangeEvent : global::System.EventArgs {
            
            private MaterialesOCMeQRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCMeQRowChangeEvent(MaterialesOCMeQRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCMeQRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProveedoresTXTRowChangeEvent : global::System.EventArgs {
            
            private ProveedoresTXTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRowChangeEvent(ProveedoresTXTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProveedoresTXTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesShippingRowChangeEvent : global::System.EventArgs {
            
            private MaterialesShippingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesShippingRowChangeEvent(MaterialesShippingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesShippingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesDanadoRowChangeEvent : global::System.EventArgs {
            
            private MaterialesDanadoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoRowChangeEvent(MaterialesDanadoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesDanadoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MaterialCore.DataSets.MaquinariaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesMaquinariaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesMaquinariaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesMaquinaria";
            tableMapping.ColumnMappings.Add("MaterialesOCId", "MaterialesOCId");
            tableMapping.ColumnMappings.Add("ClienteId", "ClienteId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("CantidadPiezas", "CantidadPiezas");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("PesoNeto", "PesoNeto");
            tableMapping.ColumnMappings.Add("PesoBruto", "PesoBruto");
            tableMapping.ColumnMappings.Add("PaisOrigen", "PaisOrigen");
            tableMapping.ColumnMappings.Add("CantidadBultos", "CantidadBultos");
            tableMapping.ColumnMappings.Add("TipoBulto", "TipoBulto");
            tableMapping.ColumnMappings.Add("ContenidoTipoBulto", "ContenidoTipoBulto");
            tableMapping.ColumnMappings.Add("NumeroGuia", "NumeroGuia");
            tableMapping.ColumnMappings.Add("Marca", "Marca");
            tableMapping.ColumnMappings.Add("Modelo", "Modelo");
            tableMapping.ColumnMappings.Add("Serie", "Serie");
            tableMapping.ColumnMappings.Add("enviado", "enviado");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Proveedor", "Proveedor");
            tableMapping.ColumnMappings.Add("Transportista", "Transportista");
            tableMapping.ColumnMappings.Add("FechaRecibo", "FechaRecibo");
            tableMapping.ColumnMappings.Add("Comentarios", "Comentarios");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("Identificador", "Identificador");
            tableMapping.ColumnMappings.Add("Preparado", "Preparado");
            tableMapping.ColumnMappings.Add("Consecutivo", "Consecutivo");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("FechaCaptura", "FechaCaptura");
            tableMapping.ColumnMappings.Add("PqOrd", "PqOrd");
            tableMapping.ColumnMappings.Add("PqRec", "PqRec");
            tableMapping.ColumnMappings.Add("NombreProveedor", "NombreProveedor");
            tableMapping.ColumnMappings.Add("idPadre", "idPadre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MaterialesMaquinaria] WHERE (([Id] = @Original_Id) AND ((@IsNull_Mat" +
                "erialesOCId = 1 AND [MaterialesOCId] IS NULL) OR ([MaterialesOCId] = @Original_M" +
                "aterialesOCId)) AND ([ClienteId] = @Original_ClienteId) AND ((@IsNull_RenglonId " +
                "= 1 AND [RenglonId] IS NULL) OR ([RenglonId] = @Original_RenglonId)) AND ((@IsNu" +
                "ll_NumeroParte = 1 AND [NumeroParte] IS NULL) OR ([NumeroParte] = @Original_Nume" +
                "roParte)) AND ((@IsNull_CantidadPiezas = 1 AND [CantidadPiezas] IS NULL) OR ([Ca" +
                "ntidadPiezas] = @Original_CantidadPiezas)) AND ((@IsNull_UnidadMedida = 1 AND [U" +
                "nidadMedida] IS NULL) OR ([UnidadMedida] = @Original_UnidadMedida)) AND ((@IsNul" +
                "l_PesoNeto = 1 AND [PesoNeto] IS NULL) OR ([PesoNeto] = @Original_PesoNeto)) AND" +
                " ((@IsNull_PesoBruto = 1 AND [PesoBruto] IS NULL) OR ([PesoBruto] = @Original_Pe" +
                "soBruto)) AND ((@IsNull_PaisOrigen = 1 AND [PaisOrigen] IS NULL) OR ([PaisOrigen" +
                "] = @Original_PaisOrigen)) AND ((@IsNull_CantidadBultos = 1 AND [CantidadBultos]" +
                " IS NULL) OR ([CantidadBultos] = @Original_CantidadBultos)) AND ((@IsNull_TipoBu" +
                "lto = 1 AND [TipoBulto] IS NULL) OR ([TipoBulto] = @Original_TipoBulto)) AND ((@" +
                "IsNull_ContenidoTipoBulto = 1 AND [ContenidoTipoBulto] IS NULL) OR ([ContenidoTi" +
                "poBulto] = @Original_ContenidoTipoBulto)) AND ((@IsNull_NumeroGuia = 1 AND [Nume" +
                "roGuia] IS NULL) OR ([NumeroGuia] = @Original_NumeroGuia)) AND ((@IsNull_Marca =" +
                " 1 AND [Marca] IS NULL) OR ([Marca] = @Original_Marca)) AND ((@IsNull_Modelo = 1" +
                " AND [Modelo] IS NULL) OR ([Modelo] = @Original_Modelo)) AND ((@IsNull_Serie = 1" +
                " AND [Serie] IS NULL) OR ([Serie] = @Original_Serie)) AND ([enviado] = @Original" +
                "_enviado) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripc" +
                "ion] = @Original_Descripcion)) AND ((@IsNull_Proveedor = 1 AND [Proveedor] IS NU" +
                "LL) OR ([Proveedor] = @Original_Proveedor)) AND ((@IsNull_Transportista = 1 AND " +
                "[Transportista] IS NULL) OR ([Transportista] = @Original_Transportista)) AND ((@" +
                "IsNull_FechaRecibo = 1 AND [FechaRecibo] IS NULL) OR ([FechaRecibo] = @Original_" +
                "FechaRecibo)) AND ((@IsNull_Comentarios = 1 AND [Comentarios] IS NULL) OR ([Come" +
                "ntarios] = @Original_Comentarios)) AND ((@IsNull_FacturaImportacion = 1 AND [Fac" +
                "turaImportacion] IS NULL) OR ([FacturaImportacion] = @Original_FacturaImportacio" +
                "n)) AND ((@IsNull_FechaImportacion = 1 AND [FechaImportacion] IS NULL) OR ([Fech" +
                "aImportacion] = @Original_FechaImportacion)) AND ((@IsNull_Estado = 1 AND [Estad" +
                "o] IS NULL) OR ([Estado] = @Original_Estado)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroParte", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadPiezas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadPiezas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadPiezas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadPiezas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnidadMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoNeto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoNeto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoBruto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoBruto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaisOrigen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadBultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadBultos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContenidoTipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Marca", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Serie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_enviado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "enviado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Proveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Transportista", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaRecibo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comentarios", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comentarios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacturaImportacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaImportacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaImportacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [MaterialesMaquinaria] ([MaterialesOCId], [ClienteId], [RenglonId], [NumeroParte], [CantidadPiezas], [UnidadMedida], [PesoNeto], [PesoBruto], [PaisOrigen], [CantidadBultos], [TipoBulto], [ContenidoTipoBulto], [NumeroGuia], [Marca], [Modelo], [Serie], [enviado], [Descripcion], [Proveedor], [Transportista], [FechaRecibo], [Comentarios], [FacturaImportacion], [FechaImportacion], [Estado]) VALUES (@MaterialesOCId, @ClienteId, @RenglonId, @NumeroParte, @CantidadPiezas, @UnidadMedida, @PesoNeto, @PesoBruto, @PaisOrigen, @CantidadBultos, @TipoBulto, @ContenidoTipoBulto, @NumeroGuia, @Marca, @Modelo, @Serie, @enviado, @Descripcion, @Proveedor, @Transportista, @FechaRecibo, @Comentarios, @FacturaImportacion, @FechaImportacion, @Estado)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadPiezas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadPiezas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enviado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "enviado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaImportacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MaterialesMaquinaria] SET [MaterialesOCId] = @MaterialesOCId, [ClienteId]" +
                " = @ClienteId, [RenglonId] = @RenglonId, [NumeroParte] = @NumeroParte, [Cantidad" +
                "Piezas] = @CantidadPiezas, [UnidadMedida] = @UnidadMedida, [PesoNeto] = @PesoNet" +
                "o, [PesoBruto] = @PesoBruto, [PaisOrigen] = @PaisOrigen, [CantidadBultos] = @Can" +
                "tidadBultos, [TipoBulto] = @TipoBulto, [ContenidoTipoBulto] = @ContenidoTipoBult" +
                "o, [NumeroGuia] = @NumeroGuia, [Marca] = @Marca, [Modelo] = @Modelo, [Serie] = @" +
                "Serie, [enviado] = @enviado, [Descripcion] = @Descripcion, [Proveedor] = @Provee" +
                "dor, [Transportista] = @Transportista, [FechaRecibo] = @FechaRecibo, [Comentario" +
                "s] = @Comentarios, [FacturaImportacion] = @FacturaImportacion, [FechaImportacion" +
                "] = @FechaImportacion, [Estado] = @Estado WHERE (([Id] = @Original_Id) AND ((@Is" +
                "Null_MaterialesOCId = 1 AND [MaterialesOCId] IS NULL) OR ([MaterialesOCId] = @Or" +
                "iginal_MaterialesOCId)) AND ([ClienteId] = @Original_ClienteId) AND ((@IsNull_Re" +
                "nglonId = 1 AND [RenglonId] IS NULL) OR ([RenglonId] = @Original_RenglonId)) AND" +
                " ((@IsNull_NumeroParte = 1 AND [NumeroParte] IS NULL) OR ([NumeroParte] = @Origi" +
                "nal_NumeroParte)) AND ((@IsNull_CantidadPiezas = 1 AND [CantidadPiezas] IS NULL)" +
                " OR ([CantidadPiezas] = @Original_CantidadPiezas)) AND ((@IsNull_UnidadMedida = " +
                "1 AND [UnidadMedida] IS NULL) OR ([UnidadMedida] = @Original_UnidadMedida)) AND " +
                "((@IsNull_PesoNeto = 1 AND [PesoNeto] IS NULL) OR ([PesoNeto] = @Original_PesoNe" +
                "to)) AND ((@IsNull_PesoBruto = 1 AND [PesoBruto] IS NULL) OR ([PesoBruto] = @Ori" +
                "ginal_PesoBruto)) AND ((@IsNull_PaisOrigen = 1 AND [PaisOrigen] IS NULL) OR ([Pa" +
                "isOrigen] = @Original_PaisOrigen)) AND ((@IsNull_CantidadBultos = 1 AND [Cantida" +
                "dBultos] IS NULL) OR ([CantidadBultos] = @Original_CantidadBultos)) AND ((@IsNul" +
                "l_TipoBulto = 1 AND [TipoBulto] IS NULL) OR ([TipoBulto] = @Original_TipoBulto))" +
                " AND ((@IsNull_ContenidoTipoBulto = 1 AND [ContenidoTipoBulto] IS NULL) OR ([Con" +
                "tenidoTipoBulto] = @Original_ContenidoTipoBulto)) AND ((@IsNull_NumeroGuia = 1 A" +
                "ND [NumeroGuia] IS NULL) OR ([NumeroGuia] = @Original_NumeroGuia)) AND ((@IsNull" +
                "_Marca = 1 AND [Marca] IS NULL) OR ([Marca] = @Original_Marca)) AND ((@IsNull_Mo" +
                "delo = 1 AND [Modelo] IS NULL) OR ([Modelo] = @Original_Modelo)) AND ((@IsNull_S" +
                "erie = 1 AND [Serie] IS NULL) OR ([Serie] = @Original_Serie)) AND ([enviado] = @" +
                "Original_enviado) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([" +
                "Descripcion] = @Original_Descripcion)) AND ((@IsNull_Proveedor = 1 AND [Proveedo" +
                "r] IS NULL) OR ([Proveedor] = @Original_Proveedor)) AND ((@IsNull_Transportista " +
                "= 1 AND [Transportista] IS NULL) OR ([Transportista] = @Original_Transportista))" +
                " AND ((@IsNull_FechaRecibo = 1 AND [FechaRecibo] IS NULL) OR ([FechaRecibo] = @O" +
                "riginal_FechaRecibo)) AND ((@IsNull_Comentarios = 1 AND [Comentarios] IS NULL) O" +
                "R ([Comentarios] = @Original_Comentarios)) AND ((@IsNull_FacturaImportacion = 1 " +
                "AND [FacturaImportacion] IS NULL) OR ([FacturaImportacion] = @Original_FacturaIm" +
                "portacion)) AND ((@IsNull_FechaImportacion = 1 AND [FechaImportacion] IS NULL) O" +
                "R ([FechaImportacion] = @Original_FechaImportacion)) AND ((@IsNull_Estado = 1 AN" +
                "D [Estado] IS NULL) OR ([Estado] = @Original_Estado)));\r\nSELECT Id, MaterialesOC" +
                "Id, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, P" +
                "esoBruto, PaisOrigen, CantidadBultos, TipoBulto, ContenidoTipoBulto, NumeroGuia," +
                " Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaReci" +
                "bo, Comentarios, FacturaImportacion, FechaImportacion, Estado FROM MaterialesMaq" +
                "uinaria WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadPiezas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadPiezas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enviado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "enviado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaImportacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaterialesOCId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroParte", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadPiezas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadPiezas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadPiezas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadPiezas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnidadMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoNeto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoNeto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoBruto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoBruto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaisOrigen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadBultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadBultos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContenidoTipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Marca", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Serie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_enviado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "enviado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Proveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Transportista", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaRecibo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comentarios", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comentarios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacturaImportacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaImportacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaImportacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[14];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Id, MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Comentarios, 
                      FacturaProveedor, CantidadRecibida, Moneda, Identificador, Preparado, FechaCaptura, Consecutivo, PqOrd, PqRec, NombreProveedor, idPadre
FROM         MaterialesMaquinaria";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"IF (SELECT     identificador
      FROM          materialesmaquinaria
      WHERE      id = @id) = 0 BEGIN
    DELETE FROM MaterialesMaquinaria
     WHERE     (idPadre = @id) END ELSE BEGIN
                                DELETE FROM MaterialesMaquinaria
                                 WHERE     (id = @id) END";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     Id, MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Comentarios, 
                      FacturaProveedor, CantidadRecibida, Moneda, Identificador, Preparado, FechaCaptura, Consecutivo, PqOrd, PqRec, NombreProveedor
FROM         MaterialesMaquinaria
WHERE     (Id = @id)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     Id, MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Comentarios, 
                      FacturaProveedor, CantidadRecibida, Moneda, Identificador, Preparado, FechaCaptura, Consecutivo, PqOrd, PqRec, NombreProveedor, idPadre
FROM         MaterialesMaquinaria
WHERE     (Preparado = 0)
ORDER BY MaterialesOCId, RenglonId, idPadre, Identificador";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SET              DATEFORMAT 'dmy'
                          SELECT     Id, MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, 
                                                  CantidadBultos, TipoBulto, ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, 
                                                  FechaRecibo, Comentarios, FacturaProveedor, CantidadRecibida, Moneda, Identificador, Preparado, FechaCaptura, Consecutivo, PqOrd, 
                                                  PqRec, NombreProveedor, idPadre
                           FROM         MaterialesMaquinaria
                           WHERE     (Preparado = 1) AND FechaCaptura BETWEEN @fecha1 AND @fecha2
                           ORDER BY MaterialesOCId, RenglonId, idPadre, Identificador";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"INSERT INTO MaterialesMaquinaria
                      (MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Comentarios, 
                      CantidadRecibida, Moneda, Identificador, Preparado, Consecutivo, PqOrd, PqRec, NombreProveedor, FacturaProveedor)
SELECT     MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Comentarios, 
                      CantidadRecibida, Moneda, 0 AS Identificador, Preparado, Consecutivo, 0 AS PqOrd, 0 AS PqRec, NombreProveedor, FacturaProveedor
FROM         MaterialesMaquinaria AS MaterialesMaquinaria_1
WHERE     (Id = @id)
                          SELECT     @@IDENTITY";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "INSERT INTO MaterialesMaquinaria\r\n                      (MaterialesOCId, ClienteI" +
                "d, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, Pa" +
                "isOrigen, CantidadBultos, TipoBulto, \r\n                      ContenidoTipoBulto," +
                " NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportist" +
                "a, FechaRecibo, Comentarios, \r\n                      CantidadRecibida, Moneda, I" +
                "dentificador, Preparado, Consecutivo, PqOrd, PqRec, NombreProveedor, FacturaProv" +
                "eedor, idPadre)\r\nSELECT     TOP (1) MaterialesOCId, ClienteId, RenglonId, Numero" +
                "Parte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBu" +
                "ltos, \r\n                      TipoBulto, ContenidoTipoBulto, NumeroGuia, Marca, " +
                "Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Come" +
                "ntarios, \r\n                      CantidadRecibida, Moneda,\r\n                    " +
                "      (SELECT     MAX(Identificador) + 1 AS Expr1\r\n                            F" +
                "ROM          MaterialesMaquinaria\r\n                            WHERE      (Mater" +
                "ialesOCId =\r\n                                                       (SELECT     " +
                "MaterialesOCId\r\n                                                         FROM   " +
                "       MaterialesMaquinaria\r\n                                                   " +
                "      WHERE      (Id = @id))) AND (RenglonId =\r\n                                " +
                "                       (SELECT     RenglonId\r\n                                  " +
                "                       FROM          MaterialesMaquinaria\r\n                     " +
                "                                    WHERE      (Id = @id)))) AS Identificador, P" +
                "reparado, Consecutivo, 0 AS PqOrd, 0 AS PqRec, NombreProveedor, FacturaProveedor" +
                ", \r\n                      idPadre\r\nFROM         MaterialesMaquinaria AS Material" +
                "esMaquinaria_1\r\nWHERE     (Id = @id);    \r\n                          SELECT     " +
                "@@IDENTITY";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "INSERT INTO MaterialesMaquinaria\r\n                      (MaterialesOCId, ClienteI" +
                "d, RenglonId, Consecutivo)\r\nVALUES     (0, 70, 0,@consecutivo);  \r\n             " +
                "             SELECT     @@identity";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = @"INSERT INTO MaterialesMaquinaria
                      (MaterialesOCId, ClienteId, RenglonId, Descripcion, UnidadMedida, Proveedor, Moneda, Consecutivo, PqOrd, PqRec, NombreProveedor)
VALUES     (@MaterialesOCId,@ClienteId,@RenglonId,@Descripcion,@UnidadMedida,@Proveedor,@Moneda,@Consecutivo,@PqOrd,@PqRec,@NombreProveedor);   
                          SELECT     @@IDENTITY";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesOCId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PqOrd", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "PqOrd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PqRec", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "PqRec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombreProveedor", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = @"INSERT INTO MaterialesMaquinaria
                      (MaterialesOCId, ClienteId, RenglonId, NumeroParte, CantidadPiezas, UnidadMedida, PesoNeto, PesoBruto, PaisOrigen, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Marca, Modelo, Serie, enviado, Descripcion, Proveedor, Transportista, FechaRecibo, Comentarios, 
                      FacturaImportacion, FechaImportacion, Estado, CantidadRecibida, Moneda)
VALUES     (@MaterialesOCId,@ClienteId,@RenglonId,@NumeroParte,@CantidadPiezas,@UnidadMedida,@PesoNeto,@PesoBruto,@PaisOrigen,@CantidadBultos,@TipoBulto,@ContenidoTipoBulto,@NumeroGuia,@Marca,@Modelo,@Serie,@enviado,@Descripcion,@Proveedor,@Transportista,@FechaRecibo,@Comentarios,@FacturaImportacion,@FechaImportacion,@Estado,@CantidadRecibida,@Moneda)";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesOCId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadPiezas", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadPiezas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoNeto", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoBruto", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaisOrigen", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadBultos", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoBulto", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 95, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modelo", global::System.Data.SqlDbType.VarChar, 65, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enviado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "enviado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaImportacion", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaImportacion", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FechaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadRecibida", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadRecibida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE    MaterialesMaquinaria\r\nSET              enviado = 1\r\nWHERE     (Id = @Id" +
                ")";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "update materialesMaquinaria set idpadre = id where id=@id";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "UPDATE    MaterialesMaquinaria\r\nSET              Preparado = 1\r\nWHERE     (Consec" +
                "utivo = @consecutivo)";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[13] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = @"UPDATE    MaterialesMaquinaria
SET              MaterialesOCId = @MaterialesOCId, ClienteId = @ClienteId, RenglonId = @RenglonId, NumeroParte = @NumeroParte, 
                      CantidadPiezas = @CantidadPiezas, UnidadMedida = @UnidadMedida, PesoNeto = @PesoNeto, PesoBruto = @PesoBruto, 
                      PaisOrigen = @PaisOrigen, CantidadBultos = @CantidadBultos, TipoBulto = @TipoBulto, ContenidoTipoBulto = @ContenidoTipoBulto, 
                      NumeroGuia = @NumeroGuia, Marca = @Marca, Modelo = @Modelo, Serie = @Serie, enviado = @enviado, Descripcion = @Descripcion, 
                      Proveedor = @Proveedor, Transportista = @Transportista, FechaRecibo = @FechaRecibo, Comentarios = @Comentarios, 
                      CantidadRecibida = @CantidadRecibida, Moneda = @Moneda, Consecutivo = @Consecutivo, NombreProveedor = @NombreProveedor, 
                      FacturaProveedor = @FacturaProveedor
WHERE     (Id = @Id)";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialesOCId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialesOCId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadPiezas", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadPiezas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoNeto", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoBruto", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaisOrigen", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadBultos", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoBulto", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 95, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modelo", global::System.Data.SqlDbType.VarChar, 65, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enviado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "enviado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadRecibida", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadRecibida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombreProveedor", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaProveedor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Maquinaria.MaterialesMaquinariaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Maquinaria.MaterialesMaquinariaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Maquinaria.MaterialesMaquinariaDataTable dataTable = new Maquinaria.MaterialesMaquinariaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(Maquinaria.MaterialesMaquinariaDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Maquinaria.MaterialesMaquinariaDataTable GetDataByID(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            Maquinaria.MaterialesMaquinariaDataTable dataTable = new Maquinaria.MaterialesMaquinariaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNoEnviados(Maquinaria.MaterialesMaquinariaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Maquinaria.MaterialesMaquinariaDataTable GetDataByNoEnviado() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            Maquinaria.MaterialesMaquinariaDataTable dataTable = new Maquinaria.MaterialesMaquinariaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProcesados(Maquinaria.MaterialesMaquinariaDataTable dataTable, System.DateTime fecha1, System.DateTime fecha2) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(fecha1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(fecha2));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Maquinaria.MaterialesMaquinariaDataTable GetDataByProcesados(System.DateTime fecha1, System.DateTime fecha2) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(fecha1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(fecha2));
            Maquinaria.MaterialesMaquinariaDataTable dataTable = new Maquinaria.MaterialesMaquinariaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria.MaterialesMaquinariaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesMaquinaria");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DeleteQuery(int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object InsertClonar(int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            command.Parameters[0].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object InsertHijo(int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            command.Parameters[0].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object InsertNulo(global::System.Nullable<int> consecutivo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[7];
            if ((consecutivo.HasValue == true)) {
                command.Parameters[0].Value = ((int)(consecutivo.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> InsertPadre(global::System.Nullable<int> MaterialesOCId, int ClienteId, global::System.Nullable<int> RenglonId, string Descripcion, string UnidadMedida, string Proveedor, string Moneda, global::System.Nullable<int> Consecutivo, global::System.Nullable<decimal> PqOrd, global::System.Nullable<decimal> PqRec, string NombreProveedor) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[8];
            if ((MaterialesOCId.HasValue == true)) {
                command.Parameters[0].Value = ((int)(MaterialesOCId.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(ClienteId));
            if ((RenglonId.HasValue == true)) {
                command.Parameters[2].Value = ((int)(RenglonId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Descripcion == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Descripcion));
            }
            if ((UnidadMedida == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(UnidadMedida));
            }
            if ((Proveedor == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Proveedor));
            }
            if ((Moneda == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Moneda));
            }
            if ((Consecutivo.HasValue == true)) {
                command.Parameters[7].Value = ((int)(Consecutivo.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PqOrd.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(PqOrd.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PqRec.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(PqRec.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NombreProveedor == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(NombreProveedor));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int InsertQuery(
                    global::System.Nullable<int> MaterialesOCId, 
                    int ClienteId, 
                    global::System.Nullable<int> RenglonId, 
                    string NumeroParte, 
                    global::System.Nullable<decimal> CantidadPiezas, 
                    string UnidadMedida, 
                    global::System.Nullable<decimal> PesoNeto, 
                    global::System.Nullable<decimal> PesoBruto, 
                    string PaisOrigen, 
                    global::System.Nullable<decimal> CantidadBultos, 
                    string TipoBulto, 
                    string ContenidoTipoBulto, 
                    string NumeroGuia, 
                    string Marca, 
                    string Modelo, 
                    string Serie, 
                    bool enviado, 
                    string Descripcion, 
                    string Proveedor, 
                    string Transportista, 
                    global::System.Nullable<global::System.DateTime> FechaRecibo, 
                    string Comentarios, 
                    global::System.Nullable<decimal> FacturaImportacion, 
                    global::System.Nullable<global::System.DateTime> FechaImportacion, 
                    string Estado, 
                    global::System.Nullable<decimal> CantidadRecibida, 
                    string Moneda) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[9];
            if ((MaterialesOCId.HasValue == true)) {
                command.Parameters[0].Value = ((int)(MaterialesOCId.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(ClienteId));
            if ((RenglonId.HasValue == true)) {
                command.Parameters[2].Value = ((int)(RenglonId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NumeroParte == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(NumeroParte));
            }
            if ((CantidadPiezas.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(CantidadPiezas.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UnidadMedida == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(UnidadMedida));
            }
            if ((PesoNeto.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(PesoNeto.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PesoBruto.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(PesoBruto.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PaisOrigen == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(PaisOrigen));
            }
            if ((CantidadBultos.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(CantidadBultos.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TipoBulto == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(TipoBulto));
            }
            if ((ContenidoTipoBulto == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(ContenidoTipoBulto));
            }
            if ((NumeroGuia == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NumeroGuia));
            }
            if ((Marca == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Marca));
            }
            if ((Modelo == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(Modelo));
            }
            if ((Serie == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Serie));
            }
            command.Parameters[16].Value = ((bool)(enviado));
            if ((Descripcion == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Descripcion));
            }
            if ((Proveedor == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Proveedor));
            }
            if ((Transportista == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(Transportista));
            }
            if ((FechaRecibo.HasValue == true)) {
                command.Parameters[20].Value = ((System.DateTime)(FechaRecibo.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Comentarios == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(Comentarios));
            }
            if ((FacturaImportacion.HasValue == true)) {
                command.Parameters[22].Value = ((decimal)(FacturaImportacion.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((FechaImportacion.HasValue == true)) {
                command.Parameters[23].Value = ((System.DateTime)(FechaImportacion.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Estado == null)) {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[24].Value = ((string)(Estado));
            }
            if ((CantidadRecibida.HasValue == true)) {
                command.Parameters[25].Value = ((decimal)(CantidadRecibida.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Moneda == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(Moneda));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateEnviado(int Id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[10];
            command.Parameters[0].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdatePadreID(int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[11];
            command.Parameters[0].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdatePreparado(global::System.Nullable<int> consecutivo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[12];
            if ((consecutivo.HasValue == true)) {
                command.Parameters[0].Value = ((int)(consecutivo.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateQuery(
                    global::System.Nullable<int> MaterialesOCId, 
                    int ClienteId, 
                    global::System.Nullable<int> RenglonId, 
                    string NumeroParte, 
                    global::System.Nullable<decimal> CantidadPiezas, 
                    string UnidadMedida, 
                    global::System.Nullable<decimal> PesoNeto, 
                    global::System.Nullable<decimal> PesoBruto, 
                    string PaisOrigen, 
                    global::System.Nullable<decimal> CantidadBultos, 
                    string TipoBulto, 
                    string ContenidoTipoBulto, 
                    string NumeroGuia, 
                    string Marca, 
                    string Modelo, 
                    string Serie, 
                    bool enviado, 
                    string Descripcion, 
                    string Proveedor, 
                    string Transportista, 
                    global::System.Nullable<global::System.DateTime> FechaRecibo, 
                    string Comentarios, 
                    global::System.Nullable<decimal> CantidadRecibida, 
                    string Moneda, 
                    global::System.Nullable<int> Consecutivo, 
                    string NombreProveedor, 
                    string FacturaProveedor, 
                    int Id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[13];
            if ((MaterialesOCId.HasValue == true)) {
                command.Parameters[0].Value = ((int)(MaterialesOCId.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(ClienteId));
            if ((RenglonId.HasValue == true)) {
                command.Parameters[2].Value = ((int)(RenglonId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NumeroParte == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(NumeroParte));
            }
            if ((CantidadPiezas.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(CantidadPiezas.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UnidadMedida == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(UnidadMedida));
            }
            if ((PesoNeto.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(PesoNeto.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PesoBruto.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(PesoBruto.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PaisOrigen == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(PaisOrigen));
            }
            if ((CantidadBultos.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(CantidadBultos.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TipoBulto == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(TipoBulto));
            }
            if ((ContenidoTipoBulto == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(ContenidoTipoBulto));
            }
            if ((NumeroGuia == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NumeroGuia));
            }
            if ((Marca == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Marca));
            }
            if ((Modelo == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(Modelo));
            }
            if ((Serie == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Serie));
            }
            command.Parameters[16].Value = ((bool)(enviado));
            if ((Descripcion == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Descripcion));
            }
            if ((Proveedor == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Proveedor));
            }
            if ((Transportista == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(Transportista));
            }
            if ((FechaRecibo.HasValue == true)) {
                command.Parameters[20].Value = ((System.DateTime)(FechaRecibo.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Comentarios == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(Comentarios));
            }
            if ((CantidadRecibida.HasValue == true)) {
                command.Parameters[22].Value = ((decimal)(CantidadRecibida.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Moneda == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(Moneda));
            }
            if ((Consecutivo.HasValue == true)) {
                command.Parameters[24].Value = ((int)(Consecutivo.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NombreProveedor == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(NombreProveedor));
            }
            if ((FacturaProveedor == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(FacturaProveedor));
            }
            command.Parameters[27].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GenerarTXTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GenerarTXTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GenerarTXT";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Proveedor", "Proveedor");
            tableMapping.ColumnMappings.Add("LineaPO", "LineaPO");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("PesoBruto", "PesoBruto");
            tableMapping.ColumnMappings.Add("PesoNeto", "PesoNeto");
            tableMapping.ColumnMappings.Add("PaisOrigen", "PaisOrigen");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("CantidadBultos", "CantidadBultos");
            tableMapping.ColumnMappings.Add("TipoBulto", "TipoBulto");
            tableMapping.ColumnMappings.Add("ContenidoTipoBulto", "ContenidoTipoBulto");
            tableMapping.ColumnMappings.Add("Transportista", "Transportista");
            tableMapping.ColumnMappings.Add("Marca", "Marca");
            tableMapping.ColumnMappings.Add("Modelo", "Modelo");
            tableMapping.ColumnMappings.Add("Serie", "Serie");
            tableMapping.ColumnMappings.Add("FacturaImportacion", "FacturaImportacion");
            tableMapping.ColumnMappings.Add("hijo", "hijo");
            tableMapping.ColumnMappings.Add("NumeroGuia", "NumeroGuia");
            tableMapping.ColumnMappings.Add("numPO", "numPO");
            tableMapping.ColumnMappings.Add("salvacion", "salvacion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MaterialesMaquinaria] WHERE (([Id] = @Original_Id) AND ((@IsNull_Pro" +
                "veedor = 1 AND [Proveedor] IS NULL) OR ([Proveedor] = @Original_Proveedor)) AND " +
                "((@IsNull_FacturaImportacion = 1 AND [FacturaImportacion] IS NULL) OR ([FacturaI" +
                "mportacion] = @Original_FacturaImportacion)) AND ((@IsNull_numPO = 1 AND [Materi" +
                "alesOCId] IS NULL) OR ([MaterialesOCId] = @Original_numPO)) AND ((@IsNull_LineaP" +
                "O = 1 AND [RenglonId] IS NULL) OR ([RenglonId] = @Original_LineaPO)) AND ((@IsNu" +
                "ll_NumeroParte = 1 AND [NumeroParte] IS NULL) OR ([NumeroParte] = @Original_Nume" +
                "roParte)) AND ((@IsNull_CantidadRecibida = 1 AND [CantidadRecibida] IS NULL) OR " +
                "([CantidadRecibida] = @Original_CantidadRecibida)) AND ((@IsNull_UnidadMedida = " +
                "1 AND [UnidadMedida] IS NULL) OR ([UnidadMedida] = @Original_UnidadMedida)) AND " +
                "((@IsNull_PesoBruto = 1 AND [PesoBruto] IS NULL) OR ([PesoBruto] = @Original_Pes" +
                "oBruto)) AND ((@IsNull_PesoNeto = 1 AND [PesoNeto] IS NULL) OR ([PesoNeto] = @Or" +
                "iginal_PesoNeto)) AND ((@IsNull_PaisOrigen = 1 AND [PaisOrigen] IS NULL) OR ([Pa" +
                "isOrigen] = @Original_PaisOrigen)) AND ((@IsNull_Moneda = 1 AND [Moneda] IS NULL" +
                ") OR ([Moneda] = @Original_Moneda)) AND ((@IsNull_CantidadBultos = 1 AND [Cantid" +
                "adBultos] IS NULL) OR ([CantidadBultos] = @Original_CantidadBultos)) AND ((@IsNu" +
                "ll_TipoBulto = 1 AND [TipoBulto] IS NULL) OR ([TipoBulto] = @Original_TipoBulto)" +
                ") AND ((@IsNull_ContenidoTipoBulto = 1 AND [ContenidoTipoBulto] IS NULL) OR ([Co" +
                "ntenidoTipoBulto] = @Original_ContenidoTipoBulto)) AND ((@IsNull_NumeroGuia = 1 " +
                "AND [NumeroGuia] IS NULL) OR ([NumeroGuia] = @Original_NumeroGuia)) AND ((@IsNul" +
                "l_Transportista = 1 AND [Transportista] IS NULL) OR ([Transportista] = @Original" +
                "_Transportista)) AND ((@IsNull_Marca = 1 AND [Marca] IS NULL) OR ([Marca] = @Ori" +
                "ginal_Marca)) AND ((@IsNull_Modelo = 1 AND [Modelo] IS NULL) OR ([Modelo] = @Ori" +
                "ginal_Modelo)) AND ((@IsNull_Serie = 1 AND [Serie] IS NULL) OR ([Serie] = @Origi" +
                "nal_Serie)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Proveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacturaImportacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineaPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineaPO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineaPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineaPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroParte", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadRecibida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadRecibida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadRecibida", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadRecibida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnidadMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoBruto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoBruto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoNeto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoNeto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaisOrigen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadBultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadBultos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContenidoTipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Transportista", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Marca", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Serie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MaterialesMaquinaria] SET [Proveedor] = @Proveedor, [FacturaImportacion] " +
                "= @FacturaImportacion, [MaterialesOCId] = @numPO, [RenglonId] = @LineaPO, [Numer" +
                "oParte] = @NumeroParte, [CantidadRecibida] = @CantidadRecibida, [UnidadMedida] =" +
                " @UnidadMedida, [PesoBruto] = @PesoBruto, [PesoNeto] = @PesoNeto, [PaisOrigen] =" +
                " @PaisOrigen, [Moneda] = @Moneda, [CantidadBultos] = @CantidadBultos, [TipoBulto" +
                "] = @TipoBulto, [ContenidoTipoBulto] = @ContenidoTipoBulto, [NumeroGuia] = @Nume" +
                "roGuia, [Transportista] = @Transportista, [Marca] = @Marca, [Modelo] = @Modelo, " +
                "[Serie] = @Serie WHERE (([Id] = @Original_Id) AND ((@IsNull_Proveedor = 1 AND [P" +
                "roveedor] IS NULL) OR ([Proveedor] = @Original_Proveedor)) AND ((@IsNull_Factura" +
                "Importacion = 1 AND [FacturaImportacion] IS NULL) OR ([FacturaImportacion] = @Or" +
                "iginal_FacturaImportacion)) AND ((@IsNull_numPO = 1 AND [MaterialesOCId] IS NULL" +
                ") OR ([MaterialesOCId] = @Original_numPO)) AND ((@IsNull_LineaPO = 1 AND [Renglo" +
                "nId] IS NULL) OR ([RenglonId] = @Original_LineaPO)) AND ((@IsNull_NumeroParte = " +
                "1 AND [NumeroParte] IS NULL) OR ([NumeroParte] = @Original_NumeroParte)) AND ((@" +
                "IsNull_CantidadRecibida = 1 AND [CantidadRecibida] IS NULL) OR ([CantidadRecibid" +
                "a] = @Original_CantidadRecibida)) AND ((@IsNull_UnidadMedida = 1 AND [UnidadMedi" +
                "da] IS NULL) OR ([UnidadMedida] = @Original_UnidadMedida)) AND ((@IsNull_PesoBru" +
                "to = 1 AND [PesoBruto] IS NULL) OR ([PesoBruto] = @Original_PesoBruto)) AND ((@I" +
                "sNull_PesoNeto = 1 AND [PesoNeto] IS NULL) OR ([PesoNeto] = @Original_PesoNeto))" +
                " AND ((@IsNull_PaisOrigen = 1 AND [PaisOrigen] IS NULL) OR ([PaisOrigen] = @Orig" +
                "inal_PaisOrigen)) AND ((@IsNull_Moneda = 1 AND [Moneda] IS NULL) OR ([Moneda] = " +
                "@Original_Moneda)) AND ((@IsNull_CantidadBultos = 1 AND [CantidadBultos] IS NULL" +
                ") OR ([CantidadBultos] = @Original_CantidadBultos)) AND ((@IsNull_TipoBulto = 1 " +
                "AND [TipoBulto] IS NULL) OR ([TipoBulto] = @Original_TipoBulto)) AND ((@IsNull_C" +
                "ontenidoTipoBulto = 1 AND [ContenidoTipoBulto] IS NULL) OR ([ContenidoTipoBulto]" +
                " = @Original_ContenidoTipoBulto)) AND ((@IsNull_NumeroGuia = 1 AND [NumeroGuia] " +
                "IS NULL) OR ([NumeroGuia] = @Original_NumeroGuia)) AND ((@IsNull_Transportista =" +
                " 1 AND [Transportista] IS NULL) OR ([Transportista] = @Original_Transportista)) " +
                "AND ((@IsNull_Marca = 1 AND [Marca] IS NULL) OR ([Marca] = @Original_Marca)) AND" +
                " ((@IsNull_Modelo = 1 AND [Modelo] IS NULL) OR ([Modelo] = @Original_Modelo)) AN" +
                "D ((@IsNull_Serie = 1 AND [Serie] IS NULL) OR ([Serie] = @Original_Serie)));\r\nSE" +
                "LECT Id, GETDATE() AS Fecha, Proveedor, FacturaImportacion, MaterialesOCId AS nu" +
                "mPO, RenglonId AS LineaPO, NumeroParte, CantidadRecibida, UnidadMedida, PesoBrut" +
                "o, PesoNeto, PaisOrigen, Moneda, CantidadBultos, TipoBulto, ContenidoTipoBulto, " +
                "NumeroGuia, Transportista, Marca, Modelo, Serie FROM MaterialesMaquinaria WHERE " +
                "(Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineaPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineaPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadRecibida", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadRecibida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Proveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Proveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacturaImportacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacturaImportacion", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FacturaImportacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineaPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineaPO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineaPO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineaPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroParte", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadRecibida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadRecibida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadRecibida", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadRecibida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnidadMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoBruto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoBruto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoBruto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoBruto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PesoNeto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PesoNeto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PesoNeto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PesoNeto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaisOrigen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaisOrigen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaisOrigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadBultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadBultos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadBultos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadBultos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContenidoTipoBulto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContenidoTipoBulto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContenidoTipoBulto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Transportista", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Marca", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modelo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modelo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modelo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Serie", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Id, ISNULL(FechaRecibo, GETDATE()) AS Fecha, ISNULL(Proveedor, '') AS Proveedor, FacturaProveedor AS FacturaImportacion, dbo.NumParteMQ(Id) 
                      AS NumeroParte, ISNULL(MaterialesOCId, 0) AS numPO, ISNULL(RenglonId, 0) AS LineaPO, ISNULL(CantidadRecibida, 0) AS CantidadRecibida, 
                      ISNULL(UnidadMedida, '') AS UnidadMedida, ISNULL(PesoBruto, 0) AS PesoBruto, ISNULL(PesoNeto, 0) AS PesoNeto, ISNULL(PaisOrigen, '') 
                      AS PaisOrigen, ISNULL(Moneda, '') AS Moneda, ISNULL(CantidadBultos, 0) AS CantidadBultos, ISNULL(TipoBulto, '') AS TipoBulto, 
                      ISNULL(ContenidoTipoBulto, '') AS ContenidoTipoBulto, ISNULL(NumeroGuia, '') AS NumeroGuia, ISNULL(Transportista, '') AS Transportista, 
                      ISNULL(Marca, '') AS Marca, ISNULL(Modelo, '') AS Modelo, ISNULL(Serie, '') AS Serie, ISNULL(Identificador, 0) AS hijo
FROM         MaterialesMaquinaria
WHERE     (ClienteId = @clienteId) AND (Consecutivo = @consecutivo) AND (Identificador = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Id, ISNULL(FechaRecibo, GETDATE()) AS Fecha, ISNULL(Proveedor, '') AS Proveedor, FacturaProveedor AS FacturaImportacion, dbo.NumParteMQ(Id) 
                      AS NumeroParte, ISNULL(MaterialesOCId, 0) AS numPO, ISNULL(RenglonId, 0) AS LineaPO, ISNULL(CantidadRecibida, 0) AS CantidadRecibida, 
                      ISNULL(UnidadMedida, '') AS UnidadMedida, ISNULL(PesoBruto, 0) AS PesoBruto, ISNULL(PesoBruto - PesoBruto * .1, 0) AS PesoNeto, 
                      ISNULL(PaisOrigen, '') AS PaisOrigen, ISNULL(Moneda, '') AS Moneda, ISNULL(CantidadBultos, 0) AS CantidadBultos, ISNULL(TipoBulto, '') 
                      AS TipoBulto, ISNULL(ContenidoTipoBulto, '') AS ContenidoTipoBulto, ISNULL(NumeroGuia, '') AS NumeroGuia, ISNULL(Transportista, '') 
                      AS Transportista, ISNULL(Marca, '') AS Marca, ISNULL(Modelo, '') AS Modelo, ISNULL(Serie, '') AS Serie, ISNULL(Identificador, 0) AS hijo, 
                      NumeroParte AS salvacion
FROM         MaterialesMaquinaria
WHERE     (ClienteId = @clienteId) AND (Consecutivo = @consecutivo) AND (Identificador = 0) AND (MaterialesOCId <> 0) AND (Proveedor = @Proveedor)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Proveedor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Proveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     Id, FechaRecibo AS Fecha, Proveedor, FacturaProveedor AS FacturaImportacion, MaterialesOCId AS numPO, RenglonId AS LineaPO, 
                      dbo.NumParteMQ(Id) AS NumeroParte, CantidadRecibida, UnidadMedida, PesoBruto, PesoNeto, PaisOrigen, Moneda, CantidadBultos, TipoBulto, 
                      ContenidoTipoBulto, NumeroGuia, Transportista, Marca, Modelo, Serie, Identificador AS hijo
FROM         MaterialesMaquinaria
WHERE     (ClienteId = @clienteId) AND (Consecutivo = @consecutivo)
ORDER BY numPO, LineaPO, idPadre, hijo";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillPadres(Maquinaria.GenerarTXTDataTable dataTable, int clienteId, global::System.Nullable<int> consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(clienteId));
            if ((consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Maquinaria.GenerarTXTDataTable GetData(int clienteId, global::System.Nullable<int> consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(clienteId));
            if ((consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            Maquinaria.GenerarTXTDataTable dataTable = new Maquinaria.GenerarTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProveedor(Maquinaria.GenerarTXTDataTable dataTable, int clienteId, global::System.Nullable<int> consecutivo, string Proveedor) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(clienteId));
            if ((consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Proveedor == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Proveedor));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Maquinaria.GenerarTXTDataTable GetDataByProveedor(int clienteId, global::System.Nullable<int> consecutivo, string Proveedor) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(clienteId));
            if ((consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Proveedor == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Proveedor));
            }
            Maquinaria.GenerarTXTDataTable dataTable = new Maquinaria.GenerarTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBytodos(Maquinaria.GenerarTXTDataTable dataTable, int clienteId, global::System.Nullable<int> consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(clienteId));
            if ((consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Maquinaria.GenerarTXTDataTable GetDataBytodos(int clienteId, global::System.Nullable<int> consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(clienteId));
            if ((consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            Maquinaria.GenerarTXTDataTable dataTable = new Maquinaria.GenerarTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria.GenerarTXTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria dataSet) {
            return this.Adapter.Update(dataSet, "GenerarTXT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesOCMeQTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesOCMeQTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesOCMeQ";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ClienteId", "ClienteId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("CantidadAbierta", "CantidadAbierta");
            tableMapping.ColumnMappings.Add("PqOrd", "PqOrd");
            tableMapping.ColumnMappings.Add("PqRec", "PqRec");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("ProveedorID", "ProveedorID");
            tableMapping.ColumnMappings.Add("NombreProveedor", "NombreProveedor");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("Bultos", "Bultos");
            tableMapping.ColumnMappings.Add("NoGuia", "NoGuia");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("MaterialesMaquinariaID", "MaterialesMaquinariaID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     MaterialesOCMeQ.Id, MaterialesOCMeQ.ClienteId, MaterialesOCMeQ.RenglonId, MaterialesOCMeQ.NumeroParte, MaterialesOCMeQ.Descripcion, 
                      MaterialesOCMeQ.PqOrd - MaterialesOCMeQ.PqRec AS CantidadAbierta, MaterialesOCMeQ.PqOrd, MaterialesOCMeQ.PqRec, 
                      MaterialesOCMeQ.Precio, MaterialesOCMeQ.ProveedorID, MaterialesOCMeQ.NombreProveedor, MaterialesOCMeQ.CantidadRecibida, 
                      MaterialesOCMeQ.UnidadMedida, MaterialesOCMeQ.FacturaProveedor, MaterialesOCMeQ.Bultos, MaterialesOCMeQ.NoGuia, 
                      MaterialesOCMeQ.Moneda, MaterialesOCMeQ.Planta, ISNULL(MaterialesMaquinaria.Id, 0) AS MaterialesMaquinariaID
FROM         MaterialesOCMeQ LEFT OUTER JOIN
                      MaterialesMaquinaria ON MaterialesOCMeQ.Id = MaterialesMaquinaria.MaterialesOCId AND 
                      MaterialesOCMeQ.ClienteId = MaterialesMaquinaria.ClienteId AND MaterialesOCMeQ.RenglonId = MaterialesMaquinaria.RenglonId
WHERE     (MaterialesOCMeQ.Id = @PO) AND (MaterialesOCMeQ.RenglonId = @Linea) AND (MaterialesOCMeQ.ClienteId = 70)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Linea", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Id, ClienteId, RenglonId, NumeroParte, Descripcion, PqOrd - PqRec AS CantidadAbierta, PqOrd, PqRec, Precio, ProveedorID, NombreProveedor, 
                      CantidadRecibida, UnidadMedida, FacturaProveedor, Bultos, NoGuia, Moneda, Planta
FROM         MaterialesOCMeQ
WHERE     (Id = @PO) AND (ClienteId = 70)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillbyPO(Maquinaria.MaterialesOCMeQDataTable dataTable, int PO, int Linea) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PO));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Linea));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Maquinaria.MaterialesOCMeQDataTable GetDataByPO(int PO, int Linea) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PO));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Linea));
            Maquinaria.MaterialesOCMeQDataTable dataTable = new Maquinaria.MaterialesOCMeQDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPO2(Maquinaria.MaterialesOCMeQDataTable dataTable, int PO) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PO));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Maquinaria.MaterialesOCMeQDataTable GetDataByPO2(int PO) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PO));
            Maquinaria.MaterialesOCMeQDataTable dataTable = new Maquinaria.MaterialesOCMeQDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProveedoresTXTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProveedoresTXTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProveedoresTXT";
            tableMapping.ColumnMappings.Add("Proveedor", "Proveedor");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT Proveedor\r\nFROM         MaterialesMaquinaria\r\nWHERE     (Consecut" +
                "ivo = @Consecutivo) AND (MaterialesOCId <> 0) AND (Identificador = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consecutivo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Consecutivo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillbyConsecutivo(Maquinaria.ProveedoresTXTDataTable dataTable, global::System.Nullable<int> Consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Maquinaria.ProveedoresTXTDataTable GetDataConsecutivo(global::System.Nullable<int> Consecutivo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Consecutivo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Consecutivo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            Maquinaria.ProveedoresTXTDataTable dataTable = new Maquinaria.ProveedoresTXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesShippingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesShippingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesShipping";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("PackSum", "PackSum");
            tableMapping.ColumnMappings.Add("fechaRBI", "fechaRBI");
            tableMapping.ColumnMappings.Add("Transportista", "Transportista");
            tableMapping.ColumnMappings.Add("Domestic", "Domestic");
            tableMapping.ColumnMappings.Add("fechaLlegada", "fechaLlegada");
            tableMapping.ColumnMappings.Add("fechaDespacho", "fechaDespacho");
            tableMapping.ColumnMappings.Add("noGuia", "noGuia");
            tableMapping.ColumnMappings.Add("Comentarios", "Comentarios");
            tableMapping.ColumnMappings.Add("fechaCapura", "fechaCapura");
            tableMapping.ColumnMappings.Add("Consignee", "Consignee");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [MaterialesShipping] ([PackSum], [fechaRBI], [Transportista], [Domestic], [fechaLlegada], [fechaDespacho], [noGuia], [Comentarios], [fechaCapura]) VALUES (@PackSum, @fechaRBI, @Transportista, @Domestic, @fechaLlegada, @fechaDespacho, @noGuia, @Comentarios, @fechaCapura)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackSum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackSum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaRBI", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domestic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domestic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaLlegada", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaLlegada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaDespacho", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaDespacho", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaCapura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCapura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, PackSum, fechaRBI, Transportista, Domestic, fechaLlegada, fechaDespach" +
                "o, noGuia, Comentarios, fechaCapura FROM MaterialesShipping";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"IF EXISTS (SELECT     *
                        FROM         materialesShipping
                        WHERE     id = @id) BEGIN
    UPDATE    MaterialesShipping
     SET              PackSum = @PackSum, fechaRBI = @fechaRBI, Transportista = @Transportista, Consignee = @Consignee, Domestic = @Domestic, 
                            fechaLlegada = @fechaLlegada, fechaDespacho = @fechaDespacho, noGuia = @noGuia, Comentarios = @Comentarios
     WHERE     (id = @id) END ELSE BEGIN
                                INSERT      
                                 INTO            MaterialesShipping(PackSum, fechaRBI, Transportista, Consignee, Domestic, fechaLlegada, fechaDespacho, noGuia, Comentarios)
VALUES     (@PackSum,@fechaRBI,@Transportista,@Consignee,@Domestic,@fechaLlegada,@fechaDespacho,@noGuia,@Comentarios) END
                          SELECT     @@identity";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackSum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaRBI", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consignee", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domestic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaLlegada", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaDespacho", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO [MaterialesShipping] ([PackSum], [fechaRBI], [Transportista], [Domest" +
                "ic], [fechaLlegada], [fechaDespacho], [noGuia], [Comentarios])\r\nVALUES (@PackSum" +
                ", @fechaRBI, @Transportista, @Domestic, @fechaLlegada, @fechaDespacho, @noGuia, " +
                "@Comentarios)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackSum", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "PackSum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaRBI", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domestic", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Domestic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaLlegada", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaLlegada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaDespacho", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaDespacho", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"UPDATE    MaterialesShipping
SET              PackSum = @PackSum, fechaRBI = @fechaRBI, Transportista = @Transportista, Consignee = @Consignee, Domestic = @Domestic, 
                      fechaLlegada = @fechaLlegada, fechaDespacho = @fechaDespacho, noGuia = @noGuia, Comentarios = @Comentarios
WHERE     (id = @id)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackSum", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "PackSum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaRBI", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaRBI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transportista", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Transportista", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consignee", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Consignee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domestic", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Domestic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaLlegada", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaLlegada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaDespacho", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "fechaDespacho", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentarios", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "Comentarios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Maquinaria.MaterialesShippingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Maquinaria.MaterialesShippingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Maquinaria.MaterialesShippingDataTable dataTable = new Maquinaria.MaterialesShippingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria.MaterialesShippingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesShipping");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PackSum, global::System.Nullable<global::System.DateTime> fechaRBI, string Transportista, string Domestic, global::System.Nullable<global::System.DateTime> fechaLlegada, global::System.Nullable<global::System.DateTime> fechaDespacho, string noGuia, string Comentarios, global::System.Nullable<global::System.DateTime> fechaCapura) {
            if ((PackSum == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PackSum));
            }
            if ((fechaRBI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(fechaRBI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Transportista == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Transportista));
            }
            if ((Domestic == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Domestic));
            }
            if ((fechaLlegada.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(fechaLlegada.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((fechaDespacho.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(fechaDespacho.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((noGuia == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(noGuia));
            }
            if ((Comentarios == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Comentarios));
            }
            if ((fechaCapura.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(fechaCapura.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object InsertInteligente(int id, string PackSum, System.DateTime fechaRBI, string Transportista, string Consignee, string Domestic, System.DateTime fechaLlegada, System.DateTime fechaDespacho, string noGuia, string Comentarios) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(id));
            if ((PackSum == null)) {
                throw new global::System.ArgumentNullException("PackSum");
            }
            else {
                command.Parameters[1].Value = ((string)(PackSum));
            }
            command.Parameters[2].Value = ((System.DateTime)(fechaRBI));
            if ((Transportista == null)) {
                throw new global::System.ArgumentNullException("Transportista");
            }
            else {
                command.Parameters[3].Value = ((string)(Transportista));
            }
            if ((Consignee == null)) {
                throw new global::System.ArgumentNullException("Consignee");
            }
            else {
                command.Parameters[4].Value = ((string)(Consignee));
            }
            if ((Domestic == null)) {
                throw new global::System.ArgumentNullException("Domestic");
            }
            else {
                command.Parameters[5].Value = ((string)(Domestic));
            }
            command.Parameters[6].Value = ((System.DateTime)(fechaLlegada));
            command.Parameters[7].Value = ((System.DateTime)(fechaDespacho));
            if ((noGuia == null)) {
                throw new global::System.ArgumentNullException("noGuia");
            }
            else {
                command.Parameters[8].Value = ((string)(noGuia));
            }
            if ((Comentarios == null)) {
                throw new global::System.ArgumentNullException("Comentarios");
            }
            else {
                command.Parameters[9].Value = ((string)(Comentarios));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string PackSum, global::System.Nullable<global::System.DateTime> fechaRBI, string Transportista, string Domestic, global::System.Nullable<global::System.DateTime> fechaLlegada, global::System.Nullable<global::System.DateTime> fechaDespacho, string noGuia, string Comentarios) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((PackSum == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(PackSum));
            }
            if ((fechaRBI.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(fechaRBI.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Transportista == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Transportista));
            }
            if ((Domestic == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Domestic));
            }
            if ((fechaLlegada.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(fechaLlegada.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((fechaDespacho.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(fechaDespacho.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((noGuia == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(noGuia));
            }
            if ((Comentarios == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Comentarios));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(string PackSum, global::System.Nullable<global::System.DateTime> fechaRBI, string Transportista, string Consignee, string Domestic, global::System.Nullable<global::System.DateTime> fechaLlegada, global::System.Nullable<global::System.DateTime> fechaDespacho, string noGuia, string Comentarios, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((PackSum == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(PackSum));
            }
            if ((fechaRBI.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(fechaRBI.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Transportista == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Transportista));
            }
            if ((Consignee == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Consignee));
            }
            if ((Domestic == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Domestic));
            }
            if ((fechaLlegada.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(fechaLlegada.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((fechaDespacho.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(fechaDespacho.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((noGuia == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(noGuia));
            }
            if ((Comentarios == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Comentarios));
            }
            command.Parameters[9].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesDanadoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesDanadoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesDanado";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("noGuia", "noGuia");
            tableMapping.ColumnMappings.Add("Comentario", "Comentario");
            tableMapping.ColumnMappings.Add("dirPDF", "dirPDF");
            tableMapping.ColumnMappings.Add("fechaCaptura", "fechaCaptura");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [MaterialesDanado] WHERE (([id] = @Original_id) AND ((@IsNull_noGuia = 1 AND [noGuia] IS NULL) OR ([noGuia] = @Original_noGuia)) AND ((@IsNull_Comentario = 1 AND [Comentario] IS NULL) OR ([Comentario] = @Original_Comentario)) AND ((@IsNull_dirPDF = 1 AND [dirPDF] IS NULL) OR ([dirPDF] = @Original_dirPDF)) AND ((@IsNull_fechaCaptura = 1 AND [fechaCaptura] IS NULL) OR ([fechaCaptura] = @Original_fechaCaptura)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_noGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_noGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comentario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dirPDF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dirPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fechaCaptura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fechaCaptura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MaterialesDanado] ([noGuia], [Comentario], [dirPDF], [fechaCaptura])" +
                " VALUES (@noGuia, @Comentario, @dirPDF, @fechaCaptura);\r\nSELECT id, noGuia, Come" +
                "ntario, dirPDF, fechaCaptura FROM MaterialesDanado WHERE (id = SCOPE_IDENTITY())" +
                "";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dirPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaCaptura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [MaterialesDanado] SET [noGuia] = @noGuia, [Comentario] = @Comentario, [dirPDF] = @dirPDF, [fechaCaptura] = @fechaCaptura WHERE (([id] = @Original_id) AND ((@IsNull_noGuia = 1 AND [noGuia] IS NULL) OR ([noGuia] = @Original_noGuia)) AND ((@IsNull_Comentario = 1 AND [Comentario] IS NULL) OR ([Comentario] = @Original_Comentario)) AND ((@IsNull_dirPDF = 1 AND [dirPDF] IS NULL) OR ([dirPDF] = @Original_dirPDF)) AND ((@IsNull_fechaCaptura = 1 AND [fechaCaptura] IS NULL) OR ([fechaCaptura] = @Original_fechaCaptura)));
SELECT id, noGuia, Comentario, dirPDF, fechaCaptura FROM MaterialesDanado WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dirPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaCaptura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_noGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_noGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comentario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dirPDF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dirPDF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fechaCaptura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fechaCaptura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fechaCaptura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     id, noGuia, Comentario, dirPDF, fechaCaptura\r\nFROM         MaterialesD" +
                "anado";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO MaterialesDanado\r\n                      (noGuia, Comentario)\r\nVALUES " +
                "    (@noGuia,@Comentario); \r\n                          SELECT     @@identity";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "noGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO MaterialesDanado_detalle\r\n                      (id_danado)\r\nVALUES  " +
                "   (@id_danado);\r\n                          SELECT     @@identity; \r\n           " +
                "               SELECT     @@identity";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_danado", global::System.Data.SqlDbType.Int, 10, global::System.Data.ParameterDirection.Input, 0, 0, "id_danado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE [MaterialesDanado] SET  [dirPDF] = @dirPDF where id = @id";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dirPDF", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "dirPDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Maquinaria.MaterialesDanadoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Maquinaria.MaterialesDanadoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Maquinaria.MaterialesDanadoDataTable dataTable = new Maquinaria.MaterialesDanadoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria.MaterialesDanadoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Maquinaria dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesDanado");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> InsertQuery(string noGuia, string Comentario) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((noGuia == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(noGuia));
            }
            if ((Comentario == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Comentario));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> InsertQuery_detalle(int id_danado) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(id_danado));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(string dirPDF, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((dirPDF == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(dirPDF));
            }
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591