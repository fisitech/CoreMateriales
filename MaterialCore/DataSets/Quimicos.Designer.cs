//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MaterialCore.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Quimicos")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Quimicos : global::System.Data.DataSet {
        
        private MaterialesQuimicosDataTable tableMaterialesQuimicos;
        
        private MaterialesOCDataTable tableMaterialesOC;
        
        private MaterialesOCPODataTable tableMaterialesOCPO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Quimicos() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Quimicos(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MaterialesQuimicos"] != null)) {
                    base.Tables.Add(new MaterialesQuimicosDataTable(ds.Tables["MaterialesQuimicos"]));
                }
                if ((ds.Tables["MaterialesOC"] != null)) {
                    base.Tables.Add(new MaterialesOCDataTable(ds.Tables["MaterialesOC"]));
                }
                if ((ds.Tables["MaterialesOCPO"] != null)) {
                    base.Tables.Add(new MaterialesOCPODataTable(ds.Tables["MaterialesOCPO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesQuimicosDataTable MaterialesQuimicos {
            get {
                return this.tableMaterialesQuimicos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesOCDataTable MaterialesOC {
            get {
                return this.tableMaterialesOC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesOCPODataTable MaterialesOCPO {
            get {
                return this.tableMaterialesOCPO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Quimicos cln = ((Quimicos)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MaterialesQuimicos"] != null)) {
                    base.Tables.Add(new MaterialesQuimicosDataTable(ds.Tables["MaterialesQuimicos"]));
                }
                if ((ds.Tables["MaterialesOC"] != null)) {
                    base.Tables.Add(new MaterialesOCDataTable(ds.Tables["MaterialesOC"]));
                }
                if ((ds.Tables["MaterialesOCPO"] != null)) {
                    base.Tables.Add(new MaterialesOCPODataTable(ds.Tables["MaterialesOCPO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMaterialesQuimicos = ((MaterialesQuimicosDataTable)(base.Tables["MaterialesQuimicos"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesQuimicos != null)) {
                    this.tableMaterialesQuimicos.InitVars();
                }
            }
            this.tableMaterialesOC = ((MaterialesOCDataTable)(base.Tables["MaterialesOC"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesOC != null)) {
                    this.tableMaterialesOC.InitVars();
                }
            }
            this.tableMaterialesOCPO = ((MaterialesOCPODataTable)(base.Tables["MaterialesOCPO"]));
            if ((initTable == true)) {
                if ((this.tableMaterialesOCPO != null)) {
                    this.tableMaterialesOCPO.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Quimicos";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Quimicos.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMaterialesQuimicos = new MaterialesQuimicosDataTable();
            base.Tables.Add(this.tableMaterialesQuimicos);
            this.tableMaterialesOC = new MaterialesOCDataTable();
            base.Tables.Add(this.tableMaterialesOC);
            this.tableMaterialesOCPO = new MaterialesOCPODataTable();
            base.Tables.Add(this.tableMaterialesOCPO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesQuimicos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesOC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaterialesOCPO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Quimicos ds = new Quimicos();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MaterialesQuimicosRowChangeEventHandler(object sender, MaterialesQuimicosRowChangeEvent e);
        
        public delegate void MaterialesOCRowChangeEventHandler(object sender, MaterialesOCRowChangeEvent e);
        
        public delegate void MaterialesOCPORowChangeEventHandler(object sender, MaterialesOCPORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesQuimicosDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnFechaRegistro;
            
            private global::System.Data.DataColumn columnClienteId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosDataTable() {
                this.TableName = "MaterialesQuimicos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesQuimicosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesQuimicosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaRegistroColumn {
                get {
                    return this.columnFechaRegistro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIdColumn {
                get {
                    return this.columnClienteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosRow this[int index] {
                get {
                    return ((MaterialesQuimicosRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesQuimicosRowChangeEventHandler MaterialesQuimicosRowChanging;
            
            public event MaterialesQuimicosRowChangeEventHandler MaterialesQuimicosRowChanged;
            
            public event MaterialesQuimicosRowChangeEventHandler MaterialesQuimicosRowDeleting;
            
            public event MaterialesQuimicosRowChangeEventHandler MaterialesQuimicosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesQuimicosRow(MaterialesQuimicosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosRow AddMaterialesQuimicosRow(string NumeroParte, string Descripcion, System.DateTime FechaRegistro, int ClienteId) {
                MaterialesQuimicosRow rowMaterialesQuimicosRow = ((MaterialesQuimicosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumeroParte,
                        Descripcion,
                        FechaRegistro,
                        ClienteId};
                rowMaterialesQuimicosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesQuimicosRow);
                return rowMaterialesQuimicosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosRow FindByNumeroParteClienteId(string NumeroParte, int ClienteId) {
                return ((MaterialesQuimicosRow)(this.Rows.Find(new object[] {
                            NumeroParte,
                            ClienteId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesQuimicosDataTable cln = ((MaterialesQuimicosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesQuimicosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnFechaRegistro = base.Columns["FechaRegistro"];
                this.columnClienteId = base.Columns["ClienteId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnFechaRegistro = new global::System.Data.DataColumn("FechaRegistro", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRegistro);
                this.columnClienteId = new global::System.Data.DataColumn("ClienteId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNumeroParte,
                                this.columnClienteId}, true));
                this.columnNumeroParte.AllowDBNull = false;
                this.columnNumeroParte.MaxLength = 50;
                this.columnDescripcion.MaxLength = 200;
                this.columnFechaRegistro.AllowDBNull = false;
                this.columnClienteId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosRow NewMaterialesQuimicosRow() {
                return ((MaterialesQuimicosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesQuimicosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesQuimicosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesQuimicosRowChanged != null)) {
                    this.MaterialesQuimicosRowChanged(this, new MaterialesQuimicosRowChangeEvent(((MaterialesQuimicosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesQuimicosRowChanging != null)) {
                    this.MaterialesQuimicosRowChanging(this, new MaterialesQuimicosRowChangeEvent(((MaterialesQuimicosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesQuimicosRowDeleted != null)) {
                    this.MaterialesQuimicosRowDeleted(this, new MaterialesQuimicosRowChangeEvent(((MaterialesQuimicosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesQuimicosRowDeleting != null)) {
                    this.MaterialesQuimicosRowDeleting(this, new MaterialesQuimicosRowChangeEvent(((MaterialesQuimicosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesQuimicosRow(MaterialesQuimicosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Quimicos ds = new Quimicos();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesQuimicosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesOCDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnClienteId;
            
            private global::System.Data.DataColumn columnRenglonId;
            
            private global::System.Data.DataColumn columnNumeroParte;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnCantidadOriginal;
            
            private global::System.Data.DataColumn columnPqOrd;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnDescripcion_P;
            
            private global::System.Data.DataColumn columnFechaRecibo;
            
            private global::System.Data.DataColumn columnCantidadRecibida;
            
            private global::System.Data.DataColumn columnUnidadMedida;
            
            private global::System.Data.DataColumn columnFacturaProveedor;
            
            private global::System.Data.DataColumn columnPais;
            
            private global::System.Data.DataColumn columnPlanta;
            
            private global::System.Data.DataColumn columnComentario;
            
            private global::System.Data.DataColumn columnBultos;
            
            private global::System.Data.DataColumn columnNoGuia;
            
            private global::System.Data.DataColumn columnMoneda;
            
            private global::System.Data.DataColumn columnProgramaId;
            
            private global::System.Data.DataColumn columnDrawingId;
            
            private global::System.Data.DataColumn columnProveedorID;
            
            private global::System.Data.DataColumn columnNombreProveedor;
            
            private global::System.Data.DataColumn columnText1;
            
            private global::System.Data.DataColumn columnCantidadAbierta;
            
            private global::System.Data.DataColumn columnPqRec;
            
            private global::System.Data.DataColumn columnescaneado;
            
            private global::System.Data.DataColumn columnITAR;
            
            private global::System.Data.DataColumn columnQuimico;
            
            private global::System.Data.DataColumn columnfecha_sku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCDataTable() {
                this.TableName = "MaterialesOC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesOCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesOCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteIdColumn {
                get {
                    return this.columnClienteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenglonIdColumn {
                get {
                    return this.columnRenglonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroParteColumn {
                get {
                    return this.columnNumeroParte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadOriginalColumn {
                get {
                    return this.columnCantidadOriginal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PqOrdColumn {
                get {
                    return this.columnPqOrd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Descripcion_PColumn {
                get {
                    return this.columnDescripcion_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaReciboColumn {
                get {
                    return this.columnFechaRecibo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadRecibidaColumn {
                get {
                    return this.columnCantidadRecibida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadMedidaColumn {
                get {
                    return this.columnUnidadMedida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacturaProveedorColumn {
                get {
                    return this.columnFacturaProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisColumn {
                get {
                    return this.columnPais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantaColumn {
                get {
                    return this.columnPlanta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentarioColumn {
                get {
                    return this.columnComentario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BultosColumn {
                get {
                    return this.columnBultos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGuiaColumn {
                get {
                    return this.columnNoGuia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramaIdColumn {
                get {
                    return this.columnProgramaId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrawingIdColumn {
                get {
                    return this.columnDrawingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProveedorIDColumn {
                get {
                    return this.columnProveedorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreProveedorColumn {
                get {
                    return this.columnNombreProveedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Text1Column {
                get {
                    return this.columnText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadAbiertaColumn {
                get {
                    return this.columnCantidadAbierta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PqRecColumn {
                get {
                    return this.columnPqRec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn escaneadoColumn {
                get {
                    return this.columnescaneado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITARColumn {
                get {
                    return this.columnITAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuimicoColumn {
                get {
                    return this.columnQuimico;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fecha_skuColumn {
                get {
                    return this.columnfecha_sku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCRow this[int index] {
                get {
                    return ((MaterialesOCRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesOCRowChangeEventHandler MaterialesOCRowChanging;
            
            public event MaterialesOCRowChangeEventHandler MaterialesOCRowChanged;
            
            public event MaterialesOCRowChangeEventHandler MaterialesOCRowDeleting;
            
            public event MaterialesOCRowChangeEventHandler MaterialesOCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesOCRow(MaterialesOCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCRow AddMaterialesOCRow(
                        int Id, 
                        int ClienteId, 
                        int RenglonId, 
                        string NumeroParte, 
                        string Descripcion, 
                        decimal CantidadOriginal, 
                        decimal PqOrd, 
                        decimal Precio, 
                        string Descripcion_P, 
                        System.DateTime FechaRecibo, 
                        decimal CantidadRecibida, 
                        string UnidadMedida, 
                        string FacturaProveedor, 
                        string Pais, 
                        string Planta, 
                        string Comentario, 
                        int Bultos, 
                        string NoGuia, 
                        string Moneda, 
                        string ProgramaId, 
                        string DrawingId, 
                        string ProveedorID, 
                        string NombreProveedor, 
                        string Text1, 
                        decimal CantidadAbierta, 
                        decimal PqRec, 
                        int escaneado, 
                        int ITAR, 
                        int Quimico, 
                        System.DateTime fecha_sku) {
                MaterialesOCRow rowMaterialesOCRow = ((MaterialesOCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        ClienteId,
                        RenglonId,
                        NumeroParte,
                        Descripcion,
                        CantidadOriginal,
                        PqOrd,
                        Precio,
                        Descripcion_P,
                        FechaRecibo,
                        CantidadRecibida,
                        UnidadMedida,
                        FacturaProveedor,
                        Pais,
                        Planta,
                        Comentario,
                        Bultos,
                        NoGuia,
                        Moneda,
                        ProgramaId,
                        DrawingId,
                        ProveedorID,
                        NombreProveedor,
                        Text1,
                        CantidadAbierta,
                        PqRec,
                        escaneado,
                        ITAR,
                        Quimico,
                        fecha_sku};
                rowMaterialesOCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesOCRow);
                return rowMaterialesOCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCRow FindByIdClienteIdRenglonId(int Id, int ClienteId, int RenglonId) {
                return ((MaterialesOCRow)(this.Rows.Find(new object[] {
                            Id,
                            ClienteId,
                            RenglonId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesOCDataTable cln = ((MaterialesOCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesOCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnClienteId = base.Columns["ClienteId"];
                this.columnRenglonId = base.Columns["RenglonId"];
                this.columnNumeroParte = base.Columns["NumeroParte"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnCantidadOriginal = base.Columns["CantidadOriginal"];
                this.columnPqOrd = base.Columns["PqOrd"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnDescripcion_P = base.Columns["Descripcion_P"];
                this.columnFechaRecibo = base.Columns["FechaRecibo"];
                this.columnCantidadRecibida = base.Columns["CantidadRecibida"];
                this.columnUnidadMedida = base.Columns["UnidadMedida"];
                this.columnFacturaProveedor = base.Columns["FacturaProveedor"];
                this.columnPais = base.Columns["Pais"];
                this.columnPlanta = base.Columns["Planta"];
                this.columnComentario = base.Columns["Comentario"];
                this.columnBultos = base.Columns["Bultos"];
                this.columnNoGuia = base.Columns["NoGuia"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnProgramaId = base.Columns["ProgramaId"];
                this.columnDrawingId = base.Columns["DrawingId"];
                this.columnProveedorID = base.Columns["ProveedorID"];
                this.columnNombreProveedor = base.Columns["NombreProveedor"];
                this.columnText1 = base.Columns["Text1"];
                this.columnCantidadAbierta = base.Columns["CantidadAbierta"];
                this.columnPqRec = base.Columns["PqRec"];
                this.columnescaneado = base.Columns["escaneado"];
                this.columnITAR = base.Columns["ITAR"];
                this.columnQuimico = base.Columns["Quimico"];
                this.columnfecha_sku = base.Columns["fecha_sku"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnClienteId = new global::System.Data.DataColumn("ClienteId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteId);
                this.columnRenglonId = new global::System.Data.DataColumn("RenglonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenglonId);
                this.columnNumeroParte = new global::System.Data.DataColumn("NumeroParte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroParte);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnCantidadOriginal = new global::System.Data.DataColumn("CantidadOriginal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadOriginal);
                this.columnPqOrd = new global::System.Data.DataColumn("PqOrd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPqOrd);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnDescripcion_P = new global::System.Data.DataColumn("Descripcion_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion_P);
                this.columnFechaRecibo = new global::System.Data.DataColumn("FechaRecibo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRecibo);
                this.columnCantidadRecibida = new global::System.Data.DataColumn("CantidadRecibida", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadRecibida);
                this.columnUnidadMedida = new global::System.Data.DataColumn("UnidadMedida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadMedida);
                this.columnFacturaProveedor = new global::System.Data.DataColumn("FacturaProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacturaProveedor);
                this.columnPais = new global::System.Data.DataColumn("Pais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPais);
                this.columnPlanta = new global::System.Data.DataColumn("Planta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanta);
                this.columnComentario = new global::System.Data.DataColumn("Comentario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentario);
                this.columnBultos = new global::System.Data.DataColumn("Bultos", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBultos);
                this.columnNoGuia = new global::System.Data.DataColumn("NoGuia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGuia);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnProgramaId = new global::System.Data.DataColumn("ProgramaId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramaId);
                this.columnDrawingId = new global::System.Data.DataColumn("DrawingId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrawingId);
                this.columnProveedorID = new global::System.Data.DataColumn("ProveedorID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProveedorID);
                this.columnNombreProveedor = new global::System.Data.DataColumn("NombreProveedor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreProveedor);
                this.columnText1 = new global::System.Data.DataColumn("Text1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText1);
                this.columnCantidadAbierta = new global::System.Data.DataColumn("CantidadAbierta", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadAbierta);
                this.columnPqRec = new global::System.Data.DataColumn("PqRec", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPqRec);
                this.columnescaneado = new global::System.Data.DataColumn("escaneado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnescaneado);
                this.columnITAR = new global::System.Data.DataColumn("ITAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITAR);
                this.columnQuimico = new global::System.Data.DataColumn("Quimico", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuimico);
                this.columnfecha_sku = new global::System.Data.DataColumn("fecha_sku", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha_sku);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId,
                                this.columnClienteId,
                                this.columnRenglonId}, true));
                this.columnId.AllowDBNull = false;
                this.columnClienteId.AllowDBNull = false;
                this.columnRenglonId.AllowDBNull = false;
                this.columnNumeroParte.MaxLength = 50;
                this.columnDescripcion.MaxLength = 200;
                this.columnDescripcion_P.MaxLength = 200;
                this.columnUnidadMedida.MaxLength = 10;
                this.columnFacturaProveedor.MaxLength = 45;
                this.columnPais.MaxLength = 10;
                this.columnPlanta.MaxLength = 10;
                this.columnComentario.MaxLength = 250;
                this.columnNoGuia.MaxLength = 75;
                this.columnMoneda.MaxLength = 10;
                this.columnProgramaId.MaxLength = 50;
                this.columnDrawingId.MaxLength = 80;
                this.columnProveedorID.MaxLength = 150;
                this.columnNombreProveedor.MaxLength = 250;
                this.columnText1.MaxLength = 50;
                this.columnCantidadAbierta.ReadOnly = true;
                this.columnescaneado.ReadOnly = true;
                this.columnITAR.ReadOnly = true;
                this.columnQuimico.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCRow NewMaterialesOCRow() {
                return ((MaterialesOCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesOCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesOCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesOCRowChanged != null)) {
                    this.MaterialesOCRowChanged(this, new MaterialesOCRowChangeEvent(((MaterialesOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesOCRowChanging != null)) {
                    this.MaterialesOCRowChanging(this, new MaterialesOCRowChangeEvent(((MaterialesOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesOCRowDeleted != null)) {
                    this.MaterialesOCRowDeleted(this, new MaterialesOCRowChangeEvent(((MaterialesOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesOCRowDeleting != null)) {
                    this.MaterialesOCRowDeleting(this, new MaterialesOCRowChangeEvent(((MaterialesOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesOCRow(MaterialesOCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Quimicos ds = new Quimicos();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesOCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaterialesOCPODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPODataTable() {
                this.TableName = "MaterialesOCPO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesOCPODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaterialesOCPODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPORow this[int index] {
                get {
                    return ((MaterialesOCPORow)(this.Rows[index]));
                }
            }
            
            public event MaterialesOCPORowChangeEventHandler MaterialesOCPORowChanging;
            
            public event MaterialesOCPORowChangeEventHandler MaterialesOCPORowChanged;
            
            public event MaterialesOCPORowChangeEventHandler MaterialesOCPORowDeleting;
            
            public event MaterialesOCPORowChangeEventHandler MaterialesOCPORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaterialesOCPORow(MaterialesOCPORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPORow AddMaterialesOCPORow(long Id) {
                MaterialesOCPORow rowMaterialesOCPORow = ((MaterialesOCPORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id};
                rowMaterialesOCPORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaterialesOCPORow);
                return rowMaterialesOCPORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPORow FindById(long Id) {
                return ((MaterialesOCPORow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaterialesOCPODataTable cln = ((MaterialesOCPODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaterialesOCPODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPORow NewMaterialesOCPORow() {
                return ((MaterialesOCPORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaterialesOCPORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaterialesOCPORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesOCPORowChanged != null)) {
                    this.MaterialesOCPORowChanged(this, new MaterialesOCPORowChangeEvent(((MaterialesOCPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesOCPORowChanging != null)) {
                    this.MaterialesOCPORowChanging(this, new MaterialesOCPORowChangeEvent(((MaterialesOCPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesOCPORowDeleted != null)) {
                    this.MaterialesOCPORowDeleted(this, new MaterialesOCPORowChangeEvent(((MaterialesOCPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesOCPORowDeleting != null)) {
                    this.MaterialesOCPORowDeleting(this, new MaterialesOCPORowChangeEvent(((MaterialesOCPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaterialesOCPORow(MaterialesOCPORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Quimicos ds = new Quimicos();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaterialesOCPODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesQuimicosRow : global::System.Data.DataRow {
            
            private MaterialesQuimicosDataTable tableMaterialesQuimicos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesQuimicosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesQuimicos = ((MaterialesQuimicosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    return ((string)(this[this.tableMaterialesQuimicos.NumeroParteColumn]));
                }
                set {
                    this[this.tableMaterialesQuimicos.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesQuimicos.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'MaterialesQuimicos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesQuimicos.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRegistro {
                get {
                    return ((global::System.DateTime)(this[this.tableMaterialesQuimicos.FechaRegistroColumn]));
                }
                set {
                    this[this.tableMaterialesQuimicos.FechaRegistroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteId {
                get {
                    return ((int)(this[this.tableMaterialesQuimicos.ClienteIdColumn]));
                }
                set {
                    this[this.tableMaterialesQuimicos.ClienteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableMaterialesQuimicos.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableMaterialesQuimicos.DescripcionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesOCRow : global::System.Data.DataRow {
            
            private MaterialesOCDataTable tableMaterialesOC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesOCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesOC = ((MaterialesOCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableMaterialesOC.IdColumn]));
                }
                set {
                    this[this.tableMaterialesOC.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteId {
                get {
                    return ((int)(this[this.tableMaterialesOC.ClienteIdColumn]));
                }
                set {
                    this[this.tableMaterialesOC.ClienteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RenglonId {
                get {
                    return ((int)(this[this.tableMaterialesOC.RenglonIdColumn]));
                }
                set {
                    this[this.tableMaterialesOC.RenglonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroParte {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.NumeroParteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroParte\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.NumeroParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadOriginal {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOC.CantidadOriginalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadOriginal\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.CantidadOriginalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PqOrd {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOC.PqOrdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PqOrd\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.PqOrdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOC.PrecioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precio\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion_P {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.Descripcion_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion_P\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.Descripcion_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRecibo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesOC.FechaReciboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaRecibo\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.FechaReciboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadRecibida {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOC.CantidadRecibidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadRecibida\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.CantidadRecibidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadMedida {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.UnidadMedidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadMedida\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.UnidadMedidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacturaProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.FacturaProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacturaProveedor\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.FacturaProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pais {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.PaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pais\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.PaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Planta {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.PlantaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planta\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.PlantaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentario {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.ComentarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentario\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.ComentarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bultos {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesOC.BultosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bultos\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.BultosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGuia {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.NoGuiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGuia\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.NoGuiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moneda\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProgramaId {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.ProgramaIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramaId\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.ProgramaIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrawingId {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.DrawingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrawingId\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.DrawingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProveedorID {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.ProveedorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProveedorID\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.ProveedorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreProveedor {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.NombreProveedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreProveedor\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.NombreProveedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Text1 {
                get {
                    try {
                        return ((string)(this[this.tableMaterialesOC.Text1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Text1\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.Text1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CantidadAbierta {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOC.CantidadAbiertaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CantidadAbierta\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.CantidadAbiertaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PqRec {
                get {
                    try {
                        return ((decimal)(this[this.tableMaterialesOC.PqRecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PqRec\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.PqRecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int escaneado {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesOC.escaneadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'escaneado\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.escaneadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITAR {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesOC.ITARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITAR\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.ITARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quimico {
                get {
                    try {
                        return ((int)(this[this.tableMaterialesOC.QuimicoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quimico\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.QuimicoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha_sku {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaterialesOC.fecha_skuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha_sku\' in table \'MaterialesOC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialesOC.fecha_skuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroParteNull() {
                return this.IsNull(this.tableMaterialesOC.NumeroParteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroParteNull() {
                this[this.tableMaterialesOC.NumeroParteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableMaterialesOC.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableMaterialesOC.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadOriginalNull() {
                return this.IsNull(this.tableMaterialesOC.CantidadOriginalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadOriginalNull() {
                this[this.tableMaterialesOC.CantidadOriginalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPqOrdNull() {
                return this.IsNull(this.tableMaterialesOC.PqOrdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPqOrdNull() {
                this[this.tableMaterialesOC.PqOrdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioNull() {
                return this.IsNull(this.tableMaterialesOC.PrecioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioNull() {
                this[this.tableMaterialesOC.PrecioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcion_PNull() {
                return this.IsNull(this.tableMaterialesOC.Descripcion_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcion_PNull() {
                this[this.tableMaterialesOC.Descripcion_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaReciboNull() {
                return this.IsNull(this.tableMaterialesOC.FechaReciboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaReciboNull() {
                this[this.tableMaterialesOC.FechaReciboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadRecibidaNull() {
                return this.IsNull(this.tableMaterialesOC.CantidadRecibidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadRecibidaNull() {
                this[this.tableMaterialesOC.CantidadRecibidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadMedidaNull() {
                return this.IsNull(this.tableMaterialesOC.UnidadMedidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadMedidaNull() {
                this[this.tableMaterialesOC.UnidadMedidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacturaProveedorNull() {
                return this.IsNull(this.tableMaterialesOC.FacturaProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacturaProveedorNull() {
                this[this.tableMaterialesOC.FacturaProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisNull() {
                return this.IsNull(this.tableMaterialesOC.PaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisNull() {
                this[this.tableMaterialesOC.PaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantaNull() {
                return this.IsNull(this.tableMaterialesOC.PlantaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantaNull() {
                this[this.tableMaterialesOC.PlantaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentarioNull() {
                return this.IsNull(this.tableMaterialesOC.ComentarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentarioNull() {
                this[this.tableMaterialesOC.ComentarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBultosNull() {
                return this.IsNull(this.tableMaterialesOC.BultosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBultosNull() {
                this[this.tableMaterialesOC.BultosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGuiaNull() {
                return this.IsNull(this.tableMaterialesOC.NoGuiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGuiaNull() {
                this[this.tableMaterialesOC.NoGuiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tableMaterialesOC.MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tableMaterialesOC.MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramaIdNull() {
                return this.IsNull(this.tableMaterialesOC.ProgramaIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramaIdNull() {
                this[this.tableMaterialesOC.ProgramaIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrawingIdNull() {
                return this.IsNull(this.tableMaterialesOC.DrawingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrawingIdNull() {
                this[this.tableMaterialesOC.DrawingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProveedorIDNull() {
                return this.IsNull(this.tableMaterialesOC.ProveedorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProveedorIDNull() {
                this[this.tableMaterialesOC.ProveedorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreProveedorNull() {
                return this.IsNull(this.tableMaterialesOC.NombreProveedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreProveedorNull() {
                this[this.tableMaterialesOC.NombreProveedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsText1Null() {
                return this.IsNull(this.tableMaterialesOC.Text1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetText1Null() {
                this[this.tableMaterialesOC.Text1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadAbiertaNull() {
                return this.IsNull(this.tableMaterialesOC.CantidadAbiertaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadAbiertaNull() {
                this[this.tableMaterialesOC.CantidadAbiertaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPqRecNull() {
                return this.IsNull(this.tableMaterialesOC.PqRecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPqRecNull() {
                this[this.tableMaterialesOC.PqRecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsescaneadoNull() {
                return this.IsNull(this.tableMaterialesOC.escaneadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetescaneadoNull() {
                this[this.tableMaterialesOC.escaneadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITARNull() {
                return this.IsNull(this.tableMaterialesOC.ITARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITARNull() {
                this[this.tableMaterialesOC.ITARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuimicoNull() {
                return this.IsNull(this.tableMaterialesOC.QuimicoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuimicoNull() {
                this[this.tableMaterialesOC.QuimicoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfecha_skuNull() {
                return this.IsNull(this.tableMaterialesOC.fecha_skuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfecha_skuNull() {
                this[this.tableMaterialesOC.fecha_skuColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaterialesOCPORow : global::System.Data.DataRow {
            
            private MaterialesOCPODataTable tableMaterialesOCPO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaterialesOCPORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialesOCPO = ((MaterialesOCPODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Id {
                get {
                    return ((long)(this[this.tableMaterialesOCPO.IdColumn]));
                }
                set {
                    this[this.tableMaterialesOCPO.IdColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesQuimicosRowChangeEvent : global::System.EventArgs {
            
            private MaterialesQuimicosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosRowChangeEvent(MaterialesQuimicosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesQuimicosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesOCRowChangeEvent : global::System.EventArgs {
            
            private MaterialesOCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCRowChangeEvent(MaterialesOCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaterialesOCPORowChangeEvent : global::System.EventArgs {
            
            private MaterialesOCPORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPORowChangeEvent(MaterialesOCPORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaterialesOCPORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MaterialCore.DataSets.QuimicosTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesQuimicosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesQuimicosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesQuimicos";
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("FechaRegistro", "FechaRegistro");
            tableMapping.ColumnMappings.Add("ClienteId", "ClienteId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [MaterialesQuimicos] WHERE (([NumeroParte] = @Original_NumeroParte) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcion)) AND ([FechaRegistro] = @Original_FechaRegistro) AND ([ClienteId] = @Original_ClienteId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaRegistro", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRegistro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [MaterialesQuimicos] ([NumeroParte], [Descripcion], [FechaRegistro], [ClienteId]) VALUES (@NumeroParte, @Descripcion, @FechaRegistro, @ClienteId);
SELECT NumeroParte, Descripcion, FechaRegistro, ClienteId FROM MaterialesQuimicos WHERE (ClienteId = @ClienteId) AND (NumeroParte = @NumeroParte) ORDER BY NumeroParte";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRegistro", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRegistro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [MaterialesQuimicos] SET [NumeroParte] = @NumeroParte, [Descripcion] = @Descripcion, [FechaRegistro] = @FechaRegistro, [ClienteId] = @ClienteId WHERE (([NumeroParte] = @Original_NumeroParte) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcion)) AND ([FechaRegistro] = @Original_FechaRegistro) AND ([ClienteId] = @Original_ClienteId));
SELECT NumeroParte, Descripcion, FechaRegistro, ClienteId FROM MaterialesQuimicos WHERE (ClienteId = @ClienteId) AND (NumeroParte = @NumeroParte) ORDER BY NumeroParte";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRegistro", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRegistro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaRegistro", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRegistro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM MaterialesQuimicos ORDER BY NumeroParte";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM MaterialesQuimicos\r\nWHERE     (NumeroParte = @NumeroParte)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO MaterialesQuimicos\r\n                      (NumeroParte, Descripcion, " +
                "FechaRegistro, ClienteId)\r\nVALUES     (@NumeroParte,@Descripcion, GETDATE(),@Cli" +
                "enteId)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE MaterialesQuimicos\r\nSET Descripcion = @Descripcion\r\nWHERE NumeroParte = @N" +
                "umeroParte AND ClienteId = @ClienteId";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Quimicos.MaterialesQuimicosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Quimicos.MaterialesQuimicosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Quimicos.MaterialesQuimicosDataTable dataTable = new Quimicos.MaterialesQuimicosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Quimicos.MaterialesQuimicosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Quimicos dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesQuimicos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object DeleteQuery(string NumeroParte) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((NumeroParte == null)) {
                throw new global::System.ArgumentNullException("NumeroParte");
            }
            else {
                command.Parameters[0].Value = ((string)(NumeroParte));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int InsertQuery(string NumeroParte, string Descripcion, int ClienteId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((NumeroParte == null)) {
                throw new global::System.ArgumentNullException("NumeroParte");
            }
            else {
                command.Parameters[0].Value = ((string)(NumeroParte));
            }
            if ((Descripcion == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Descripcion));
            }
            command.Parameters[2].Value = ((int)(ClienteId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(string Descripcion, string NumeroParte, int ClienteId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Descripcion == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Descripcion));
            }
            if ((NumeroParte == null)) {
                throw new global::System.ArgumentNullException("NumeroParte");
            }
            else {
                command.Parameters[1].Value = ((string)(NumeroParte));
            }
            command.Parameters[2].Value = ((int)(ClienteId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesOCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesOCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesOC";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ClienteId", "ClienteId");
            tableMapping.ColumnMappings.Add("RenglonId", "RenglonId");
            tableMapping.ColumnMappings.Add("NumeroParte", "NumeroParte");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("CantidadOriginal", "CantidadOriginal");
            tableMapping.ColumnMappings.Add("PqOrd", "PqOrd");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("Descripcion_P", "Descripcion_P");
            tableMapping.ColumnMappings.Add("FechaRecibo", "FechaRecibo");
            tableMapping.ColumnMappings.Add("CantidadRecibida", "CantidadRecibida");
            tableMapping.ColumnMappings.Add("UnidadMedida", "UnidadMedida");
            tableMapping.ColumnMappings.Add("FacturaProveedor", "FacturaProveedor");
            tableMapping.ColumnMappings.Add("Pais", "Pais");
            tableMapping.ColumnMappings.Add("Planta", "Planta");
            tableMapping.ColumnMappings.Add("Comentario", "Comentario");
            tableMapping.ColumnMappings.Add("Bultos", "Bultos");
            tableMapping.ColumnMappings.Add("NoGuia", "NoGuia");
            tableMapping.ColumnMappings.Add("Moneda", "Moneda");
            tableMapping.ColumnMappings.Add("ProgramaId", "ProgramaId");
            tableMapping.ColumnMappings.Add("DrawingId", "DrawingId");
            tableMapping.ColumnMappings.Add("ProveedorID", "ProveedorID");
            tableMapping.ColumnMappings.Add("NombreProveedor", "NombreProveedor");
            tableMapping.ColumnMappings.Add("Text1", "Text1");
            tableMapping.ColumnMappings.Add("CantidadAbierta", "CantidadAbierta");
            tableMapping.ColumnMappings.Add("PqRec", "PqRec");
            tableMapping.ColumnMappings.Add("escaneado", "escaneado");
            tableMapping.ColumnMappings.Add("ITAR", "ITAR");
            tableMapping.ColumnMappings.Add("Quimico", "Quimico");
            tableMapping.ColumnMappings.Add("fecha_sku", "fecha_sku");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MaterialesOC] WHERE (([Id] = @Original_Id) AND ([ClienteId] = @Origi" +
                "nal_ClienteId) AND ([RenglonId] = @Original_RenglonId) AND ((@IsNull_NumeroParte" +
                " = 1 AND [NumeroParte] IS NULL) OR ([NumeroParte] = @Original_NumeroParte)) AND " +
                "((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Origin" +
                "al_Descripcion)) AND ((@IsNull_CantidadOriginal = 1 AND [CantidadOriginal] IS NU" +
                "LL) OR ([CantidadOriginal] = @Original_CantidadOriginal)) AND ((@IsNull_PqOrd = " +
                "1 AND [PqOrd] IS NULL) OR ([PqOrd] = @Original_PqOrd)) AND ((@IsNull_PqRec = 1 A" +
                "ND [PqRec] IS NULL) OR ([PqRec] = @Original_PqRec)) AND ((@IsNull_Precio = 1 AND" +
                " [Precio] IS NULL) OR ([Precio] = @Original_Precio)) AND ((@IsNull_ProveedorID =" +
                " 1 AND [ProveedorID] IS NULL) OR ([ProveedorID] = @Original_ProveedorID)) AND ((" +
                "@IsNull_Descripcion_P = 1 AND [Descripcion_P] IS NULL) OR ([Descripcion_P] = @Or" +
                "iginal_Descripcion_P)) AND ((@IsNull_FechaRecibo = 1 AND [FechaRecibo] IS NULL) " +
                "OR ([FechaRecibo] = @Original_FechaRecibo)) AND ((@IsNull_UnidadMedida = 1 AND [" +
                "UnidadMedida] IS NULL) OR ([UnidadMedida] = @Original_UnidadMedida)) AND ((@IsNu" +
                "ll_FacturaProveedor = 1 AND [FacturaProveedor] IS NULL) OR ([FacturaProveedor] =" +
                " @Original_FacturaProveedor)) AND ((@IsNull_Pais = 1 AND [Pais] IS NULL) OR ([Pa" +
                "is] = @Original_Pais)) AND ((@IsNull_Planta = 1 AND [Planta] IS NULL) OR ([Plant" +
                "a] = @Original_Planta)) AND ((@IsNull_Comentario = 1 AND [Comentario] IS NULL) O" +
                "R ([Comentario] = @Original_Comentario)) AND ((@IsNull_Bultos = 1 AND [Bultos] I" +
                "S NULL) OR ([Bultos] = @Original_Bultos)) AND ((@IsNull_NoGuia = 1 AND [NoGuia] " +
                "IS NULL) OR ([NoGuia] = @Original_NoGuia)) AND ((@IsNull_Moneda = 1 AND [Moneda]" +
                " IS NULL) OR ([Moneda] = @Original_Moneda)) AND ((@IsNull_ProgramaId = 1 AND [Pr" +
                "ogramaId] IS NULL) OR ([ProgramaId] = @Original_ProgramaId)) AND ((@IsNull_Drawi" +
                "ngId = 1 AND [DrawingId] IS NULL) OR ([DrawingId] = @Original_DrawingId)) AND ((" +
                "@IsNull_NombreProveedor = 1 AND [NombreProveedor] IS NULL) OR ([NombreProveedor]" +
                " = @Original_NombreProveedor)) AND ((@IsNull_Text1 = 1 AND [Text1] IS NULL) OR (" +
                "[Text1] = @Original_Text1)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroParte", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadOriginal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadOriginal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadOriginal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadOriginal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PqOrd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PqOrd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PqOrd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqOrd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PqRec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PqRec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PqRec", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqRec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Precio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Precio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "Precio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProveedorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProveedorID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaRecibo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnidadMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacturaProveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacturaProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pais", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Planta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Planta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comentario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProgramaId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProgramaId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DrawingId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrawingId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DrawingId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrawingId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NombreProveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NombreProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Text1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Text1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [MaterialesOC] ([Id], [ClienteId], [RenglonId], [NumeroParte], [Descripcion], [CantidadOriginal], [PqOrd], [PqRec], [Precio], [ProveedorID], [Descripcion_P], [FechaRecibo], [UnidadMedida], [FacturaProveedor], [Pais], [Planta], [Comentario], [Bultos], [NoGuia], [Moneda], [ProgramaId], [DrawingId], [NombreProveedor], [Text1]) VALUES (@Id, @ClienteId, @RenglonId, @NumeroParte, @Descripcion, @CantidadOriginal, @PqOrd, @PqRec, @Precio, @ProveedorID, @Descripcion_P, @FechaRecibo, @UnidadMedida, @FacturaProveedor, @Pais, @Planta, @Comentario, @Bultos, @NoGuia, @Moneda, @ProgramaId, @DrawingId, @NombreProveedor, @Text1);
SELECT Id, ClienteId, RenglonId, NumeroParte, Descripcion, PqOrd - PqRec AS CantidadAbierta, CantidadOriginal, PqOrd, PqRec, Precio, ProveedorID, Descripcion_P, FechaRecibo, ISNULL(CantidadRecibida, 0) AS CantidadRecibida, UnidadMedida, FacturaProveedor, Pais, Planta, Comentario, Bultos, NoGuia, Moneda, ProgramaId, DrawingId, NombreProveedor, Text1 FROM MaterialesOC WHERE (ClienteId = @ClienteId) AND (Id = @Id) AND (RenglonId = @RenglonId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadOriginal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadOriginal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PqOrd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqOrd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PqRec", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqRec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Precio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "Precio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProveedorID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pais", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProgramaId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrawingId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrawingId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombreProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Text1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MaterialesOC] SET [Id] = @Id, [ClienteId] = @ClienteId, [RenglonId] = @Re" +
                "nglonId, [NumeroParte] = @NumeroParte, [Descripcion] = @Descripcion, [CantidadOr" +
                "iginal] = @CantidadOriginal, [PqOrd] = @PqOrd, [PqRec] = @PqRec, [Precio] = @Pre" +
                "cio, [ProveedorID] = @ProveedorID, [Descripcion_P] = @Descripcion_P, [FechaRecib" +
                "o] = @FechaRecibo, [UnidadMedida] = @UnidadMedida, [FacturaProveedor] = @Factura" +
                "Proveedor, [Pais] = @Pais, [Planta] = @Planta, [Comentario] = @Comentario, [Bult" +
                "os] = @Bultos, [NoGuia] = @NoGuia, [Moneda] = @Moneda, [ProgramaId] = @ProgramaI" +
                "d, [DrawingId] = @DrawingId, [NombreProveedor] = @NombreProveedor, [Text1] = @Te" +
                "xt1 WHERE (([Id] = @Original_Id) AND ([ClienteId] = @Original_ClienteId) AND ([R" +
                "englonId] = @Original_RenglonId) AND ((@IsNull_NumeroParte = 1 AND [NumeroParte]" +
                " IS NULL) OR ([NumeroParte] = @Original_NumeroParte)) AND ((@IsNull_Descripcion " +
                "= 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcion)) AND (" +
                "(@IsNull_CantidadOriginal = 1 AND [CantidadOriginal] IS NULL) OR ([CantidadOrigi" +
                "nal] = @Original_CantidadOriginal)) AND ((@IsNull_PqOrd = 1 AND [PqOrd] IS NULL)" +
                " OR ([PqOrd] = @Original_PqOrd)) AND ((@IsNull_PqRec = 1 AND [PqRec] IS NULL) OR" +
                " ([PqRec] = @Original_PqRec)) AND ((@IsNull_Precio = 1 AND [Precio] IS NULL) OR " +
                "([Precio] = @Original_Precio)) AND ((@IsNull_ProveedorID = 1 AND [ProveedorID] I" +
                "S NULL) OR ([ProveedorID] = @Original_ProveedorID)) AND ((@IsNull_Descripcion_P " +
                "= 1 AND [Descripcion_P] IS NULL) OR ([Descripcion_P] = @Original_Descripcion_P))" +
                " AND ((@IsNull_FechaRecibo = 1 AND [FechaRecibo] IS NULL) OR ([FechaRecibo] = @O" +
                "riginal_FechaRecibo)) AND ((@IsNull_UnidadMedida = 1 AND [UnidadMedida] IS NULL)" +
                " OR ([UnidadMedida] = @Original_UnidadMedida)) AND ((@IsNull_FacturaProveedor = " +
                "1 AND [FacturaProveedor] IS NULL) OR ([FacturaProveedor] = @Original_FacturaProv" +
                "eedor)) AND ((@IsNull_Pais = 1 AND [Pais] IS NULL) OR ([Pais] = @Original_Pais))" +
                " AND ((@IsNull_Planta = 1 AND [Planta] IS NULL) OR ([Planta] = @Original_Planta)" +
                ") AND ((@IsNull_Comentario = 1 AND [Comentario] IS NULL) OR ([Comentario] = @Ori" +
                "ginal_Comentario)) AND ((@IsNull_Bultos = 1 AND [Bultos] IS NULL) OR ([Bultos] =" +
                " @Original_Bultos)) AND ((@IsNull_NoGuia = 1 AND [NoGuia] IS NULL) OR ([NoGuia] " +
                "= @Original_NoGuia)) AND ((@IsNull_Moneda = 1 AND [Moneda] IS NULL) OR ([Moneda]" +
                " = @Original_Moneda)) AND ((@IsNull_ProgramaId = 1 AND [ProgramaId] IS NULL) OR " +
                "([ProgramaId] = @Original_ProgramaId)) AND ((@IsNull_DrawingId = 1 AND [DrawingI" +
                "d] IS NULL) OR ([DrawingId] = @Original_DrawingId)) AND ((@IsNull_NombreProveedo" +
                "r = 1 AND [NombreProveedor] IS NULL) OR ([NombreProveedor] = @Original_NombrePro" +
                "veedor)) AND ((@IsNull_Text1 = 1 AND [Text1] IS NULL) OR ([Text1] = @Original_Te" +
                "xt1)));\r\nSELECT Id, ClienteId, RenglonId, NumeroParte, Descripcion, PqOrd - PqRe" +
                "c AS CantidadAbierta, CantidadOriginal, PqOrd, PqRec, Precio, ProveedorID, Descr" +
                "ipcion_P, FechaRecibo, ISNULL(CantidadRecibida, 0) AS CantidadRecibida, UnidadMe" +
                "dida, FacturaProveedor, Pais, Planta, Comentario, Bultos, NoGuia, Moneda, Progra" +
                "maId, DrawingId, NombreProveedor, Text1 FROM MaterialesOC WHERE (ClienteId = @Cl" +
                "ienteId) AND (Id = @Id) AND (RenglonId = @RenglonId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadOriginal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadOriginal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PqOrd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqOrd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PqRec", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqRec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Precio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "Precio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProveedorID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pais", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProgramaId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrawingId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrawingId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombreProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Text1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClienteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClienteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RenglonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumeroParte", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumeroParte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CantidadOriginal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CantidadOriginal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CantidadOriginal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadOriginal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PqOrd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PqOrd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PqOrd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqOrd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PqRec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PqRec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PqRec", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "PqRec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Precio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Precio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "Precio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProveedorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProveedorID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProveedorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaRecibo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaRecibo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaRecibo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnidadMedida", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnidadMedida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacturaProveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacturaProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pais", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Planta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Planta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comentario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comentario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bultos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoGuia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoGuia", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Moneda", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProgramaId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProgramaId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DrawingId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrawingId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DrawingId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrawingId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NombreProveedor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NombreProveedor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombreProveedor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Text1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Text1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     MaterialesOC.Id, MaterialesOC.ClienteId, MaterialesOC.RenglonId, MaterialesOC.NumeroParte, MaterialesOC.Descripcion, 
                      MaterialesOC.PqOrd - MaterialesOC.PqRec AS CantidadAbierta, MaterialesOC.CantidadOriginal, MaterialesOC.PqOrd, MaterialesOC.PqRec, 
                      MaterialesOC.Precio, MaterialesOC.ProveedorID, MaterialesOC.Descripcion_P, MaterialesOC.FechaRecibo, ISNULL(MaterialesOC.CantidadRecibida, 0) 
                      AS CantidadRecibida, MaterialesOC.UnidadMedida, MaterialesOC.FacturaProveedor, MaterialesOC.Pais, MaterialesOC.Planta, 
                      MaterialesOC.Comentario, MaterialesOC.Bultos, MaterialesOC.NoGuia, MaterialesOC.Moneda, MaterialesOC.ProgramaId, MaterialesOC.DrawingId, 
                      MaterialesOC.NombreProveedor, MaterialesOC.Text1, 0 AS escaneado, CASE WHEN MaterialesITAR.NumeroParte IS NULL 
                      THEN 0 ELSE 1 END AS ITAR, CASE WHEN MaterialesQuimicos.NumeroParte IS NULL THEN 0 ELSE 1 END AS Quimico, 
                      sku_arrivals.dfecha_sku AS fecha_sku
FROM         MaterialesOC LEFT OUTER JOIN
                      sku_arrivals ON MaterialesOC.NoGuia = sku_arrivals.nid_sku LEFT OUTER JOIN
                      MaterialesITAR ON MaterialesOC.NumeroParte = MaterialesITAR.NumeroParte LEFT OUTER JOIN
                      MaterialesQuimicos ON MaterialesOC.NumeroParte = MaterialesQuimicos.NumeroParte";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     MaterialesOC.Id, MaterialesOC.ClienteId, MaterialesOC.RenglonId, Mater" +
                "ialesOC.NumeroParte, MaterialesOC.Descripcion, \r\n                      Materiale" +
                "sOC.PqOrd - MaterialesOC.PqRec AS CantidadAbierta, MaterialesOC.CantidadOriginal" +
                ", MaterialesOC.PqOrd, MaterialesOC.PqRec, \r\n                      MaterialesOC.P" +
                "recio, MaterialesOC.ProveedorID, MaterialesOC.Descripcion_P, MaterialesOC.FechaR" +
                "ecibo, ISNULL(MaterialesOC.CantidadRecibida, 0) \r\n                      AS Canti" +
                "dadRecibida, MaterialesOC.UnidadMedida, MaterialesOC.FacturaProveedor, Materiale" +
                "sOC.Pais, MaterialesOC.Planta, \r\n                      MaterialesOC.Comentario, " +
                "MaterialesOC.Bultos, MaterialesOC.NoGuia, MaterialesOC.Moneda, MaterialesOC.Prog" +
                "ramaId, MaterialesOC.DrawingId, \r\n                      MaterialesOC.NombreProve" +
                "edor, MaterialesOC.Text1, ISNULL(sku_escanear.escaneado, 0) AS escaneado, \r\n    " +
                "                  CASE WHEN MaterialesITAR.NumeroParte IS NULL THEN 0 ELSE 1 END" +
                " AS ITAR, CASE WHEN MaterialesQuimicos.NumeroParte IS NULL \r\n                   " +
                "   THEN 0 ELSE 1 END AS Quimico, ISNULL(sku_arrivals.dfecha_sku, MaterialesOC.Fe" +
                "chaRecibo) AS fecha_sku\r\nFROM         MaterialesOC LEFT OUTER JOIN\r\n            " +
                "          sku_arrivals ON MaterialesOC.NoGuia = sku_arrivals.nid_sku LEFT OUTER " +
                "JOIN\r\n                      MaterialesITAR ON MaterialesOC.NumeroParte = Materia" +
                "lesITAR.NumeroParte LEFT OUTER JOIN\r\n                      MaterialesQuimicos ON" +
                " MaterialesOC.NumeroParte = MaterialesQuimicos.NumeroParte LEFT OUTER JOIN\r\n    " +
                "                  sku_escanear ON MaterialesOC.NoGuia = sku_escanear.nid_sku\r\nWH" +
                "ERE     (MaterialesOC.Id = @Id) AND (ISNULL(MaterialesOC.CantidadRecibida, 0) < " +
                "MaterialesOC.PqOrd - MaterialesOC.PqRec) AND (@cerradas = 0) OR\r\n               " +
                "       (MaterialesOC.Id = @Id) AND (@cerradas = 1)\r\nORDER BY MaterialesOC.Renglo" +
                "nId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cerradas", global::System.Data.SqlDbType.Bit, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE    MaterialesOC\r\nSET              CantidadRecibida = ISNULL(CantidadRecibi" +
                "da, 0) + @CantidadRecibida, Comentario = @Comentario, Bultos = @Bultos, NoGuia =" +
                " @NoGuia\r\nWHERE     (Id = @Id) AND (RenglonId = @RenglonId)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadRecibida", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, "CantidadRecibida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bultos", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"UPDATE    MaterialesOC
SET              NumeroParte = @NumeroParte, Descripcion = @Descripcion, UnidadMedida = @UnidadMedida, FacturaProveedor = @FacturaProveedor, 
                      Pais = @Pais, Planta = @Planta, Comentario = @Comentario, Bultos = @Bultos, Moneda = @Moneda, ProgramaId = @ProgramaId, 
                      NoGuia = @NoGuia
WHERE     (Id = @Id) AND (RenglonId = @RenglonId)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumeroParte", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NumeroParte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnidadMedida", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "UnidadMedida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaProveedor", global::System.Data.SqlDbType.VarChar, 45, global::System.Data.ParameterDirection.Input, 0, 0, "FacturaProveedor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pais", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Planta", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Planta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comentario", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "Comentario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bultos", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Bultos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Moneda", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProgramaId", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ProgramaId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoGuia", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, "NoGuia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenglonId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RenglonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Quimicos.MaterialesOCDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Quimicos.MaterialesOCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Quimicos.MaterialesOCDataTable dataTable = new Quimicos.MaterialesOCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(Quimicos.MaterialesOCDataTable dataTable, int Id, bool cerradas) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(cerradas));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Quimicos.MaterialesOCDataTable GetDataById(int Id, bool cerradas) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(cerradas));
            Quimicos.MaterialesOCDataTable dataTable = new Quimicos.MaterialesOCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Quimicos.MaterialesOCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Quimicos dataSet) {
            return this.Adapter.Update(dataSet, "MaterialesOC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    int Original_ClienteId, 
                    int Original_RenglonId, 
                    string Original_NumeroParte, 
                    string Original_Descripcion, 
                    global::System.Nullable<decimal> Original_CantidadOriginal, 
                    global::System.Nullable<decimal> Original_PqOrd, 
                    global::System.Nullable<decimal> Original_PqRec, 
                    global::System.Nullable<decimal> Original_Precio, 
                    string Original_ProveedorID, 
                    string Original_Descripcion_P, 
                    global::System.Nullable<global::System.DateTime> Original_FechaRecibo, 
                    string Original_UnidadMedida, 
                    string Original_FacturaProveedor, 
                    string Original_Pais, 
                    string Original_Planta, 
                    string Original_Comentario, 
                    global::System.Nullable<int> Original_Bultos, 
                    string Original_NoGuia, 
                    string Original_Moneda, 
                    string Original_ProgramaId, 
                    string Original_DrawingId, 
                    string Original_NombreProveedor, 
                    string Original_Text1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ClienteId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RenglonId));
            if ((Original_NumeroParte == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NumeroParte));
            }
            if ((Original_Descripcion == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Descripcion));
            }
            if ((Original_CantidadOriginal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_CantidadOriginal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_PqOrd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_PqOrd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_PqRec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_PqRec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Precio.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_Precio.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ProveedorID == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ProveedorID));
            }
            if ((Original_Descripcion_P == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Descripcion_P));
            }
            if ((Original_FechaRecibo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_FechaRecibo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_UnidadMedida == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_UnidadMedida));
            }
            if ((Original_FacturaProveedor == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_FacturaProveedor));
            }
            if ((Original_Pais == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Pais));
            }
            if ((Original_Planta == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Planta));
            }
            if ((Original_Comentario == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Comentario));
            }
            if ((Original_Bultos.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_Bultos.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_NoGuia == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_NoGuia));
            }
            if ((Original_Moneda == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Moneda));
            }
            if ((Original_ProgramaId == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_ProgramaId));
            }
            if ((Original_DrawingId == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_DrawingId));
            }
            if ((Original_NombreProveedor == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_NombreProveedor));
            }
            if ((Original_Text1 == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Text1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Id, 
                    int ClienteId, 
                    int RenglonId, 
                    string NumeroParte, 
                    string Descripcion, 
                    global::System.Nullable<decimal> CantidadOriginal, 
                    global::System.Nullable<decimal> PqOrd, 
                    global::System.Nullable<decimal> PqRec, 
                    global::System.Nullable<decimal> Precio, 
                    string ProveedorID, 
                    string Descripcion_P, 
                    global::System.Nullable<global::System.DateTime> FechaRecibo, 
                    string UnidadMedida, 
                    string FacturaProveedor, 
                    string Pais, 
                    string Planta, 
                    string Comentario, 
                    global::System.Nullable<int> Bultos, 
                    string NoGuia, 
                    string Moneda, 
                    string ProgramaId, 
                    string DrawingId, 
                    string NombreProveedor, 
                    string Text1) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ClienteId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(RenglonId));
            if ((NumeroParte == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(NumeroParte));
            }
            if ((Descripcion == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Descripcion));
            }
            if ((CantidadOriginal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CantidadOriginal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PqOrd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PqOrd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PqRec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PqRec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Precio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Precio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ProveedorID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ProveedorID));
            }
            if ((Descripcion_P == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Descripcion_P));
            }
            if ((FechaRecibo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(FechaRecibo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((UnidadMedida == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(UnidadMedida));
            }
            if ((FacturaProveedor == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FacturaProveedor));
            }
            if ((Pais == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Pais));
            }
            if ((Planta == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Planta));
            }
            if ((Comentario == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Comentario));
            }
            if ((Bultos.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Bultos.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((NoGuia == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(NoGuia));
            }
            if ((Moneda == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Moneda));
            }
            if ((ProgramaId == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ProgramaId));
            }
            if ((DrawingId == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(DrawingId));
            }
            if ((NombreProveedor == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(NombreProveedor));
            }
            if ((Text1 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Text1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    int ClienteId, 
                    int RenglonId, 
                    string NumeroParte, 
                    string Descripcion, 
                    global::System.Nullable<decimal> CantidadOriginal, 
                    global::System.Nullable<decimal> PqOrd, 
                    global::System.Nullable<decimal> PqRec, 
                    global::System.Nullable<decimal> Precio, 
                    string ProveedorID, 
                    string Descripcion_P, 
                    global::System.Nullable<global::System.DateTime> FechaRecibo, 
                    string UnidadMedida, 
                    string FacturaProveedor, 
                    string Pais, 
                    string Planta, 
                    string Comentario, 
                    global::System.Nullable<int> Bultos, 
                    string NoGuia, 
                    string Moneda, 
                    string ProgramaId, 
                    string DrawingId, 
                    string NombreProveedor, 
                    string Text1, 
                    int Original_Id, 
                    int Original_ClienteId, 
                    int Original_RenglonId, 
                    string Original_NumeroParte, 
                    string Original_Descripcion, 
                    global::System.Nullable<decimal> Original_CantidadOriginal, 
                    global::System.Nullable<decimal> Original_PqOrd, 
                    global::System.Nullable<decimal> Original_PqRec, 
                    global::System.Nullable<decimal> Original_Precio, 
                    string Original_ProveedorID, 
                    string Original_Descripcion_P, 
                    global::System.Nullable<global::System.DateTime> Original_FechaRecibo, 
                    string Original_UnidadMedida, 
                    string Original_FacturaProveedor, 
                    string Original_Pais, 
                    string Original_Planta, 
                    string Original_Comentario, 
                    global::System.Nullable<int> Original_Bultos, 
                    string Original_NoGuia, 
                    string Original_Moneda, 
                    string Original_ProgramaId, 
                    string Original_DrawingId, 
                    string Original_NombreProveedor, 
                    string Original_Text1) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ClienteId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(RenglonId));
            if ((NumeroParte == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(NumeroParte));
            }
            if ((Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Descripcion));
            }
            if ((CantidadOriginal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CantidadOriginal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PqOrd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PqOrd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PqRec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PqRec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Precio.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Precio.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ProveedorID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ProveedorID));
            }
            if ((Descripcion_P == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Descripcion_P));
            }
            if ((FechaRecibo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(FechaRecibo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((UnidadMedida == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(UnidadMedida));
            }
            if ((FacturaProveedor == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(FacturaProveedor));
            }
            if ((Pais == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Pais));
            }
            if ((Planta == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Planta));
            }
            if ((Comentario == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Comentario));
            }
            if ((Bultos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Bultos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((NoGuia == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(NoGuia));
            }
            if ((Moneda == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Moneda));
            }
            if ((ProgramaId == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ProgramaId));
            }
            if ((DrawingId == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(DrawingId));
            }
            if ((NombreProveedor == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(NombreProveedor));
            }
            if ((Text1 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Text1));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_ClienteId));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_RenglonId));
            if ((Original_NumeroParte == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_NumeroParte));
            }
            if ((Original_Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Descripcion));
            }
            if ((Original_CantidadOriginal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_CantidadOriginal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_PqOrd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_PqOrd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_PqRec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_PqRec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Precio.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_Precio.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_ProveedorID == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_ProveedorID));
            }
            if ((Original_Descripcion_P == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Descripcion_P));
            }
            if ((Original_FechaRecibo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_FechaRecibo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_UnidadMedida == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_UnidadMedida));
            }
            if ((Original_FacturaProveedor == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_FacturaProveedor));
            }
            if ((Original_Pais == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_Pais));
            }
            if ((Original_Planta == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Planta));
            }
            if ((Original_Comentario == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_Comentario));
            }
            if ((Original_Bultos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_Bultos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_NoGuia == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_NoGuia));
            }
            if ((Original_Moneda == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_Moneda));
            }
            if ((Original_ProgramaId == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_ProgramaId));
            }
            if ((Original_DrawingId == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_DrawingId));
            }
            if ((Original_NombreProveedor == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_NombreProveedor));
            }
            if ((Original_Text1 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_Text1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NumeroParte, 
                    string Descripcion, 
                    global::System.Nullable<decimal> CantidadOriginal, 
                    global::System.Nullable<decimal> PqOrd, 
                    global::System.Nullable<decimal> PqRec, 
                    global::System.Nullable<decimal> Precio, 
                    string ProveedorID, 
                    string Descripcion_P, 
                    global::System.Nullable<global::System.DateTime> FechaRecibo, 
                    string UnidadMedida, 
                    string FacturaProveedor, 
                    string Pais, 
                    string Planta, 
                    string Comentario, 
                    global::System.Nullable<int> Bultos, 
                    string NoGuia, 
                    string Moneda, 
                    string ProgramaId, 
                    string DrawingId, 
                    string NombreProveedor, 
                    string Text1, 
                    int Original_Id, 
                    int Original_ClienteId, 
                    int Original_RenglonId, 
                    string Original_NumeroParte, 
                    string Original_Descripcion, 
                    global::System.Nullable<decimal> Original_CantidadOriginal, 
                    global::System.Nullable<decimal> Original_PqOrd, 
                    global::System.Nullable<decimal> Original_PqRec, 
                    global::System.Nullable<decimal> Original_Precio, 
                    string Original_ProveedorID, 
                    string Original_Descripcion_P, 
                    global::System.Nullable<global::System.DateTime> Original_FechaRecibo, 
                    string Original_UnidadMedida, 
                    string Original_FacturaProveedor, 
                    string Original_Pais, 
                    string Original_Planta, 
                    string Original_Comentario, 
                    global::System.Nullable<int> Original_Bultos, 
                    string Original_NoGuia, 
                    string Original_Moneda, 
                    string Original_ProgramaId, 
                    string Original_DrawingId, 
                    string Original_NombreProveedor, 
                    string Original_Text1) {
            return this.Update(Original_Id, Original_ClienteId, Original_RenglonId, NumeroParte, Descripcion, CantidadOriginal, PqOrd, PqRec, Precio, ProveedorID, Descripcion_P, FechaRecibo, UnidadMedida, FacturaProveedor, Pais, Planta, Comentario, Bultos, NoGuia, Moneda, ProgramaId, DrawingId, NombreProveedor, Text1, Original_Id, Original_ClienteId, Original_RenglonId, Original_NumeroParte, Original_Descripcion, Original_CantidadOriginal, Original_PqOrd, Original_PqRec, Original_Precio, Original_ProveedorID, Original_Descripcion_P, Original_FechaRecibo, Original_UnidadMedida, Original_FacturaProveedor, Original_Pais, Original_Planta, Original_Comentario, Original_Bultos, Original_NoGuia, Original_Moneda, Original_ProgramaId, Original_DrawingId, Original_NombreProveedor, Original_Text1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateQuery(global::System.Nullable<decimal> CantidadRecibida, string Comentario, global::System.Nullable<int> Bultos, string NoGuia, int Id, int RenglonId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((CantidadRecibida.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(CantidadRecibida.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Comentario == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Comentario));
            }
            if ((Bultos.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Bultos.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NoGuia == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(NoGuia));
            }
            command.Parameters[4].Value = ((int)(Id));
            command.Parameters[5].Value = ((int)(RenglonId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateSoloInfo(string NumeroParte, string Descripcion, string UnidadMedida, string FacturaProveedor, string Pais, string Planta, string Comentario, global::System.Nullable<int> Bultos, string Moneda, string ProgramaId, string NoGuia, int Id, int RenglonId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NumeroParte == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumeroParte));
            }
            if ((Descripcion == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Descripcion));
            }
            if ((UnidadMedida == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(UnidadMedida));
            }
            if ((FacturaProveedor == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FacturaProveedor));
            }
            if ((Pais == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Pais));
            }
            if ((Planta == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Planta));
            }
            if ((Comentario == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Comentario));
            }
            if ((Bultos.HasValue == true)) {
                command.Parameters[7].Value = ((int)(Bultos.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Moneda == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Moneda));
            }
            if ((ProgramaId == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(ProgramaId));
            }
            if ((NoGuia == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(NoGuia));
            }
            command.Parameters[11].Value = ((int)(Id));
            command.Parameters[12].Value = ((int)(RenglonId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaterialesOCPOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaterialesOCPOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MaterialesOCPO";
            tableMapping.ColumnMappings.Add("Id", "Id");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MaterialCore.Properties.Settings.Default.CoreConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT Id\r\nFROM            MaterialesOC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Quimicos.MaterialesOCPODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Quimicos.MaterialesOCPODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Quimicos.MaterialesOCPODataTable dataTable = new Quimicos.MaterialesOCPODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591